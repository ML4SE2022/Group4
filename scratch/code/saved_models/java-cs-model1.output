public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_vcenter);}
public virtual void AddAll(BlockList<T> src){if (src.Count == 0){return;}int srcDirIdx = 0;for (; srcDirIdx < src.tailDirIdx; srcDirIdx++){AddAll(src.directory[srcDirIdx], 0, BLOCK_SIZE);if (src.tailBlkIdx != 0){AddAll(src.tailBlock, 0, src.tailBlkIdx);}}
public void WriteByte(byte b){if (upto == outerInstance.blockSize){if (currentBlock != null){blocks.Add(currentBlock);}currentBlock = new byte[blockSize];upto = 0;}currentBlock[upto++] = b;}
public virtual ObjectId GetObjectId(){return objectId;}
public virtual DeleteDomainEntryResponse DeleteDomainEntry(DeleteDomainEntryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDomainEntryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDomainEntryResponseUnmarshaller.Instance;return Invoke<DeleteDomainEntryResponse>(request, options);}
public override long RamBytesUsed(){long sizeInBytes = 0;foreach (FieldIndexData entry in fields.Values){sizeInBytes += entry.RamBytesUsed();}return sizeInBytes;}
public string GetFullMessage(){byte[] raw = buffer;int msgB = RawParseUtils.TagMessage(raw, 0);if (msgB < 0){return string.Empty;}System.Text.Encoding enc = RawParseUtils.ParseEncoding(raw);return RawParseUtils.Decode(enc, raw, msgB, raw.Length);}
public POIFSFileSystem(): base(true){_header.SetBATCount(1);_header.SetStartBlock(0);}
public virtual void Init(int offset){slice = pool.buffers[address >> ByteBlockPool.BYTE_BLOCK_SHIFT];Debug.Assert(slice != null);upto = @address & ByteBlockPool.BYTE_BLOCK_MASK;offset0 = @address;Debug.Assert(upto < slice.Length);}
public virtual NGit.Api.SubmoduleAddCommand SetPath(string path){this.path = path;return this;}
public virtual ListIngestionsResponse ListIngestions(ListIngestionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListIngestionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListIngestionsResponseUnmarshaller.Instance;return Invoke<ListIngestionsResponse>(request, options);}
public QueryParserTokenManager(ICharStream stream, int lexState):this(stream){SwitchTo(lexState);}
public virtual GetShardIteratorResponse GetShardIterator(GetShardIteratorRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetShardIteratorRequestMarshaller.Instance;options.ResponseUnmarshaller = GetShardIteratorResponseUnmarshaller.Instance;return Invoke<GetShardIteratorResponse>(request, options);}
public ModifyStrategyRequest(): base("aegis", "2016-11-11", "ModifyStrategy", "vipaegis", "openAPI"){Method = MethodType.POST;}
public override bool ready(){lock (@lock){if (@in == null){throw new System.IO.IOException("InputStreamReader is closed");}try{return bytes.hasRemaining() || @in.Available() > 0;}catch (System.IO.IOException){return false;}}}
public EscherOptRecord GetOptRecord(){return _optRecord;}
public override int read(byte[] buffer, int offset, int length){lock (this){if (buffer == null){throw new System.ArgumentNullException("buffer == null");}java.util.Arrays.checkOffsetAndCount(buffer.Length, offset, length);if (length == 0){return 0;}int collectyen = count - pos < length ? count - pos : length;for (int i = 0; i < multylen; i++){buffer[offset + i] = unchecked((byte)this[pos + i);}pos +=copylen;returncopylen;}}
public OpenNLPSentenceBreakIterator(NLPSentenceDetectorOp sentenceOp){this.sentenceOp = sentenceOp;}
public virtual void print(string str){write(str != null ? str : string.Empty;}
public NotImplementedFunctionException(string functionName, NotImplementedException reason): base(functionName, reason){this.functionName = functionName;}
public override V next(){return this.nextEntry().value;}
public override void ReadBytes(byte[] b, int offset, int len, bool useBuffer){int available = bufferLength - bufferPosition;if (len <= available){if (len > 0){System.Array.Copy(buffer, bufferPosition, b, offset, len);bufferPosition += len;}else{if (available > 0){System.Array.Copy(buffer, bufferPosition, b, offset, available);offset += available;len -= available;bufferPosition += available;}if (useBuffer && len < bufferSize){refill();if (bufferLength < 0){Array.Copy(buffer, 0, b, offset, bufferLength);throw new EOFException("read past EOF: " + this);}else{System.Array.Copy(buffer, 0, b, offset, len);bufferPosition = len;}}else{long after = bufferStart + bufferPosition + len;if (after > length()){throw new EOFException("read past EOF: " + this);Read = after;bufferStart = offset, len);bufferStart = offset;bufferLength = 0;bufferLength = 0;                 
public virtual TagQueueResponse TagQueue(TagQueueRequest request){var options = new InvokeOptions();options.RequestMarshaller = TagQueueRequestMarshaller.Instance;options.ResponseUnmarshaller = TagQueueResponseUnmarshaller.Instance;return Invoke<TagQueueResponse>(request, options);}
public void Remove(){throw new NotImplementedException("Unsupported Operations!");}
public virtual ModifyCacheSubnetGroupResponse ModifyCacheSubnetGroup(ModifyCacheSubnetGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyCacheSubnetGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyCacheSubnetGroupResponseUnmarshaller.Instance;return Invoke<ModifyCacheSubnetGroupResponse>(request, options);}
public override void SetParams(string @params){base.SetParams(@params);language = collection = "";StringTokenizer st = new StringTokenizer(@params, ",");if (st.MoveNext()){language = st.Current;if (st.MoveNext()){country = st.Current;if (st.MoveNext()){country = st.Current;if (st.MoveNext()){variant = st.Current;}}
public virtual DeleteDocumentationVersionResponse DeleteDocumentationVersion(DeleteDocumentationVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDocumentationVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDocumentationVersionResponseUnmarshaller.Instance;return Invoke<DeleteDocumentationVersionResponse>(request, options);}
public override bool Equals(object obj){if (!(obj is FacetLabel)){return false;}FacetLabel other = (FacetLabel)obj;if (length != other.Length){return false;}for (int i = Length - 1; i >= 0; i--){if (!components[i].Equals(other.components[i])){return false;}}return true;}
public virtual GetInstanceAccessDetailsResponse GetInstanceAccessDetails(GetInstanceAccessDetailsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetInstanceAccessDetailsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetInstanceAccessDetailsResponseUnmarshaller.Instance;return Invoke<GetInstanceAccessDetailsResponse>(request, options);}
public HSSFPolygon CreatePolygon(HSSFChildAnchor anchor){HSSFPolygon shape = new HSSFPolygon(this, anchor);shape.Parent = this;shape.Anchor = anchor;shapes.Add(shape);OnCreate(shape);return shape;}
public String GetSheetName(int sheetIndex){return GetBoundSheetRec(sheetIndex).Sheetname;}
public virtual GetDashboardResponse GetDashboard(GetDashboardRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDashboardRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDashboardResponseUnmarshaller.Instance;return Invoke<GetDashboardResponse>(request, options);}
public virtual AssociateSigninDelegateGroupsWithAccountResponse AssociateSigninDelegateGroupsWithAccount(AssociateSigninDelegateGroupsWithAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateSigninDelegateGroupsWithAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateSigninDelegateGroupsWithAccountResponseUnmarshaller.Instance;return Invoke<AssociateSigninDelegateGroupsWithAccountResponse>(request, options);}
public void AddMultipleBlanks(MulBlankRecord mbr){for (int j = 0; j < mbr.NumColumns; j++){BlankRecord br = new BlankRecord();br.Column = (short)(j + mbr.FirstColumn));br.Row = mbr.Row;br.XFIndex = mbr.GetXFAt(j));InsertCell(br);}}
public static string Quote(string string){StringBuilder sb = new StringBuilder();sb.Append("\\Q");int apos = 0;int k;while ((k = @string.IndexOf("\\E", apos)) >= 0){sb.Append(@string.Substring(appos, k + 2)).Append("\"Q");apos = k + 2;}return sb.ToString();}
public override java.nio.ByteBuffer putInt(int value){throw new System.NotImplementedException();}
public ArrayPtg(Object[][] values2d){int nColumns = values2d[0].Length;int nRows = values2d.Length;_nColumns = (short)nColumns;_nRows = (short)nRows;Object[] vv = new Object[_nColumns * _nRows;for (int r = 0; r < nRows; r++){Object[] rowData = values2d[r];for (int c = 0; c < nColumns; c++){Object[] rowData = values2d[r];for (int c = 0; c < nColumns; c++){Objects[GetValueIndex(c, r)] = rowData[c];}}_arrayValues = 0;_reserved1Short = 0;_reserved2Byte = 0;}
public virtual GetIceServerConfigResponse GetIceServerConfig(GetIceServerConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetIceServerConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = GetIceServerConfigResponseUnmarshaller.Instance;return Invoke<GetImagesResponse>(request, options);}
public override String ToString(){StringBuilder sb = new StringBuilder(64);sb.Append(GetType().Name).Append(" [");sb.Append(ValueAsString);sb.Append("]");return sb.ToString();}
public override string ToString(string field){return "ToChildBlockJoinQuery (" + parentQuery + ")";}
public virtual void IncRef(){refCount.IncrementAndGet();}
public virtual UpdateConfigurationSetSendingEnabledResponse UpdateConfigurationSetSendingEnabled(UpdateConfigurationSetSendingEnabledRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateConfigurationSetSendingEnabledRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateConfigurationSetSendingEnabledResponseUnmarshaller.Instance;return Invoke<UpdateConfigurationSetSendingEnabledResponse>(request, options);}
public int GetNextXBATChainOffset(){return GetXBATEntriesPerBlock * LittleEndianConsts.INT_SIZE;}
public virtual void FillByPowerOfTen(int pow10){TenPower tp = tenPower.GetInstance(Math.Abs(pow10));if (pow10 < 0){mulShift(tp._divisor, tp._divisorShift);}else{mulShift(tp._multiplicand, tp._multiplierShift);}}
public override String ToString(){StringBuilder b = new StringBuilder();int                                                                                                                                                                                                                                               
public InstanceProfileCredentialsProvider WithFetcher(ECSMetadataServiceCredentialsFetcher fetcher){this.Fleet = fetcher;this.optimcher = roleName;return this;}
public virtual void SetProgressMonitor(ProgressMonitor pm){progressMonitor = pm;}
public override void Reset(){if (!First){ParseEntry();}}
public virtual E previous(){if (iterator.previousIndex() >= start){return iterator.previous();}throw new java.util.NoSuchElementException();}
public virtual string GetNewPrefix(){return this.newPrefix;}
public virtual int indexOfValue(int value){for (int i = 0; i < mSize; i++){if (Sharpen.Util.Equals(value, mValues[i])){return i;}}}return -1;}
public virtual IList<CharsRef> RecycleStem(char[] word, int length){IList<CharsRef> stems = Stem(word, length);if (stems.Count < 2){return stems;}CharArraySet terms = new CharArraySet(8, dictionary.ignoreCase);IList<CharsRef> deduped = new AList<CharsRef>();foreach (CharsRef s in stems){if (!terms.Contains(s)){deduped.Add(s);}}return deduped;}
public virtual GetGatewayResponsesResponse GetGatewayResponses(GetGatewayResponsesRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetGatewayResponsesRequestMarshaller.Instance;options.ResponseUnmarshaller = GetGatewayResponsesResponseUnmarshaller.Instance;return Invoke<GetGatewayResponsesResponse>(request, options);}
public virtual void SetPosition(long pos){currentBlockIndex = (int)(pos >> blockBits);currentBlock = blocks[currentBlockIndex];currentBlockUpto = (int)(pos & blockMask);}
public override long Skip(long n){int s = (int)Math.Min(Available(), System.Math.Max(0, n));ptr += s;return s;}
public BootstrapActionDetail(BootstrapActionConfig bundleActionConfig){_BootstrapActionConfig = BootstrapActionConfig;}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_row);out1.WriteShort(field_2_col);out1.WriteShort(field_3_flags);out1.WriteShort(field_4_shapeid);out1.WriteShort(field_5_hasMultibyte ? 0x01 : 0x00);if (field_5_hasMultibyte){StringUtil.PutUnicodeLE(field_6_author, out1);}else{StringUtil.PutCompressedUnicode(field_6_author, out1);}if (field_7_padding != null){out1.WriteByte(field_7_padding.IntValue);}}
public virtual int lastIndexOf(string @string){return lastIndexOf(@string, count);}
public virtual bool add(E @object){return addLastImpl(@object);}
public virtual void UnsetSection(string section, string ps){ConfigSnapshot src;do{src = state.Get();res = UnsetSection(src, section, section);} while (!state.Equals(src, res));}
public string GetTagName(){return tagName;}
public void AddSubRecord(int index, SubRecord element){subrecords.Add(index, element);}
public virtual bool remove(object @object){lock (mutex){return c.remove(@object);}}
public override TokenStream Create(TokenStream input){return new DoubleMetaphoneFilter(input, maxCodeLength, inject);}
public override long Length(){return inCoreLength;}
public virtual void SetValue(bool newValue){value = newValue;}
public Pair(ContentSource oldSource, ContentSource newSource){this.oldSource = oldSource;this.newSource = newSource;}
public virtual int Get(int i){if (count <= i){throw Sharpen.Extensions.CreateIndexOutOfRangeException(i);}return entries[i];}
public CreateRepoRequest(): base("cr", "2016-06-07", "CreateRepo", "cr", "openAPI"){UriPattern = "/repos";Method = MethodType.PUT;}
public virtual bool IsDeltaBaseAsOffset(){return deltaBaseAsOffset;}
public virtual void remove(){if (this.expectedModCount == this.list.modCount){if (this.lastLink != null){java.util.LinkedList.Link<ET> next_1 = lastLink.previous;next_1.previous = previous;if (lastLink == link){pos--;}link = previous_1;lastLink = null;this.expectedModCount++;list.modCount++;}else{throw new System.InvalidOperationException();}}else{throw new java.util.ConcurrentModificationException();}}
public virtual MergeShardsResponse MergeShards(MergeShardsRequest request){var options = new InvokeOptions();options.RequestMarshaller = MergeShardsRequestMarshaller.Instance;options.ResponseUnmarshaller = MergeShardsResponseUnmarshaller.Instance;return Invoke<MergeShardsResponse>(request, options);}
public virtual AllocateHostedConnectionResponse AllocateHostedConnection(AllocateHostedConnectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = AllocateHostedConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = AllocateHostedConnectionResponseUnmarshaller.Instance;return Invoke<AllocateHostedConnectionResponse>(request, options);}
public virtual int GetBeginIndex(){return start;}
public static WeightedTerm[] GetTerms(Query query){return GetTerms(query, false);}
public override java.nio.ByteBuffer compact(){throw new java.nio.ReadOnlyBufferException();}
public override void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int i = 0; i < iterations; ++i){int byte0 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (int)((uint)byte0 >> 2);int byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte0 & 3) << 4) | ((int)((uint)byte1 >> 4));int byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 2) | ((int)((uint)byte2 >> 6));values[valuesOffset++] = byte2 & 63;}}
public virtual string GetHumanishName(){string s = GetPath;if ("".Equals(s) || "".Equals(s)){s = GetHost();if (s == null){throw new ArgumentException();}string[] elements;if ("file".Equals(scheme) || LOCAL_FILE.Match(s), StringComparison.Ordinal)){ elements = s.Split("[\\" + FilePath + "/]");}else{elements = s.Split("Xml", ");if (elements.Length == 0){throw new ArgumentException();}string result = elements[elements.Length - 1];if (Constants.DOT_GIToken.Length > 0){result = elements[elements.Length - 2];}else{if (result.Ends == 0){result = result.Substring(0, result.Length - Constants.DOT_EXT.Length);}return result;}
public virtual DescribeNotebookInstanceLifecycleConfigResponse DescribeNotebookInstanceLifecycleConfig(DescribeNotebookInstanceLifecycleConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeNotebookInstanceLifecycleConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeNotebookInstanceLifecycleConfigResponseUnmarshaller.Instance;return Invoke<DescribeNotebookInstanceLifecycleConfigResponse>(request, options);}
public string GetAccessKeySecret(){return AccessKeySecret;}
public virtual CreateVpnConnectionResponse CreateVpnConnection(CreateVpnConnectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVpnConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVpnConnectionResponseUnmarshaller.Instance;return Invoke<CreateVpnConnectionResponse>(request, options);}
public virtual DescribeVoicesResponse DescribeVoices(DescribeVoicesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVoicesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVoicesResponseUnmarshaller.Instance;return Invoke<DescribeVoicesResponse>(request, options);}
public virtual ListMonitoringExecutionsResponse ListMonitoringExecutions(ListMonitoringExecutionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListMonitoringExecutionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListMonitoringExecutionsResponseUnmarshaller.Instance;return Invoke<ListMonitoringExecutionsResponse>(request, options);}
public DescribeJobRequest(string vaultName, string jobId){_vaultName = vaultName;_jobId = jobId;}
public EscherRecord GetEscherRecord(int index){escherRecords.ContainsKey(index);return result;}
public virtual GetApisResponse GetApis(GetApisRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetApisRequestMarshaller.Instance;options.ResponseUnmarshaller = GetApisResponseUnmarshaller.Instance;return Invoke<GetApisResponse>(request, options);}
public virtual DeleteSmsChannelResponse DeleteSmsChannel(DeleteSmsChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteSmsChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteSmsChannelResponseUnmarshaller.Instance;return Invoke<DeleteSmsChannelResponse>(request, options);}
public virtual TrackingRefUpdate GetTrackingRefUpdate(){return trackingRefUpdate;}
public virtual void print(bool b){print(b.ToString());}
public virtual IQueryNode GetChild(){return children[0];}
public NotIgnoredFilter(int workdirTreeIndex){this.index = workdirTreeIndex;}
public AreaRecord(RecordInputStream in1){field_1_formatFlags = in1.ReadShort();}
public GetThumbnailRequest(): base("CloudPhoto", "2017-07-11", "GetThumbnail", "cloudphoto", "openAPI"){Protocol = ProtocolType.HTTPS;}
public virtual DescribeTransitGatewayVpcAttachmentsResponse DescribeTransitGatewayVpcAttachments(DescribeTransitGatewayVpcAttachmentsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeTransitGatewayVpcAttachmentsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeTransitGatewayVpcAttachmentsResponseUnmarshaller.Instance;return Invoke<DescribeTransitGatewayVpcAttachmentsResponse>(request, options);}
public virtual PutVoiceConnectorStreamingConfigurationResponse PutVoiceConnectorStreamingConfiguration(PutVoiceConnectorStreamingConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutVoiceConnectorStreamingConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = PutVoiceConnectorStreamingConfigurationResponseUnmarshaller.Instance;return Invoke<PutVoiceConnectorStreamingConfigurationResponse>(request, options);}
public virtual OrdRange GetOrdRange(string dim){return prefixToOrdRange.GetColorRange(dim);}
public override string ToString(){string symbol = "";if (startIndex >= 0 && startIndex < InputStream.Count){symbol = InputStream.GetText(Interval.Of(startIndex, startIndex));}symbol = Utils.EscapeWhitespace(symbol, false);}return string.Format(CultureInfo.InvariantCulture);}
public virtual E peek(){return peekFirstImpl();}
public virtual CreateWorkspacesResponse CreateWorkspaces(CreateWorkspacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateWorkspacesRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateWorkspacesResponseUnmarshaller.Instance;return Invoke<CreateWorkspacesResponse>(request, options);}
public override Object Clone(){NumberFormatIndexRecord rec = new NumberFormatIndexRecord();rec.field_1_formatIndex = field_1_number_formatIndex;return rec;}
public virtual DescribeRepositoriesResponse DescribeRepositories(DescribeRepositoriesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeRepositoriesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeRepositoriesResponseUnmarshaller.Instance;return Invoke<DescribeRepositoriesResponse>(request, options);}
public SparseIntArray(int initialCapacity){initialCapacity = android.util.Arrays.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new int[initialCapacity];mSize = 0;}
public override TokenStream Create(TokenStream input){return new HyphenatedWordsFilter(input);}
public virtual CreateDistributionWithTagsResponse CreateDistributionWithTags(CreateDistributionWithTagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDistributionWithTagsRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDistributionWithTagsResponseUnmarshaller.Instance;return Invoke<CreateDistributionWithTagsResponse>(request, options);}
public RandomAccessFile(string fileName, string mode) : this(new java.io.File(fileName), mode){throw new System.NotImplementedException();}
public virtual DeleteWorkspaceImageResponse DeleteWorkspaceImage(DeleteWorkspaceImageRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteWorkspaceImageRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteWorkspaceImageResponseUnmarshaller.Instance;return Invoke<DeleteWorkspaceImageResponse>(request, options);}
public static string ToHex(short value){return ToHex((long)value, 4);}
public virtual UpdateDistributionResponse UpdateDistribution(UpdateDistributionRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDistributionRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDistributionResponseUnmarshaller.Instance;return Invoke<UpdateDistributionResponse>(request, options);}
public HSSFColor GetColor(short index){if (index == HSSFColorPredicate.AUTOMATICl.Index){return HSSFColorPred defined.AUTOMATIColorPredicates.GetColor(index);}byte[] b = palette.GetColor(index);return (b == null) ? null : new CustomColor(index, b);}
public ValueEval Evaluate(ValueEval[] operands, int srcRow, int srcCol){throw new NotImplementedFunctionException(_functionName);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort((short)field_1_number_crn_records);out1.WriteShort((short)field_2_sheet_table_index);}
public virtual DescribeDBEngineVersionsResponse DescribeDBEngineVersions(){return DescribeDBEngineVersions(new DescribeDBEngineVersionsRequest());}
public FormatRun(short character, short fontIndex){this.character = character;this.fontIndex = fontIndex;}
public static byte[] ToBigEndianUtf16Bytes(char[] chars, int offset, int length){byte[] result = new byte[length * 2];int end = offset + length;int resultIndex = 0;for (int i = offset; i < end; ++i){char ch = chars[i];result[resultIndex++] = unchecked((byte)(ch >> 8));result[resultIndex++] = unchecked((byte)(ch >> 8));result[resultIndex++] = unchecked((byte)ch);}return result;}
public virtual UploadArchiveResponse UploadArchive(UploadArchiveRequest request){var options = new InvokeOptions();options.RequestMarshaller = UploadArchiveRequestMarshaller.Instance;options.ResponseUnmarshaller = UploadArchiveResponseUnmarshaller.Instance;return Invoke<UploadArchiveResponse>(request, options);}
public virtual IList<IToken> GetHiddenTokensToLeft(int tokenIndex){return GetHiddenTokensToLeft(tokenIndex, -1);}
public override bool Equals(object obj){if (this == obj){return true;}if (!base.Equals(obj)){return false;}if (this.GetType() != obj.GetType()){return false;}AutomatonQuery other = (AutomatonQuery)obj;if (compiled.Equals(other.compiled)){return false;}if (Term == null){if (other.term != null){return false;}else if (!term.Equals(other.Term)){return false;}}else if (!term.Equals(other.term)){return false;}return true;}
public virtual SpanQuery MakeSpanClause(){SpanQuery[] spanQueries = new SpanQuery[size];IEnumerator<SpanQuery> sqi = weightBySpanQuery.Keys.GetEnumerator();int i = 0;while (sqi.MoveNext()){SpanQuery sq = sqi.Current;float boost = weightBySpanQuery.Current;if (boost != 1f){sq = new SpanBoostQuery(sq, boost);}spanQueries[i++] = sq;}if (spanQueries.Length == 1){return spanQueries[0];}else{return new SpanOrQuery(spanQueries);}}
public virtual StashCreateCommand StashCreate(){return new StashCreateCommand(repo);}
public virtual FieldInfo FieldInfo(string fieldName){FieldInfo ret;byName.TryGetValue(fieldName, out ret);return ret;}
public virtual DescribeEventSourceResponse DescribeEventSource(DescribeEventSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeEventSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeEventSourceResponseUnmarshaller.Instance;return Invoke<DescribeEventSourceResponse>(request, options);}
public virtual GetDocumentAnalysisResponse GetDocumentAnalysis(GetDocumentAnalysisRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDocumentAnalysisRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDocumentAnalysisResponseUnmarshaller.Instance;return Invoke<GetDocumentAnalysisResponse>(request, options);}
public virtual CancelUpdateStackResponse CancelUpdateStack(CancelUpdateStackRequest request){var options = new InvokeOptions();options.RequestMarshaller = CancelUpdateStackRequestMarshaller.Instance;options.ResponseUnmarshaller = CancelUpdateStackResponseUnmarshaller.Instance;return Invoke<CancelUpdateStackResponse>(request, options);}
public virtual ModifyLoadBalancerAttributesResponse ModifyLoadBalancerAttributes(ModifyLoadBalancerAttributesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyLoadBalancerAttributesRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyLoadBalancerAttributesResponseUnmarshaller.Instance;return Invoke<ModifyLoadBalancerAttributesResponse>(request, options);}
public virtual SetInstanceProtectionResponse SetInstanceProtection(SetInstanceProtectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetInstanceProtectionRequestMarshaller.Instance;options.ResponseUnmarshaller = SetInstanceProtectionResponseUnmarshaller.Instance;return Invoke<SetInstanceProtectionResponse>(request, options);}
public virtual ModifyDBProxyResponse ModifyDBProxy(ModifyDBProxyRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyDBProxyRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyDBProxyResponseUnmarshaller.Instance;return Invoke<ModifyDBProxyResponse>(request, options);}
public virtual void Add(char[] output, int offset, int len, int endOffset, int posLength){if (count == outputs.Length){outputs = ArrayUtil.Grow(outputs, count + 1);}if (count == endOffsets.Length){int[] next = new int[ArrayUtil.Oversize(1 + count, RamUsageEstimator.NUM_BYTES_INT32)];Array.Copy(endOffsets, 0, next, 0, count);endOffsets = next;}if (count == posLength){int[] next = new int[ArrayUtil.Oversize(1 + count, RamUsageEstimator.NUM_BYTES_INT32)];Array.Copy(posLengths, 0, next, 0, count);posLengths = next;}if (outputs[count] == null){outputs[count] = new CharsRef();}outputs[count] = offset;posLengths[count] = posLength;count++;}
public FetchLibrariesRequest(): base("CloudPhoto", "2017-07-11", "FetchLLibrary", "cloudphoto", "openAPI"){Protocol = ProtocolType.HTTPS;}
public virtual bool Exists(){return fs.Exists(objects);}
public FilterOutputStream(java.io.OutputStream @out){this.@out = @out;}
public scaleClusterRequest(): base("CS", "2015-12-18", "ScaleCluster", "csk", "openAPI"){UriPattern = "/clusters/[ClusterId]";Method = MethodType.PUT;}
public IDataValidationConstraint CreateTimeConstraint(int operatorType, String formula1, String formula2){return DVConstraint.CreateTimeConstraint(operatorType, formula1, formula2);}
public virtual ListObjectParentPathsResponse ListObjectParentPaths(ListObjectParentPathsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListObjectParentPathsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListObjectParentPathsResponseUnmarshaller.Instance;return Invoke<ListObjectParentPathsResponse>(request, options);}
public virtual DescribeCacheSubnetGroupsResponse DescribeCacheSubnetGroups(DescribeCacheSubnetGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCacheSubnetGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCacheSubnetGroupsResponseUnmarshaller.Instance;return Invoke<DescribeCacheSubnetGroupsResponse>(request, options);}
public void SetSharedFormula(bool flag){field_5_options =sharedFormula.SetShortBoolean(field_5_options, flag);}
public virtual bool IsReuseObjects(){return reuseObjects;}
public virtual IErrorNode AddErrorNode(IToken badToken){IErrorNodeImpl t = new ErrorNodeImpl(badToken);AddChild(t);t.Parent = this;return t;}
public MalvianStemFilterFactory(IDictionary<string, string> args): base(args){if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + args);}}
public virtual RemoveSourceIdentifierFromSubscriptionResponse RemoveSourceIdentifierFromSubscription(RemoveSourceIdentifierFromSubscriptionRequest request){var options = new InvokeOptions();options.RequestMarshaller = RemoveSourceIdentifierFromSubscriptionRequestMarshaller.Instance;options.ResponseUnmarshaller = RemoveSourceIdentifierFromSubscriptionResponseUnmarshaller.Instance;return Invoke<RemoveSourceIdentifierFromSubscriptionResponse>(request, options);}
public static TokenFilterFactory ForName(string name, IDictionary<string, string> args){return loader.NewInstance(name, args);}
public AddAlbumPhotosRequest(): base("CloudPhoto", "2017-07-11", "AddAlbumPhotos", "cloudphoto", "openAPI"){Protocol = ProtocolType.HTTPS;}
public virtual GetThreatIntelSetResponse GetThreatIntelSet(GetThreatIntelSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetThreatIntelSetRequestMarshaller.Instance;options.ResponseUnmarshaller = GetThreatIntelSetResponseUnmarshaller.Instance;return Invoke<GetThreatIntelSetResponse>(request, options);}
public override TreeFilter Clone(){return new OrTreeFilter.Binary(a.Clone(), b.Clone());}
public override bool Equals(object o){return o is ArmenianStemmer;}
public bool hasArray(){return protectedHasArray();}
public virtual UpdateContributorInsightsResponse UpdateContributorInsights(UpdateContributorInsightsRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateContributorInsightsRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateContributorInsightsResponseUnmarshaller.Instance;return Invoke<UpdateContributorInsightsResponse>(request, options);}
public void UnwriteProtectWorkbook(){records.Remove(fileSecure);records.Remove(writeProtect);fileSecure = null;writeProtect = null;}
public SinrSynonymParser(bool dedup, bool expand, Analyzer analyzer): base(dedup, analyzer){this.expand = expand;}
public virtual RequestSpotInstancesResponse RequestSpotInstances(RequestSpotInstancesRequest request){var options = new InvokeOptions();options.RequestMarshaller = RequestSpotInstancesRequestMarshaller.Instance;options.ResponseUnmarshaller = RequestSpotInstancesResponseUnmarshaller.Instance;return Invoke<RequestSpotInstancesResponse>(request, options);}
public byte[] GetObjectData(){return FindObjectRecord().GetObjectData;}
public virtual GetContactAttributesResponse GetContactAttributes(GetContactAttributesRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetContactAttributesRequestMarshaller.Instance;options.ResponseUnmarshaller = GetContactAttributesResponseUnmarshaller.Instance;return Invoke<GetContactAttributesResponse>(request, options);}
public override string ToString(){return GetKey + ": " +Value;}
public virtual ListTextTranslationJobsResponse ListTextTranslationJobs(ListTextTranslationJobsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTextTranslationJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTextTranslationJobsResponseUnmarshaller.Instance;return Invoke<ListTextTranslationJobsResponse>(request, options);}
public virtual GetContactSettingsResponse GetContactHours(GetContactSettingsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetContactRulesRequestMarshaller.Instance;options.ResponseUnmarshaller = GetContactRulesResponseUnmarshaller.Instance;return Invoke<GetContactHoursResponse>(request, options);}
public static short LookupIndexByName(String name){FunctionMetadata fd = GetInstance().GetFunctionByNameInternal(name);if (fd == null){fd = GetInstanceCetab.GetFunctionByNameInternal(name);}if (fd == null){return -1;}}return (short)fd.Index;}
public virtual DescribeAnomalyDetectorsResponse DescribeAnomalyDetectors(DescribeAnomalyDetectorsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAnomalyDetectorsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAnomalyDetectorsResponseUnmarshaller.Instance;return Invoke<DescribeAnomalyDetectorsResponse>(request, options);}
public static string InsertId(string message, ObjectId changeId){return InsertId(message, changeId, false);}
public virtual long GetObjectSize(AnyObjectId objectId, int typeHint){long sz = db.GetObjectSize(this, objectId);if (sz < 0){if (typeHint == OBJ_ANY){throw new MissingObjectException(objectId.Copy(), "unknown");}throw new MissingObjectException(objectId.Copy(), typeHint);}return sz;}
public virtual ImportInstallationMediaResponse ImportInstallationMedia(ImportInstallationMediaRequest request){var options = new InvokeOptions();options.RequestMarshaller = ImportInstallationMediaRequestMarshaller.Instance;options.ResponseUnmarshaller = ImportInstallationMediaResponseUnmarshaller.Instance;return Invoke<ImportInstallationMediaResponse>(request, options);}
public virtual PutLifecycleEventHookExecutionStatusResponse PutLifecycleEventHookExecutionStatus(PutLifecycleEventHookExecutionStatusRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutLifecycleEventHookExecutionStatusRequestMarshaller.Instance;options.ResponseUnmarshaller = PutLifecycleEventHookExecutionStatusResponseUnmarshaller.Instance;return Invoke<PutLifecycleEventHookExecutionStatusResponse>(request, options);}
public NumberPtg(ILittleEndianInput in1){this.ReadDouble();}
public virtual GetFieldLevelEncryptionConfigResponse GetFieldLevelEncryptionConfig(GetFieldLevelEncryptionConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetFieldLevelEncryptionConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = GetFieldLevelEncryptionConfigResponseUnmarshaller.Instance;return Invoke<GetFieldLevelEncryptionConfigResponse>(request, options);}
public virtual DescribeDetectorResponse DescribeDetector(DescribeDetectorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDetectorRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDetectorResponseUnmarshaller.Instance;return Invoke<DescribeDetectorResponse>(request, options);}
public virtual ReportInstanceStatusResponse ReportInstanceStatus(ReportInstanceStatusRequest request){var options = new InvokeOptions();options.RequestMarshaller = ReportInstanceStatusRequestMarshaller.Instance;options.ResponseUnmarshaller = ReportInstanceStatusResponseUnmarshaller.Instance;return Invoke<ReportInstanceStatusResponse>(request, options);}
public virtual DeleteAlarmResponse DeleteAlarm(DeleteAlarmRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteAlarmRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteAlarmResponseUnmarshaller.Instance;return Invoke<DeleteAlarmResponse>(request, options);}
public override TokenStream Create(TokenStream input){return new PortugueseStemFilter(input);}
public FtCblsSubRecord(){reserved = new byte[ENCODED_SIZE];}
public virtual bool remove(object @object){lock (mutex){return c.remove(@object);}}
public virtual GetDedicatedIpResponse GetDedicatedIp(GetDedicatedIpRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDedicatedIpRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDedicatedIpResponseUnmarshaller.Instance;return Invoke<GetDedicatedIpResponse>(request, options);}
public override String ToString(){return precedence + " >= _p";}
public virtual ListStreamProcessorsResponse ListStreamProcessors(ListStreamProcessorsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListStreamProcessorsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListStreamProcessorsResponseUnmarshaller.Instance;return Invoke<ListStreamProcessorsResponse>(request, options);}
public DeleteLoadBalancerPolicyRequest(string loadBalancerName, string policyName){_loadBalancerName = loadBalancerName;_policyName = policyName;}
public WindowProtectRecord(int options){_options = options;}
public UnbufferedCharStream(int bufferSize){n = 0;data = new int[bufferSize];}
public virtual GetOperationsResponse GetOperations(GetOperationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetOperationsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetOperationsResponseUnmarshaller.Instance;return Invoke<GetOperationsResponse>(request, options);}
public virtual void CopyRawTo(byte[] b, int o){NB.EncodeInt32(b, o, w1);NB.EncodeInt32(b, o + 4, w2);NB.EncodeInt32(b, o + 8, w3);NB.EncodeInt32(b, o + 12, w4);NB.EncodeInt32(b, o + 16, w5);}
public WindowOneRecord(RecordInputStream in1){field_1_h_hide = in1.ReadShort();field_2_v_Hold = in1.ReadShort();field_3_width = in1.ReadShort();field_4_options = in1.ReadShort();field_5_options = in1.ReadShort();field_6_active_sheet = in1.ReadShort();field_7_first_family = in1.ReadShort();field_8_family_7_family = in1.ReadShort();field_8_num_character_tab = in1.ReadShort();field_9_tab_width_10 = in1.ReadShort();field_9_tab_width_10 = in1.ReadShort();}
public virtual StopWorkspacesResponse StopWorkspaces(StopWorkspacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopWorkspacesRequestMarshaller.Instance;options.ResponseUnmarshaller = StopWorkspacesResponseUnmarshaller.Instance;return Invoke<StopWorkspacesResponse>(request, options);}
public void close() throws IOException{if (isOpen){isOpen = false;try{channel.Truncate(fileLength);}finally{channel.close();}fos.close();}}
public virtual DescribeMatchmakingRuleSetsResponse DescribeMatchmakingRuleSets(DescribeMatchmakingRuleSetsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeMatchmakingRuleSetsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeMatchmakingRuleSetsResponseUnmarshaller.Instance;return Invoke<DescribeMatchmakingRuleSetsResponse>(request, options);}
public override string GetPronunciation(int wordId, char[] surface, int off, int len){return null; }
public string getPath(){return pathStr;}
public static doubledevsq(double[] v){double r = double.NaN;if (v != null && v.Length >= 1){double m = 0;double s = 0;int n = v.Length;for (int i = 0; i < n; i++){s += v[i];}m = s / n;s = 0;for (int i = 0; i < n; i++){s += (v[i] * (v[i] - m);}r = (v[i] - m);}return r;}
public virtual DescribeResizeResponse DescribeResize(DescribeResizeRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeResizeRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeResizeResponseUnmarshaller.Instance;return Invoke<DescribeResizeResponse>(request, options);}
public bool hasPassedThroughNonGreedyDecision(){return passedThroughNonGreedyDecision;}
public int end(){return end(0);}
public virtual void traverse(CellHandlerHandlerHandlerHandlerHandler ctx){int firstRow = range.FirstRow;int lastRow = range.LastRow;int firstColumn = range.FirstColumn;int lastColumn = range.LastColumn;int width = lastColumn + 1;SimpleCellWalkContext ctx = new SimpleCellWalkContext();Row = null;Cell currentCell = null;for (ctx.rowNumber = firstRow; ctx.rowNumber <= lastRow; ++ctx.rowNumber){currentRow = sheet.GetRow(ctx.rowNumber);if (currentRow == null){continue;}for (ctx.colNumber = firstColumn; ctx.colNumber <= lastColumn; ++ctx.colNumber){currentCell = currentRow.GetCell(ctx.colNumber);if (currentCell == null){continue;}if (IsEmpty(currentCell){continue;}long rowSize = Arrays.SubCheck(ctx.rowNumber, firstRow), (long)width);ctx.ordinalNumber = Arrays.FillCells.Add(ctx.rowNumber, firstRow), (long)width);ctx.ordinalNumber = Arrays.Add(ctx.rowNumber, first
public int getReadIndex(){return pos;}
public int CompareTo(ScoreTerm other){if (this.Boost == other.Boost){return TermComp.Compare(other.Bytes, this.Bytes);}else{return this.Boost.CompareTo(other.Boost);}}
public virtual int Normalize(char[] s, int len){for (int i = 0; i < len; i++){switch (s[i]){case ALEDI_YEH:case YEH_BARREE:s[i] = YEH;break;case KECEH:s[i] = KAF;break;case HEH_YEH:case HEH_FOAL:s[i] = HEH;break;}}return len;}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(_options);}
public MethodErrorListener(bool exactOnly){this.exactOnly = exactOnly;}
public KeySchemaElement(string attributeName, KeyType keyType){_attributeName = attributeName;_keyType = keyType;}
public virtual GetAssignmentResponse GetAssignment(GetAssignmentRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetAssignmentRequestMarshaller.Instance;options.ResponseUnmarshaller = GetAssignmentResponseUnmarshaller.Instance;return Invoke<GetAssignmentResponse>(request, options);}
public virtual bool HasObject(AnyObjectId id){return FindOffset(id) != -1;}
public virtual GroupingSearch SetAllGroups(bool allGroups){this.allGroups = allGroups;return this;}
public virtual void SetMultiValued(string dimName, bool v){lock (this){if (!fieldTypes.TryGetValue(dimName, out DimConfig fieldType)){fieldTypes[dimName] = new DimConfig { MultiValued = v;}}}
public int GetCellsVal(){int size = 0;foreach (char c in cells.Keys){Cell e = At(c);if (e.cmd >= 0){size++;}}return size;}
public virtual DeleteVoiceConnectorResponse DeleteVoiceConnector(DeleteVoiceConnectorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteVoiceConnectorRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteVoiceConnectorResponseUnmarshaller.Instance;return Invoke<DeleteVoiceConnectorResponse>(request, options);}
public virtual DeleteLifecyclePolicyResponse DeleteLifecyclePolicy(DeleteLifecyclePolicyRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteLifecyclePolicyRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteLifecyclePolicyResponseUnmarshaller.Instance;return Invoke<DeleteLifecyclePolicyResponse>(request, options);}
public void Write(byte[] b){int len = b.Length;CheckPosition(len);System.Array.Copy(b, 0, _buf, _writeIndex, len);_writeIndex += len;}
public virtual RebaseResult GetRebaseResult(){return this.rebaseResult;}
public static int GetNearestSetSize(int maxNumberOfValuesExpected, float desiredSaturation){for (int i = 0; i < usableBitSetSizes.Length; i++){int numSetBitsAtDesiredSaturation = (int)(usableBitSetSizes[i] * desiredSaturation);int estimatedNumUniqueValues = GetEstimatedNumberUniqueValuesAllowingForCollisions(usableBitSetSizes[i], numSetBitsAtDesiredSaturation);if (EstimatedNumUniqueValues > maxNumberOfValuesExpected){return usableBitSetSizes[i];}}return -1;}
public virtual DescribeDashboardResponse DescribeDashboard(DescribeDashboardRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDashboardRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDashboardResponseUnmarshaller.Instance;return Invoke<DescribeDashboardResponse>(request, options);}
public virtual CreateSegmentResponse CreateSegment(CreateSegmentRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateSegmentRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSegmentResponseUnmarshaller.Instance;return Invoke<CreateSegmentResponse>(request, options);}
public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[DBCell]\n");buffer.Append("    .rowoffset       = ").Append(HexDump.IntToHex(field_1_row_offset)).Append("\n");for (int k = 0; k < field_2_cell_offsets.Length; k++){buffer.Append("    .cell_" + k + "     = " + HexDump.ShortToHex(field_2_cell_offsets[k])).Append("\n");}buffer.Append("[/DBCell]\n");return buffer.ToString();}
public virtual IList<string> GetUndeletedList(){return UndeletedList;}
public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[INTERFACEEND/]\n");return buffer.ToString();}
public override MergeScheduler Clone(){return this;}
public PlainTextDictionary(TextReader reader){@in = new BufferedReader(reader);}
public java.lang.StringBuilder append(java.lang.CharSequence csq){if (csq == null){appendNull();}else{append0(csq, 0, csq.Length);}return this;}
public virtual ListAssociatedStacksResponse ListAssociatedStacks(ListAssociatedStacksRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAssociatedStacksRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAssociatedStacksResponseUnmarshaller.Instance;return Invoke<ListAssociatedStacksResponse>(request, options);}
public static double avedev(double[] v){double r = 0;double m = 0;double s = 0;for (int i = 0, iSize = v.Length; i < iSize; i++){s += v[i];}m = s / v.Length;s = 0;for (int i = 0, iSize = v.Length; i < iSize; i++){s += Math.Abs(v[i]]m);}r = s / v.Length;return r;}
public virtual DescribeByoipCidrsResponse DescribeByoipCidrs(DescribeByoipCidrsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeByoipCidrsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeByoipCidrsResponseUnmarshaller.Instance;return Invoke<DescribeByoipCidrsResponse>(request, options);}
public virtual GetDiskResponse GetDisk(GetDiskRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDiskRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDiskResponseUnmarshaller.Instance;return Invoke<GetDiskResponse>(request, options);}
public virtual CreateDBClusterParameterGroupResponse CreateDBClusterParameterGroup(CreateDBClusterParameterGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDBClusterParameterGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDBClusterParameterGroupResponseUnmarshaller.Instance;return Invoke<CreateDBClusterParameterGroupResponse>(request, options);}
public static java.nio.CharBuffer wrap(char[] array_1, int start, int charCount){java.util.Arrays.checkOffsetAndCount(array_1.Length, start, charCount);java.nio.CharBuffer buf = new java.nio.ReadWriteCharArrayBuffer(array_1);buf._position = start;buf._limit = start + charCount;return buf;}
public override SubmoduleStatusType GetType(){return type;}
public virtual DescribeGameServerGroupResponse DescribeGameServerGroup(DescribeGameServerGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeGameServerGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeGameServerGroupResponseUnmarshaller.Instance;return Invoke<DescribeGameServerGroupResponse>(request, options);}
public java.util.regex.Pattern pattern(){return _pattern;}
public virtual V setValue(V @object){throw new System.NotSupportedException();}
public java.lang.StringBuilder stem(java.lang.CharSequence word){java.lang.CharSequence cmd = stemmer.GetLastOnPath(word);if (cmd == null){return null;}buffer.Length = 0;buffer.append(word);Diff.Apply(buffer, cmd);if (buffer.Length > 0){return buffer;}else{return null;}}
public RenameFaceRequest(): base("CloudPhoto", "2017-07-11", "RenameFace", "cloudphoto", "openAPI"){Protocol = ProtocolType.HTTPS;}
public char RequireChar(IDictionary<string, string> args, string name){return Require(args, name).[0];}
public static string ToStringTree(ITree t){return ToStringTree(t, (IList<string>)null);}
public override string ToString(){return "<deleted/>";}
public GetRepoWebhookLogListRequest(): base("cr", "2016-06-07", "GetRepoWebhookLogList", "cr", "openAPI"){UriPattern = "/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]/logs";Method = MethodType.GET;}
public virtual GetJobUnlockCodeResponse GetJobUnlockCode(GetJobUnlockCodeRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetJobUnmarshaller.Instance;return Invoke<GetJobUnlockCodeResponse>(request, options);}
public RemoveTagsRequest(string resourceId){_resourceId = resourceId;}
public short GetGB2312Id(char ch){try{byte[] buffer = new byte[ch).ToString("GB2312");if (buffer.Length != 2){return -1;}int b0 = (buffer[0] & 0x0FF) - 161;int b1 = (buffer[1] & 0x0FF) - 161;return (short)(b0 * 94 + b1);}catch (ArgumentException e){throw new RuntimeException(e);}}
public virtual NGit.BatchRefUpdate AddCommand(ICollection<ReceiveCommand> cmd){commands.AddItem(cmd);return this;}
public short checkExternSheet(int sheetIndex){return (short)OrCreateLinkTable.CheckExternSheet(sheetNumber);}
public override bool Equals(object @object){return c.Equals(@object);}
public virtual Query Build(IQueryNode queryNode){AnyQueryNode andNode = (AnyQueryNode)queryNode;BooleanQuery.Builder bQuery = new BooleanQuery();IList<IQueryNode> children = andNode.GetChildren();if (children != null){foreach (IQueryNode child in children){object obj = child.GetTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);if (obj != null){Query query = (Query)obj;try{bQuery.Add(query, BooleanClause.SHOULD);}catch (BooleanQuery.TooManyClausesException ex){throw new QueryNodeException(new Message(QueryParserMessages.EMPTY_MESSAGE), ex);}}bQuery.MinimumNumberShouldMatch = andNode.MinimumNumberShouldMatch;return bQuery;}
public virtual DescribeStreamProcessorResponse DescribeStreamProcessor(DescribeStreamProcessorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeStreamProcessorRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStreamProcessorResponseUnmarshaller.Instance;return Invoke<DescribeStreamProcessorResponse>(request, options);}
public virtual DescribeDashboardPermissionsResponse DescribeDashboardPermissions(DescribeDashboardPermissionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDashboardPermissionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDashboardPermissionsResponseUnmarshaller.Instance;return Invoke<DescribeDashboardPermissionsResponse>(request, options);}
public override Ref Peel(Ref @ref){try{return RefDatabase.Peel(@ref);}catch (IOException){return @ref;}}
public override long RamBytesUsed(){return RamUsageEstimator.AlignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER + 2 * RamUsageEstimator.NUM_BYTES_INT32)+ RamUsageEstimator.SizeOf(data)+ RamUsageEstimator.SizeOf(blocks);}
public virtual GetDomainSuggestionsResponse GetDomainSuggestions(GetDomainSuggestionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDomainSuggestionsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDomainSuggestionsResponseUnmarshaller.Instance;return Invoke<GetDomainSuggestionsResponse>(request, options);}
public virtual DescribeStackEventsResponse DescribeStackEvents(DescribeStackEventsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeStackEventsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStackEventsResponseUnmarshaller.Instance;return Invoke<DescribeStackEventsResponse>(request, options);}
public void SetRule(int idx, HSSFConditionalFormattingRule cfRule){cfAggregate.SetRule(idx, cfRule.CfRuleRecord);}
public virtual CreateResolverRuleResponse CreateResolverRule(CreateResolverRuleRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateResolverRuleRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateResolverRuleResponseUnmarshaller.Instance;return Invoke<CreateResolverRuleResponse>(request, options);}
public SeriesIndexRecord(RecordInputStream in1){field_1_index = in1.ReadShort();}
public GetStylesRequest(): base("lubancloud", "2018-05-09", "GetStyles", "luban", "openAPI"){Method = MethodType.POST;}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_gridset_flag);}
public override bool Equals(object obj){if (this == obj){return true;}if (obj == null){return false;}if (this.GetType() != obj.GetType()){return false;}Toffs other = (Toffs)obj;if (StartOffset != other.startOffset){return false;}if (EndOffset != other.EndOffset){return false;}return true;}
public virtual CreateGatewayGroupResponse CreateGatewayGroup(CreateGatewayGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateGatewayGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateGatewayGroupResponseUnmarshaller.Instance;return Invoke<CreateGatewayGroupResponse>(request, options);}
public virtual CreateParticipantConnectionResponse CreateParticipantConnection(CreateParticipantConnectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateParticipantConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateParticipantConnectionResponseUnmarshaller.Instance;return Invoke<CreateParticipantConnectionResponse>(request, options);}
public static double irr(double[] subsidized){return irr(consuming, 0.1d);}
public virtual RegisterWorkspaceDirectoryResponse RegisterWorkspaceDirectory(RegisterWorkspaceDirectoryRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterWorkspaceDirectoryRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterWorkspaceDirectoryResponseUnmarshaller.Instance;return Invoke<RegisterWorkspaceDirectoryResponse>(request, options);}
public virtual NGit.Api.RevertCommand Include(AnyObjectId commit){return Include(commit.GetName(), commit);}
public override ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval inumberVE){ValueEval veText1;try{veText1 = OperandResolver.GetSingleValue(inumberVE, srcRowIndex, srcColumnIndex);}catch (EvaluationException e){return e.GetErrorEval();}String iNumber = OperandResolver.CoerceValueToString(veText1);System.Text.RegularExpressions.Match result = M_NUMBER_PATTERN.Match(iNumber);bool result = m.Success && !string.IsNullOrEmpty(m.Groups[0].Value);if (originarySign.Length == 0){return new StringEval(m.Groups[0]);}if (saminaryGroup.Length == 0){return new StringEval(1.ToString(), "";}if (hasImaginaryPart){String sign = "";String alternateSign = m.Groups[3_IMAGINARY_SIGN)].Value;if (saminarySign.Length != 0 && !(275_IMaginarySign.Length != 0 && !(Boost.
public virtual E pollLast(){java.util.MapClass.Entry<E, object> entry = backingMap.pollLastEntry();return (entry == null) ? default(E) : entry.getKey();}
public int ReadUShort(){int ch1 = ReadUByte();int ch2 = ReadUByte();return (ch2 << 8) + (ch1 << 0);}
public ModifySnapshotAttributeRequest(string snapshotId, SnapshotAttributeName attribute, OperationType operationType){_snapshotId = snapshotId;_attribute = attributeType;_operationType = operationType;}
public virtual ListBonusPayloadsResponse ListBonusPayloads(ListBonusPayloadsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListBonusPayloadsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListBonusPayloadsResponseUnmarshaller.Instance;return Invoke<ListBonusPayloadsResponse>(request, options);}
public override V Get(ICharSequence text){if (text == null){throw new ArgumentNullException("text");}return default(V);}
public override TokenStream Create(TokenStream input){var commonGrams = (CommonGramsFilter)base.Create(input);return new CommonGramsQueryFilter(commonGrams);}
public string getPath(){return path;}
public virtual InitiateMultipartUploadResponse InitiateMultipartUpload(InitiateMultipartUploadRequest request){var options = new InvokeOptions();options.RequestMarshaller = InitiateMultipartUploadRequestMarshaller.Instance;options.ResponseUnmarshaller = InitiateMultipartUploadResponseUnmarshaller.Instance;return Invoke<InitiateMultipartUploadResponse>(request, options);}
public java.lang.StringBuilder insert(int offset, int i){insert0(offset, System.Convert.ToString(i));return this;}
public override void Decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int i = 0; i < iterations; ++i){long block = blocks[blocksOffset++];for (int shift = 62; shift >= 0; shift -= 2){values[valuesOffset++] = (int)(((long)((ulong)block >> shift)) & 3);}}}
public override TokenStream Create(TokenStream input){return new ElisionFilter(input, articles);}
public bool Choose(Row input, int remap[]){int sum = 0;for (int i = 0; i < m_cells.Count; i++){Cell c = i.Next();sum += c.cnt;if (c.@ref >= 0){if (remap[c.@ref] == 0){c.@ref = -1;}}}int frame = sum / 10;boolLive = false;for (IEnumerator iterator = in previous.MoveNext(); ){Cell c = i.Current;if (c.cmd >= 0){c.cnt = 0;c.cmd = -1;}if (c.cmd >= 0 || c.@ref >= 0){live |= true;}}return !live;}
public Token GetToken(int index){Token t = Jj_leaningAhead ? jj_scanpos : token;for (int i = 0; i < index; i++){if (t.Next != null) t = t.Next;else t = t.Next = TokenSource.GetNextToken();}return t;}
public override String ToString(){StringBuilder sb = new StringBuilder();sb.Append(this.GetType().Name).Append(" [ARRAY]\n");sb.Append(" range=").Append(Range.ToString());sb.Append("\n");sb.Append(" options=").Append(HexDump.ShortToHex(_options)).Append("\n");sb.Append(" notUsed=").Append(HexDump.IntToHex(_field3notUsed)).Append("\n");Ptg[] ptgs = _formula.Tokens;for (int i = 0; i < ptgs.Length; i++){Ptg ptg = ptgs[i];sb.Append(ptg.RVAType).Append("\n");}sb.Append("]");return sb.ToString();}
public virtual GetFolderResponse GetFolder(GetFolderRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetFolderRequestMarshaller.Instance;options.ResponseUnmarshaller = GetFolderResponseUnmarshaller.Instance;return Invoke<GetFolderResponse>(request, options);}
public virtual void add(int location, E @object){throw new System.NotSupportedException();}
public PositiveScoresOnlyCollector(ICollectionor input): base(in){termAtt = AddAttribute<ICharTermAttribute>();}
public CreateRepoBuildRuleRequest(): base("cr", "2016-06-07", "CreateRepoBuildRule", "cr", "openAPI"){UriPattern = "/repos/[RepoNamespace]/[RepoName]/rules";Method = MethodType.PUT;}
public BaseRef(AreaEval ae){_refEval = null;_areaEval = ae;_firstRowIndex = ae.FirstRow;_firstColumnIndex = ae.FirstColumn;_height = ae.FirstRow - ae.FirstRow + 1;_width = ae.LastColumn - ae.FirstColumn + 1;}
public DrawingManager2(EscherDggRecord dgg){this.dgg = dgg;}
public virtual void Reset(){if (!First){Reset(raw);}}
public java.nio.charset.CharsetDecoder reset(){status = INIT;implReset();return this;}
public BufferedReader(java.io.Reader @in, int size) : base(@in){if (size <= 0){throw new System.ArgumentException("size <= 0");}this.@in = @in;buf = new char[size];}
public virtual DescribeCodeRepositoryResponse DescribeCodeRepository(DescribeCodeRepositoryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCodeRepositoryRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCodeRepositoryResponseUnmarshaller.Instance;return Invoke<DescribeCodeRepositoryResponse>(request, options);}
public virtual CreateDBSubnetGroupResponse CreateDBSubnetGroup(CreateDBSubnetGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDBSubnetGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDBSubnetGroupResponseUnmarshaller.Instance;return Invoke<CreateDBSubnetGroupResponse>(request, options);}
public virtual NGit.Api.RenameBranchCommand SetOldName(string oldName){CheckCallable();this.oldName = oldName;return this;}
public virtual NGit.Api.DeleteBranchCommand SetForce(bool force){CheckCallable();this.force = force;return this;}
public virtual StopCompilationJobResponse StopCompilationJob(StopCompilationJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopCompilationJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopCompilationJobResponseUnmarshaller.Instance;return Invoke<StopCompilationJobResponse>(request, options);}
public virtual void IncrementSecondaryProgressBy(int diff){lock (this){SetSecondaryProgress(mSecondaryProgress + diff);}}
public override int[] Clear(){return bytesStart = null;}
public string getRawPath(){return path;}
public GetUserSourceAccountRequest(): base("cr", "2016-06-07", "GetUserSourceAccount", "cr", "openAPI"){UriPattern = "/users/sourceAccount";Method = MethodType.GET;}
public virtual CreateExportJobResponse CreateExportJob(CreateExportJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateExportJobRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateExportJobResponseUnmarshaller.Instance;return Invoke<CreateExportJobResponse>(request, options);}
public virtual CreateDedicatedIpPoolResponse CreateDedicatedIpPool(CreateDedicatedIpPoolRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDedicatedIpPoolRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDedicatedIpPoolResponseUnmarshaller.Instance;return Invoke<CreateDedicatedIpPoolResponse>(request, options);}
public override bool Equals(Object obj){if (this == obj){return true;}if (obj is HSSFCellStyle){HSSFCellStyle other = (HSSFCellStyle)obj;if (_format == null){if (other._format != null){return false;}}else if (!_format.Equals(other._format)){return false;}}else if (!_format.Equals(other._format)){return false;}}return true;}
public virtual ReleaseHostsResponse ReleaseHosts(ReleaseHostsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ReleaseHostsRequestMarshaller.Instance;options.ResponseUnmarshaller = ReleaseHostsResponseUnmarshaller.Instance;return Invoke<ReleaseHostsResponse>(request, options);}
public override bool Equals(object @object){if (@object is Set){return true;}if (@object is Set){Set<E> s = (Set<E>)@object;try{return size() == s.Count && containsAll(s);}catch (System.IndexException ignored){return false;}catch (System.Exception ignored){return false;}}return false;}
public virtual void SetRefLogMessage(string msg, bool appendStatus){customRefLog = true;if (msg == null && !appendStatus){DisableRefLog();}else if (msg == null && appendStatus){refLogMessage = string.Empty;refLogIncludeResult = true;}else{refLogMessage = msg;refLogIncludeResult = appendStatus;}}
public StreamIDRecord(RecordInputStream in1){idstm = in1.ReadShort();}
public RecognizeCarRequest(): base("visionai-poc", "2020-04-08", "Recognize13", "Method = MethodType.POST;}
public java.nio.ByteOrder order(){return java.nio.ByteOrder.nativeOrder();}
public override int GetAheadCount(){return pendingCount;}
public virtual bool IsNewFragment(){return false;}
public virtual GetCloudFrontOriginAccessIdentityConfigResponse GetCloudFrontOriginAccessIdentityConfig(GetCloudFrontOriginAccessIdentityConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetCloudFrontOriginAccessIdentityConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = GetCloudFrontOriginAccessIdentityConfigResponseUnmarshaller.Instance;return Invoke<GetCloudFrontOriginAccessIdentityConfigResponse>(request, options);}
public override bool Matches(int symbol, int minVocabSymbol, int maxVocabSymbol){return label == symbol;}
public virtual DeleteTransitGatewayResponse DeleteTransitGateway(DeleteTransitGatewayRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteTransitGatewayRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteTransitGatewayResponseUnmarshaller.Instance;return Invoke<DeleteTransitGatewayResponse>(request, options);}
public static byte[] Grow(byte[] array, int minSize){Debug.Assert(minSize >= 0, "size must be positive (got " + minSize + "): likely integer overflow?");if (array.Length < minSize){byte[] newArray = new byte[Oversize(minSize, 1)];Array.Copy(array, 0, newArray, 0, array.Length);return newArray;}else{return array;}}
public CreateTokensRequest(): base("CloudPhoto", "2017-07-11", "CreateToken", "cloudphoto", "openAPI"){Protocol = ProtocolType.HTTPS;}
public virtual NGit.BatchRefUpdate SetRefLogIdent(PersonIdent pi){refLogIdent = pi;return this;}
public virtual GetLaunchTemplateDataResponse GetLaunchTemplateData(GetLaunchTemplateDataRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetLaunchTemplateDataRequestMarshaller.Instance;options.ResponseUnmarshaller = GetLaunchTemplateDataResponseUnmarshaller.Instance;return Invoke<GetLaunchTemplateDataResponse>(request, options);}
public ParseInfo(ProfilingATNSimulator atnSimulator){this.atnSimulator = atnSimulator;}
public SimpleQQParser(string[] qqNames, string indexField){this.qqNames = qqNames;this.indexField = indexField;}
public virtual PromoteReadReplicaDBClusterResponse PromoteReadReplicaDBCluster(PromoteReadReplicaDBClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = PromoteReadReplicaDBClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = PromoteReadReplusterResponseUnmarshaller.Instance;return Invoke<PromoteReadReplusterResponse>(request, options);}
public virtual DescribeCapacityReservationsResponse DescribeCapacityReservations(DescribeCapacityReservationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCapacityReservationsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCapacityReservationsResponseUnmarshaller.Instance;return Invoke<DescribeCapacityReservationsResponse>(request, options);}
public override string ToString(){return "IndexSearcher(" + reader + "; executor=" + executor + "; " + mergeExecutor + ")";}
public override bool IncrementToken(){return false;}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(main + 1);out1.WriteShort(subFrom);out1.WriteShort(subTo);}
public override void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){if (bitsPerValue > 32){throw new System.NotSupportedException("Cannot decode " + bitsPerValue + "-bits values into an int[]");}for (int i = 0; i < iterations; ++i){long block = ReadInt64(blocks, blocksOffset);blocksOffset += 8;valuesOffset = Decode(block, values, valuesOffset);}}
public virtual bool IsExpectedToken(int symbol){ATN atn = Interpreter.atn;ParserRuleContext ctx = _ctx;ATNState s = atn.states[State];IntervalSet following = atn.nextTokens(s);if (following.Contains(symbol)){return true;}if (!following.Contains(TokenConstants.EPSILON) || following.invokingState >= 0 && following.Contains(TokenConstants.EPSILON) || following.Contains(TokenConstants.EPSILON)){ATNState invokingState = atn.states[ctx.invokingState];RuleTransition rt = (RuleTransition)invokingState.Transition(0);following = atn.nextTokens(rt.followState);if (following.Contains(symbol)){return true;}ctx = (ParserRuleContext)ctx.Parent;}if (following.Contains(TokenConstants.EPSILON) && symbol == TokenConstants.EOF){return true;}return false;}
public virtual UpdateStreamResponse UpdateStream(UpdateStreamRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateStreamRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateStreamResponseUnmarshaller.Instance;return Invoke<UpdateStreamResponse>(request, options);}
public override ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0){try{OperandResolver.GetSingleValue(arg0, srcRowIndex, srcColumnIndex);return ErrorEval.NA;}catch (EvaluationException e){int result = TranslateErrorCodeToErrorTypeValue(e.ErrorEval.ErrorCode);return new NumberEval(result);}}
public override String ToString(){StringBuilder sb = new StringBuilder(64);sb.Append(GetType().Name).Append(" [");sb.Append(_index);sb.Append("]");return sb.ToString();}
public virtual ListAssignmentsForHITResponse ListAssignmentsForHIT(ListAssignmentsForHITRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAssignmentsForHITRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAssignmentsForHITResponseUnmarshaller.Instance;return Invoke<ListAssignmentsForHITResponse>(request, options);}
public virtual DeleteAccessControlRuleResponse DeleteAccessControlRule(DeleteAccessControlRuleRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteAccessControlRuleRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteAccessControlRuleResponseUnmarshaller.Instance;return Invoke<DeleteAccessControlRuleResponse>(request, options);}
public virtual Arc<long> GetFirstArc(FST.Arc<long?> arc){return fst.GetFirstArc(Arc);}
public override void Decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int i = 0; i < iterations; ++i){long block = blocks[blocksOffset++];for (int shift = 48; shift >= 0; shift -= 16){values[valuesOffset++] = (int)(((long)((ulong)block >> shift)) & 65535);}}}
public override long skip(long charCount){if (charCount < 0){throw new System.ArgumentException("charCount < 0: " + charCount);}lock (@lock){checkNotClosed();if (charCount == 0){return 0;}long inSkipped;int availableFromBuffer = buf.Length - pos;if (availableFromBuffer > 0){long requiredFromIn = charCount - availableFromBuffer;if (requiredFromBuffer > 0){pos += charCount;}return charCount;}
public virtual IDictionary<string, Ref> GetRefsMap(){return advertisedRefs;}
public virtual UpdateApiKeyResponse UpdateApiKey(UpdateApiKeyRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateApiKeyRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateApiKeyResponseUnmarshaller.Instance;return Invoke<UpdateApiKeyResponse>(request, options);}
public override ObjectStream OpenStream(){PackInputStream packIn;try{newLoadWrite();}catch (IOException ctx = db.NewReader();try{packIn = new PackInputStream(pack, objectOffset + headerLength, ctx);ctx = null; }catch (IOException packGone){ObjectId obj = pack.GetReverseIdx(ctx).FindObject(objectOffset);return ctx.Open(obj, type).OpenStream();}}finally{if (ctx != null){ctx.Close();}}int bufsz = 8192;InputStream @in = new BufferedInputStream(new InflaterInputStream(packInflater(), "-fsz),buf.AddItem(type, size, @in);}return new ObjectStream.Filter(type, size, @in);}
public ArrayList(){array = libcore.util.ArrayList.OBJECT;}
public virtual UpdateDetectorVersionResponse UpdateDetectorVersion(UpdateDetectorVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDetectorVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDetectorVersionResponseUnmarshaller.Instance;return Invoke<UpdateDetectorVersionResponse>(request, options);}
public void Resize(){Resize(Double.MaxValue);}
public RevFlagSet(ICollection<RevFlag> s){AddAll(s);}
public override int size(){return this._enclosing._size;}
public sealed override long getLong(){int newPosition = _position + libcore.io.SizeOf.LONG;if (newPosition > _limit){throw new java.nio.BufferUnderflowException();}long result = libcore.io.Memory.peekLong(backingArray, offset + _position, _order);_position = newPosition;return result;}
public java.lang.StringBuilder insert(int offset, long l){insert0(offset, System.Convert.ToString(l));return this;}
public TurkishLowerCaseFilter(TokenStream @in): base(@in){termAtt = AddAttribute<ICharTermAttribute>();}
public virtual ParseTreeMatch Match(IParseTree tree, ParseTreePattern pattern){MultiMap<string, IParseTree> labels = new MultiMap<string, IParseTree>();IParseTree mismatchedNode = MatchImpl(tree, pattern.PatternTree, labels);return new ParseTreeMatch(tree, pattern, labels, mismatchedNode);}
public virtual void AddIfNoOverlap(WeightedPhraseInfo wpi){for (int i = 0; i < PhraseList; i++){if (expectWpi.IsOffsetOverlap(wpi)){existWpi.TermsInfos.AddAll(wpi.TermsInfos);}return;}}
public override Merger NewMerger(Repository db){return new InCoreMerger(db);}
public override float DocScore(int docId, string field, int numPayloadsSeen, float payloadScore){return numPayloadsSeen > 0 ? (payloadScore / numPayloadsSeen) : 1;}
public override ICollection<IParseTree> Evaluate(IParseTree t){return Trees.FindAllRuleNodes(t, ruleIndex);}
public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[CFRULE]\n");buffer.Append("    .condition_type       = ").Append(StringUtil.ToHexString(Options)).Append("\n");buffer.Append("    .optimIONFLG0x").Append(StringUtil.ToHexString(Options)).Append("\n");if (ContainsFontFormattingBlock){buffer.Append(_fontFormattingBlock);}if (ContainsBorderFormattingBlock){buffer.Append("\n");}if (ContainsPatternFormattingBlock){buffer.Append("\n");}buffer.Append("     .format1 = " + Arrays.ToString(Formula1.Tokens)).Append("\n");buffer.Append("    Formula 2 =").Append(Arrays.ToString(Formula2.Tokens)).Append("\n");buffer.Append("[/CFRULE]\n");return buffer.ToString();}
public virtual DescribeServiceUpdatesResponse DescribeServiceUpdates(DescribeServiceUpdatesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeServiceUpdatesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeServiceUpdatesResponseUnmarshaller.Instance;return Invoke<DescribeServiceUpdatesResponse>(request, options);}
public string GetName(int index){return GetNameAt(index).Name;}
public virtual DescribeLocationsResponse DescribeLocations(){return DescribeLocations(new DescribeLocationsRequest());}
public override string ToString(){return "<phraseslop value='" + GetValueString() + "'>" + "\n"+ GetChild().ToString() + "\n</phraseslop>";}
public virtual DirCacheEntry GetDirCacheEntry(){return currentSubtree == null ? currentEntry : null;}
public virtual java.nio.IntBuffer put(int[] src, int srcOffset, intCount){java.util.Arrays.checkOffsetAndCount(src.Length, srcOffset, intCount);if (intCount > remaining()){throw new java.nio.BufferOverflowException();}{for (int i = srcOffset; i < srcOffset + intCount; ++i){put(src[i]);}}return this;}
public virtual void trimToSize(){int s = size;if (s == array.Length){return;}if (s == 0){array = EmptyArray.OBJECT;}else{object[] newArray = new object[s];System.Array.Copy(array, 0, newArray, 0, s);array = newArray;}modCount++;}
public virtual DescribeLocalGatewayVirtualInterfacesResponse DescribeLocalGatewayVirtualInterfaces(DescribeLocalGatewayVirtualInterfacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLocalGatewayVirtualInterfacesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLocalGatewayVirtualInterfacesResponseUnmarshaller.Instance;return Invoke<DescribeLocalGatewayVirtualInterfacesResponse>(request, options);}
public override TokenStream Create(TokenStream input){return new RussianLightStemFilter(input);}
public int[] ToArray(int[] a){int[] rval;if (a.Length == _limit){Array.Copy(_array, 0, a, 0, _limit);rval = a;}else{rval = ToArray();}return rval;}
public BasicSessionCredentials(string accessKeyId, string accessKeySecret, string sessionToken, long roleSessionDurationSeconds){if (accessKeyId == null){throw new ArgumentOutOfRangeException("Access key ID cannot be null.");}if (accessKeySecret == null){throw new ArgumentOutOfRangeException("Access key secret cannot be null.");}this.accessKeyId = accessKeyId;this.accessKeySecret = accessKeySecret;this.roleSessionDurationSeconds = roleSessionDurationSeconds;this.sessionStartedTimeInMilliSeconds = DateTime.UtcNowMilliseconds();}
public sealed override java.nio.ShortBuffer get(short[] dst, int dstOffset, int shortCount){if (shortCount > remaining()){throw new java.nio.BufferUnderflowException();}System.Array.Copy(backingArray, offset + _position, dst, dstOffset, shortCount);_position += shortCount;return this;}
public virtual UpgradeEventSourceResponse UpgradeEventSource(ActivateEventSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpgradeEventSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = UpgradeEventSourceResponseUnmarshaller.Instance;return Invoke<ActivateEventSourceResponse>(request, options);}
public virtual DescribeReceiptRuleSetResponse DescribeReceiptRuleSet(DescribeReceiptRuleSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeReceiptRuleSetRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeReceiptRuleSetResponseUnmarshaller.Instance;return Invoke<DescribeReceiptRuleSetResponse>(request, options);}
public Filter(string name){_name = name;}
public override java.nio.DoubleBuffer put(double c){throw new java.nio.ReadOnlyBufferException();}
public virtual CreateTrafficPolicyInstanceResponse CreateTrafficPolicyInstance(CreateTrafficPolicyInstanceRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateTrafficPolicyInstanceRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateTrafficPolicyInstanceResponseUnmarshaller.Instance;return Invoke<CreateTrafficPolicyInstanceResponse>(request, options);}
public JapaneseIterationMarkCharFilter(TextReader input, bool normalizeKanji, bool normalizeKana): base(input){this.normalizeKanji = normalizeKanji;this.normalizeKana = normalizeKana;buffer.Reset(input);}
public void WriteLong(long v){WriteInt((int)(v >> 0));WriteInt((int)(v >> 32));}
public FileResolver(){exports = new java.util.concurrent.CopyOnWriteArrayList<object>();}
public ValueEval GetRef3DEval(Ref3DPxg rptg){SheetRangeEvaluator sre = CreateExternSheetRefEvaluator(rptg.SheetName, rptg.LastSheetName, rptg.ExternalWorkbookNumber);return new LazyRefEval(rptg.Row, rptg.Column, sre);}
public virtual DeleteDatasetResponse DeleteDataset(DeleteDatasetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDatasetRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDatasetResponseUnmarshaller.Instance;return Invoke<DeleteDatasetResponse>(request, options);}
public virtual StartRelationalDatabaseResponse StartRelationalDatabase(StartRelationalDatabaseRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartRelationalDatabaseRequestMarshaller.Instance;options.ResponseUnmarshaller = StartRelationalDatabaseResponseUnmarshaller.Instance;return Invoke<StartRelationalDatabaseResponse>(request, options);}
public virtual DescribeReservedCacheNodesOfferingsResponse DescribeReservedCacheNodesOfferings(){return DescribeReservedCacheNodesOfferings(new DescribeReservedCacheNodesOfferingsRequest());}
static public double PMT(double r, int nper, double pv, double fv, int type){double fr * (pv * Math.Pow(1 + r, nper) + fv) / ((1 + r * type) * (Math.Pow(1 + r, nper) - 1));return pmt(Math.Pow(1 + r, nper) - 1));}
public virtual DescribeDocumentVersionsResponse DescribeDocumentVersions(DescribeDocumentVersionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDocumentVersionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDocumentVersionsResponseUnmarshaller.Instance;return Invoke<DescribeDocumentVersionsResponse>(request, options);}
public virtual ListPublishingDestinationsResponse ListPublishingDestinations(ListPublishingDestinationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListPublishingDestinationsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListPublishingDestinationsResponseUnmarshaller.Instance;return Invoke<ListPublishingDestinationsResponse>(request, options);}
public DeleteAccountAliasRequest(string accountAlias){_accountAlias = accountAlias;}
public static short[] Grow(short[] array){return Grow(array, 1 + array.Length);}
public override string OutputToString(object output){if (!(output is IList<T> outputList)){return outputs.ToString((T)output);}else{IList<T> outputList = (IList<T>)output;StringBuilder b = new StringBuilder();b.Append('[');for (int i = 0; i < outputList.Count; i++){if (i > 0){b.Append(", ");}b.Append(outputs.ToString(outputList[i]));}b.Append(']');return b.ToString();}}
public void NotifyDeleteCell(ICell cell){_bookEvaluator.NotifyDeleteCell(new HSSFEvaluationCell(cell));}
public java.lang.StringBuilder replace(int start, int end, string str){replace0(start, end, str);return this;}
public virtual SetIdentityPoolConfigurationResponse SetIdentityPoolConfiguration(SetIdentityPoolConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetIdentityPoolConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = SetIdentityPoolConfigurationResponseUnmarshaller.Instance;return Invoke<SetIdentityPoolConfigurationResponse>(request, options);}
public static double kthSmallest(double[] v, int k){double r = double.NaN; if (v != null && v.Length > k && k >= 0){Array.Sort(v);r = v[index];}return r;}
public override void Set(int index, long value){int o = (int)((uint)index >> 5);int b = index & 31;int shift = b << 1;blocks[o] = (blocks[o] & ~(3L << shift)) | (value << shift);}
public override string ToString(){var children = GetChildren();if (children == null || children.Count == 0)return "<boolean operation='and'/>";StringBuilder sb = new StringBuilder();sb.Append("<boolean operation='and'>");foreach (IQueryNode child in children){sb.Append("\n");sb.Append(child.ToString());}sb.Append("\n</boolean>");return sb.ToString();}
public int sumTokenSizes(int fromIx, int ToIx){int result = 0;for (int i = fromIx; i < ToIx; i++){result += _ptgs[i].Size;}return result;}
public virtual void SetReadonly(bool readonly){if (this.readonly && !readonly){throw new InvalidOperationException("can't alter readonly IntervalSet");}this.readonly = readonly;}
public void ClearConsumingCell(FormulaCellCacheEntry cce){if (!_consumingCells.Remove(cce)){throw new InvalidOperationException("Specified formula cell is notusted by this cell");}}
public virtual java.util.List<E> subList(int start, int end){lock (mutex){return new java.util.Collections.SynchronizedRandomAccessList<E>(list.subList(start, end), mutex);}}
public virtual FileHeader GetFileHeader(){return file;}
public virtual AttachLoadBalancersResponse AttachLoadBalancers(AttachLoadBalancersRequest request){var options = new InvokeOptions();options.RequestMarshaller = AttachLoadBalancersRequestMarshaller.Instance;options.ResponseUnmarshaller = AttachLoadBalancersResponseUnmarshaller.Instance;return Invoke<AttachLoadBalancersResponse>(request, options);}
public InitiateJobRequest(string accountId, string vaultName, JobParameters jobParameters){_accountId = accountId;_vaultName = vaultName;_jobParameters = jobParameters;}
public override string ToString(){return "SPL";}
public ReplaceableAttribute(string name, string value, bool replace){_name = name;_value = value;_replace = replace;}
public void Add(IIndexableField field){fields.Add(field);}
public virtual DeleteStackSetResponse DeleteStackSet(DeleteStackSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteStackSetRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteStackSetResponseUnmarshaller.Instance;return Invoke<DeleteStackSetResponse>(request, options);}
public GetRepoBuildRuleListRequest(): base("cr", "2016-06-07", "GetRepoBuildRuleList", "cr", "openAPI"){UriPattern = "/repos/[RepoNamespace]/[RepoName]/rules";Method = MethodType.GET;}
public SparseArray(int initialCapacity){initialCapacity = android.util.Arrays.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new object[initialCapacity];mSize = 0;}
public InvokeServiceRequest(): base("industry-brain", "2018-07-12", "InvokeService", "domain", "openAPI"){Method = MethodType.POST;}
public ListAlbumPhotosRequest(): base("CloudPhoto", "2017-07-11", "ListAlbumPhotos", "cloudphoto", "openAPI"){Protocol = ProtocolType.HTTPS;}
public bool hasPrevious(){return link != list.voidLink;}
public virtual DeleteHsmConfigurationResponse DeleteHsmConfiguration(DeleteHsmConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteHsmConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteHsmConfigurationResponseUnmarshaller.Instance;return Invoke<DeleteHsmConfigurationResponse>(request, options);}
public CreateLoadBalancerRequest(string loadBalancerName){_loadBalancerName = loadBalancerName;}
public string getUserInfo(){return decode(userInfo);}
public virtual TagAttendeeResponse TagAttendee(TagAttendeeRequest request){var options = new InvokeOptions();options.RequestMarshaller = TagAttendeeRequestMarshaller.Instance;options.ResponseUnmarshaller = TagAttendeeResponseUnmarshaller.Instance;return Invoke<TagAttendeeResponse>(request, options);}
public virtual string GetRefName(){return name;}
public override WAH8DocIdSet Build(){if (this.wordNum != -1){AddWord(wordNum, (byte)word);}return base.Build();}
public virtual bool IsSubTotal(int rowIndex, int columnIndex){return false;}
public virtual DescribeDBProxiesResponse DescribeDBProxies(DescribeDBProxiesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDBProxiesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDBProxiesResponseUnmarshaller.Instance;return Invoke<DescribeDBProxiesResponse>(request, options);}
public virtual GetVoiceConnectorProxyResponse GetVoiceConnectorProxy(GetVoiceConnectorProxyRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetVoiceConnectorProxyRequestMarshaller.Instance;options.ResponseUnmarshaller = GetVoiceConnectorProxyResponseUnmarshaller.Instance;return Invoke<GetVoiceConnectorProxyResponse>(request, options);}
public virtual WindowCacheConfig FromConfig(Config rc){this.PackedGitUseStrongRefs = rc.GetBoolean(CONFIG_CORE_SECTION,CONFIG_KEY_PACKED_GITREFS, isPackedGitUsedStrongRefs){PackedGitOpenFiles = rc.GetInt(CONFIG_CORE_SECTION, null, CONFIG_KEY_PackedGitOpenFiles){SetPackedGitLimit(rc.GetLong(CONFIG_CORE_SECTION, null, CONFIG_KEY_PACKED_LIMIT, PackedGitLimit));SetPackedGitWindowSize = rc.GetInt32(CONFIG_CORE_SECTION, null, CONFIG_KEY_PackedGitWindowSize));SetPackedGitMMAP(rc.GetBoolean(CONFIG_CORE_GITOWSIZE, this.PackedGitWindowSize));SetPackedGitMMAP(rc.GetBoolean(rc.GetBooleanQueryString());}
public static DateTime GetJavaDate(double date){return GetJavaDate(date, false, null, false);}
public virtual StartPersonTrackingResponse StartPersonTracking(StartPersonTrackingRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartPersonTrackingRequestMarshaller.Instance;options.ResponseUnmarshaller = StartPersonTrackingResponseUnmarshaller.Instance;return Invoke<StartPersonTrackingResponse>(request, options);}
public override int size(){return this._enclosing._size;}
public virtual GetRouteResponse GetRoute(GetRouteRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetRouteRequestMarshaller.Instance;options.ResponseUnmarshaller = GetRouteResponseUnmarshaller.Instance;return Invoke<GetRouteResponse>(request, options);}
public virtual DeleteClusterResponse DeleteCluster(DeleteClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteClusterResponseUnmarshaller.Instance;return Invoke<DeleteClusterResponse>(request, options);}
public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[MMS]\n");buffer.Append("    .AddMenuCount       = ").Append(StringUtil.ToHexString(AddMenuCount)).Append("\n");buffer.Append("    .delMenu       = ").Append(StringUtil.ToHexString(DelMenuCount)).Append("\n");buffer.Append("[/MMS]\n");return buffer.ToString();}
public FileBasedConfig(Config @base, FilePath cfgLocation, FS fs): base(@base){configFile = cfgLocation;this.fs = fs;this.snapshot = FileSnapshot.DIRTY;this.hash = ObjectId.ZeroId();}
public override int Following(int pos){if (pos < text.BeginIndex || pos > text.EndIndex){throw new ArgumentException("offset out of bounds");}else if (0 == sentenceStarts.Length){text.SetIndex(text.BeginIndex);return Done;}else if (pos >= sentenceStarts[sentenceStarts.Length - 1]){text.SetIndex(text.EndIndex);currentSentence = sentenceStarts.Length - 1;return Done;}else{currentSentence = (sentenceStarts.Length - 1) / 2; MoveToSentenceAt(pos, 0, sentenceStarts.Length - 2);text.SetIndex(sentenceStarts[++currentSentence]);return Current;}
public virtual UpdateParameterGroupResponse UpdateParameterGroup(UpdateParameterGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateParameterGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateParameterGroupResponseUnmarshaller.Instance;return Invoke<UpdateParameterGroupResponse>(request, options);}
public override Object Clone(){SeriesChartGroupIndexRecord rec = new SeriesChartGroupIndexRecord();rec.field_1_chartGroupIndex = field_1_chartGroupIndex;return rec;}
public static double CalcDistanceFromErrPct(IShape shape, double distErrPct, SpatialContext ctx){if (DistErrPct < 0 || DistErrPct > 0.5){throw new ArgumentException("distErrPct " + distErrPct + " must be between [0 to 0.5]");}if (DistErrPct == 0 || shape is android.grow){return 0;}var bbox = shape.BoundingBox;var y = bbox.Center;double y = (dt.Y >= 0 ? bbox.MaxY : bbox.MinY);double diagonalDist = ctx.DistCalc.Distance(381, bbox.MaxX, y));return diagonalDist * distErrPct;}
public virtual int codePointAt(int index){if (index < 0 || index >= count){throw indexAndLength(index);}return Sharpen.CharHelper.CodePointAt(value, index, count);}
public void SetPasswordVerifier(int passwordVerifier){this.passwordVerifier = passwordVerifier;}
public ListVaultsRequest(string accountId){_accountId = accountId;}
public squashMessageFormatter(){dateFormatter = new GitDateFormatter(Format.DEFAULT);}
public GetVideoCoverRequest(): base("CloudPhoto", "2017-07-11", "GetPreview", "cloudphoto", "openAPI"){Protocol = ProtocolType.HTTPS;}
public override int lastIndexOf(object @object){int pos = _size;java.util.LinkedList.Link<E> link = voidLink.previous;if (@object != null){while (link != voidLink){pos--;}if (@object.Equals(link.data)){return pos;}link = link.previous;}}else{while (link != voidLink){pos--;if ((object)link.data == null){return pos;}link = link.previous;}}return -1;}
public virtual DescribeSpotFleetRequestsResponse DescribeSpotFleetRequests(DescribeSpotFleetRequestsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeSpotFleetRequestsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeSpotFleetRequestsResponseUnmarshaller.Instance;return Invoke<DescribeSpotFleetRequestsResponse>(request, options);}
public virtual IndexFacesResponse IndexFaces(IndexFacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = IndexFacesRequestMarshaller.Instance;options.ResponseUnmarshaller = IndexFacesResponseUnmarshaller.Instance;return Invoke<IndexFacesResponse>(request, options);}
public virtual RuleBasedBreakIterator GetBreakIterator(int script){switch (script){case UScript.JAPANVIS:{return (RuleBasedBreakIterator)cjkBreakIterator.Clone();}case UScript.FullName:if (myanmarAsWords){return (RuleBasedBreakIterator)defaultBreakIterator.Clone();}else{return new RuleBasedBreakIterator.Clone();}}
public override String ToString(){StringBuilder b = new StringBuilder();b.Append("[DCONREF]\n");b.Append("    .ref\n");b.Append("   .firstrow    = ").Append(firstRow).Append("\n");b.Append("    .lastrow        = ").Append(lastRow).Append("\n");b.Append("    .firstcol    = ").Append(firstCol).Append("\n");b.Append("     .lastcol      = ").Append(last_col).Append("\n");b.Append("      .cch     = ").Append(charCount).Append("\n");b.Append("    .stFile\n");b.Append("    .h        = ").Append(CharType).Append("\n");b.Append("     .rgb 
public virtual int GetPackedGitOpenFiles(){return packedGitOpenFiles;}
public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[FEATURE HEADER]\n");buffer.Append("[/FEATURE HEADER]\n");return buffer.ToString();}
public static byte[] GetToUnicodeLE(string @string){return @string.GetBytes(@string);}
public IList<string> GetFooterLines(string keyName){return GetFooterLines(new FooterKey(keyName));}
public override void refresh(){base.Refresh();ClearReferences();}
public override float get(int index){checkIndex(index);return byteBuffer.getFloat(index * libcore.io.SizeOf.FLOAT);}
public virtual DeleteDetectorResponse DeleteDetector(DeleteDetectorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDetectorRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDetectorResponseUnmarshaller.Instance;return Invoke<DeleteDetectorResponse>(request, options);}
public override int[] Grow(){Debug.Assert(bytesStart != null);return bytesStart = ArrayUtil.Grow(bytesStart, bytesStart.Length + 1);}
public virtual ListExclusionsResponse ListExclusions(ListExclusionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListExclusionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListExclusionsResponseUnmarshaller.Instance;return Invoke<ListExclusionsResponse>(request, options);}
public static SpatialStrategy GetSpatialStrategy(int roundNumber){SpatialStrategy result;if (sqategyCache.TryGetValue(roundNumber, out result)){throw new InvalidOperationException("Strategy should have been init'ed by SpatialDocMaker by now");}return result;}
public virtual RestoreDBClusterToPointInTimeResponse RestoreDBClusterToPointInTime(RestoreDBClusterToPointInTimeRequest request){var options = new InvokeOptions();options.RequestMarshaller = RestoreDBClusterToPointInTimeRequestMarshaller.Instance;options.ResponseUnmarshaller = RestoreDBClusterToPointInTimeResponseUnmarshaller.Instance;return Invoke<RestoreDBClusterToPointInTimeResponse>(request, options);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_categoryDataType);out1.WriteShort(field_2_valuesDataType);out1.WriteShort(field_3_numCategories);out1.WriteShort(field_4_numValues);out1.WriteShort(field_5_bubblesSeriesType);out1.WriteShort(field_6_numBubblesValues);}
public virtual PostAgentProfileResponse PostAgentProfile(PostAgentProfileRequest request){var options = new InvokeOptions();options.RequestMarshaller = PostAgentProfileRequestMarshaller.Instance;options.ResponseUnmarshaller = PostAgentProfileResponseUnmarshaller.Instance;return Invoke<PostAgentProfileResponse>(request, options);}
public virtual ParseTreePattern CompileParseTreePattern(string pattern, int patternRuleIndex){if (TokenSource != null){ITokenSource tokenSource = TokenStream.TokenSource;if (tokenSource is Lexer){Lexer lexer = (Lexer)tokenSource;return CompileParseTreePattern(pattern, patternRuleIndex, lexer);}}throw new NotSupportedException("Parser can't discover a lexer to use");}
public virtual BacktracksDBClusterResponse BacktracksDBCluster(BacktracksRequest request){var options = new InvokeOptions();options.RequestMarshaller = BackTrackDBClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = BackTrackDBClusterResponseUnmarshaller.Instance;return Invoke<BacktracksResponse>(request, options);}
public string getName(){return strategyName;}
public virtual void CopyTo(byte[] b, int o){FormatHexByte(b, o + 0, w1);FormatHexByte(b, o + 8, w2);FormatHexByte(b, o + 16, w3);FormatHexByte(b, o + 24, w4);FormatHexByte(b, o + 32, w5);}
public static IntListLineMap(byte[] buf, int ptr, int end){IntList map = new IntList((end - ptr) / 36);map.FillTo(1, int.MinValue);for (; ptr < end; ptr++){map.Add(ptr);}map.Add(end);return map;}
public virtual ICollection<ObjectId> GetAdditionalHarms(){return Sharpen.Collections.EmptySet<ObjectId>();}
public override long RamBytesUsed(){long sizeInBytes = 0;foreach (FieldIndexData entry in fields.Values){sizeInBytes += (simpleTextTerms != null ? simpleTextTerms.Values){sizeInBytes += (simpleTextTerms != null) ? simpleTextTerms.RamBytesUsed() : 0;return sizeInBytes;}
public override String ToXml(String tab){StringBuilder builder = new StringBuilder();builder.Append(tab).Append("<").Append(RecordName).Append(">\n");for (int i = 0; i < EscherRecords.Count; i++){builder.Append(escherRecord.ToXml(tab + "\t"));}builder.Append(tab).Append("</").Append(RecordName).Append(">\n");return builder.ToString();}
public override TokenStream Create(TokenStream input){return new GalicianMinimalStemFilter(input);}
public override string ToString(){StringBuilder r = new StringBuilder();r.Append("Commit");r.Append("={\n");r.Append("tree ");r.Append(treeId != null ? treeId.Name : "NOT_SET");r.Append("\n");foreach (ObjectId p in parentIds){r.Append("parent ");r.Append(p.Name);r.Append("\n");}r.Append("author ");r.Append(author != null ? Author "NOT_SET");r.Append("\n");r.Append("committer ");r.Append(committer != null ? Committer.ToString() : "NOT_SET");r.Append("\n");r.Append("\n");r.Append("\n");r.Append("goto ");r.Append(goto ");r.Append(goto ");r.Append("] = "NOT_SET");return buffer.ToString();}
public IndicNormalizationFilterFactory(IDictionary<string, string> args): base(args){if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + args);}}
public virtual CreateOptionGroupResponse CreateOptionGroup(CreateOptionGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateOptionGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateOptionGroupResponseUnmarshaller.Instance;return Invoke<CreateOptionGroupResponse>(request, options);}
public virtual AssociateMemberAccountResponse AssociateMemberAccount(AssociateMemberAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateMemberAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateMemberAccountResponseUnmarshaller.Instance;return Invoke<AssociateMemberAccountResponse>(request, options);}
public virtual void run(){doRefreshProgress(mId, mProgress, mFromUser, true);mRefreshProgressRunnable = this;}
public virtual SetTerminationProtectionResponse SetTerminationProtection(SetTerminationProtectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetTerminationProtectionRequestMarshaller.Instance;options.ResponseUnmarshaller = SetTerminationProtectionResponseUnmarshaller.Instance;return Invoke<SetTerminationProtectionResponse>(request, options);}
public virtual string GetErrorHeader(RecognitionException e){int line = e.OffendingToken.Line;int charPositionInLine = e.OffendingToken.CharPositionInLine;return "line "line " + line + ":" + charPositionInLine;}
public override java.nio.CharBuffer asReadOnlyBuffer(){java.nio.CharToByteBufferAdapter buf = new java.nio.CharToByteBufferAdapter(byteBuffer.asReadOnlyBuffer());buf._limit = _limit;buf._position = _position;buf._mark = _mark;buf.byteBuffer._order = byteBuffer._order;return buf;}
public virtual StopSentimentDetectionJobResponse StopSentimentDetectionJob(StopSentimentDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopSentimentDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopSentimentDetectionJobResponseUnmarshaller.Instance;return Invoke<StopSentimentDetectionJobResponse>(request, options);}
public virtual ObjectIdSubclassMap<ObjectId> GetNewObjectIds(){if (newObjectIds != null){return newObjectIds;}return new ObjectIdSubclassMap<ObjectId>();}
public override void Clear(){hash = hash(new byte[0]);base.Clear();}
public override void reset(){lock (@lock){checkNotClosed();if (@mark == -1){throw new System.IO.IOException("Invalid mark");}pos = mark;}}
public RefErrorPtg(ILittleEndianInput in1){field_1_reserved = in1.ReadInt();}
public virtual SuspendGameServerGroupResponse SuspendGameServerGroup(SuspendGameServerGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = SuspendGameServerGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = SuspendGameServerGroupResponseUnmarshaller.Instance;return Invoke<SuspendGameServerGroupResponse>(request, options);}
public ValueEval Evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex){if (args.Length != 3){return ErrorEval.VALUE_INVALID;}return Evaluate(srcRowIndex, srcColumnIndex, args[0], args[1], args[2]);}
public GetRepoRequest(): base("cr", "2016-06-07", "GetRepo", "cr", "openAPI"){UriPattern = "/repos/[RepoNamespace]/[RepoName]";Method = MethodType.GET;}
public virtual void SetDate(DateTime date){if (date != null){SetDate(DateTools.Util.Resolution.SECOND));}else{this.date = null;}}
public override TokenStream Create(TokenStream input){return new GermanMinimalStemFilter(input);}
public virtual object[] toArray(){return a.Clone();}
public override void write(char[] buffer, int offset, int len){java.util.Arrays.checkOffsetAndCount(buffer.Length, offset, len);lock (@lock){expand(buffer, offset, this.buf, this.count, len);this.count += len;}}
public static RevFilter After(DateTime ts){return After(ts.GetTime());}
public DeleteGroupPolicyRequest(string groupName, string policyName){_groupName = groupName;_policyName = policyName;}
public virtual DeregisterTransitGatewayMulticastGroupMembersResponse DeregisterTransitGatewayMulticastGroupMembers(DeregisterTransitGatewayMulticastGroupMembersRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeregisterTransitGatewayMulticastGroupMembersRequestMarshaller.Instance;options.ResponseUnmarshaller = DeregisterTransitGatewayMulticastGroupMembersResponseUnmarshaller.Instance;return Invoke<DeregisterTransitGatewayMulticastGroupMembersResponse>(request, options);}
public virtual BatchDeleteScheduledActionResponse BatchDeleteScheduledAction(BatchDeleteScheduledActionRequest request){var options = new InvokeOptions();options.RequestMarshaller = BatchDeleteScheduledActionRequestMarshaller.Instance;options.ResponseUnmarshaller = BatchDeleteScheduledActionResponseUnmarshaller.Instance;return Invoke<BatchDeleteScheduledActionResponse>(request, options);}
public virtual CreateAlgorithmResponse CreateAlgorithm(CreateAlgorithmRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateAlgorithmRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateAlgorithmResponseUnmarshaller.Instance;return Invoke<CreateAlgorithmResponse>(request, options);}
public int ReadUByte(){return _rc4.XorByte(_le.ReadUByte());}
public virtual void SetLength(int sz){NB.EncodeInt32(info, infoOffset + P_SIZE, sz);}
public virtual DescribeScalingProcessTypesResponse DescribeScalingProcessTypes(){return DescribeScalingProcessTypes(new DescribeScalingProcessTypesRequest());}
public virtual ListResourceRecordSetsResponse ListResourceRecordSets(ListResourceRecordSetsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListResourceRecordSetsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListResourceRecordSetsResponseUnmarshaller.Instance;return Invoke<ListResourceRecordSetsResponse>(request, options);}
public virtual IToken RecoverInline(Parser recognizer){InputMismatchException e = new InputMismatchException(recognizer);for (ParserRuleContext context = recognizer.Context; context != null; context = context.Parent)){context.exception = e;}throw new ParseCanceledException(e);}
public virtual SetTagsForResourceResponse SetTagsForResource(SetTagsForResourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetTagsForResourceRequestMarshaller.Instance;options.ResponseUnmarshaller = SetTagsForResourceResponseUnmarshaller.Instance;return Invoke<SetTagsForResourceResponse>(request, options);}
public ModifyStrategyRequest(): base("CloudCallCenter", "2017-07-05", "ModifyStrategy", "CloudCallCenter", "openAPI"){UCalifyStrategy", "innerAPI"));}
public virtual DescribeVpcEndpointServicesResponse DescribeVpcEndpointServices(DescribeVpcEndpointServicesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVpcEndpointServicesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVpcEndpointServicesResponseUnmarshaller.Instance;return Invoke<DescribeVpcEndpointServicesResponse>(request, options);}
public virtual EnableLoggingResponse EnableLogging(EnableLoggingRequest request){var options = new InvokeOptions();options.RequestMarshaller = EnableLoggingRequestMarshaller.Instance;options.ResponseUnmarshaller = EnableLoggingResponseUnmarshaller.Instance;return Invoke<EnableLoggingResponse>(request, options);}
public override bool contains(object o){return this._enclosing.containsValue(o);}
public SheetRangeIdentifier(String bookName, NameIdentifier firstSheetIdentifier, NameIdentifier lastSheetIdentifier): base(bookName, firstSheetIdentifier){_lastSheetIdentifier = lastSheetIdentifier;}
public DomainMetadataRequest(string domainName){_domainName = domainName;}
public ParseException(Token currentTokenVal,int[][] expectedTokenSequencesVal, string[] tokenImageVal): base(new Message(QueryParserMessages.INVALID_SYNTAX, Initialize(currentTokenVal, expectedTokenSequencesVal, tokenImageVal))){this.CurrentToken = currentTokenVal;this.ExpectedTokenSequences = expectedTokenSequencesVal;this.TokenImage = tokenImageVal;}
public FetchPhotosRequest(): base("CloudPhoto", "2017-07-11", "FetchPhotos", "cloudphoto", "openAPI"){Protocol = ProtocolType.HTTPS;}
public override java.io.Writer writer(){return _writer;}
public NGramTokenizerFactory(IDictionary<string, string> args): base(args){minGramSize = GetInt32(args, "minGramSize", NGramTokenizer.DEFAULT_MIN_NGRAM_SIZE);maxGramSize = GetInt32(args, "maxGramSize", NGramTokenizer.DEFAULT_MAX_NGRAM_SIZE);if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + args);}}
public virtual bool IsDirectoryFileConflict(){return dfConflict != null;}
public IndonesianStemFilter(TokenStream input, bool stemDerivational): base(input){this.stemDerivational = stemDerivational;this.termAtt = AddAttribute<ICharTermAttribute>();this.keywordAttr = AddAttribute<IKeywordAttribute>();}
public virtual CreateTrafficPolicyResponse CreateTrafficPolicy(CreateTrafficPolicyRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateTrafficPolicyRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateTrafficPolicyResponseUnmarshaller.Instance;return Invoke<CreateTrafficPolicyResponse>(request, options);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteInt(fSD);out1.WriteInt(passwordVerifier);StringUtil.WriteUnicodeString(out1, title);out1.Write(securityDescriptor);}
public static double floor(double n, double s){if (s == 0 && n != 0){return double.NaN;}else{c = (n == 0 || s == 0) ? 0 : Math.Flush(n / s) * s;}return c;}
public ByteArrayDataOutput(byte[] bytes, int offset, int len){Reset(bytes, offset, len);}
public static IList<ITree> GetChildren(ITree t){IList<ITree> kid = new List<ITree>();for (int i = 0; i < t.ChildCount; i++){kid.Add(t.GetChild(i));}return kid;}
public override void clear(){this._enclosing.clear();}
public refreshAllRecord(bool refreshAll):this(0){RefreshAll = refreshAll;}
public virtual DeleteNamedQueryResponse DeleteNamedQuery(DeleteNamedQueryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteNamedQueryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteNamedQueryResponseUnmarshaller.Instance;return Invoke<DeleteNamedQueryResponse>(request, options);}
public IncreasevizFormatter(ConnectionCosts costs){this.costs = costs;this.bestPathMap = new Dictionary<string, Field>();sb.Append(formatHeader);sb.Append("  init [style=invis]\n");sb.Append("  init -> 0.0 [type=\"" + BOS_LABEL + "\"]\n");}
public CheckMultiAgentRequest(): base("visionai-poc", "2020-04-08", "CheckMultiAgent", "domain", "openAPI"){Method = MethodType.POST;}
public virtual ListUserProfilesResponse ListUserProfiles(ListUserProfilesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListUserProfilesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListUserProfilesResponseUnmarshaller.Instance;return Invoke<ListUserProfilesResponse>(request, options);}
public virtual CreateRelationalDatabaseFromSnapshotResponse CreateRelationalDatabaseFromSnapshot(CreateRelationalDatabaseFromSnapshotRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateRelationalDatabaseFromSnapshotRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateRelationalDatabaseFromSnapshotResponseUnmarshaller.Instance;return Invoke<CreateRelationalDatabaseFromSnapshotResponse>(request, options);}
public virtual StartTaskResponse StartTask(StartTaskRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartTaskRequestMarshaller.Instance;options.ResponseUnmarshaller = StartTaskResponseUnmarshaller.Instance;return Invoke<StartTaskResponse>(request, options);}
public virtual ICollection<string> GetIgnoredPaths(){return ignoredPaths;}
public FeatSmartTag(RecordInputStream in1){data = in1.ReadRemainder();}
public Change(ChangeAction action, ResourceRecordSet resourceRecordSet){_action = action;_resourceRecordSet = resourceRecordSet;}
public virtual DeleteImageResponse DeleteImage(DeleteImageRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteImageRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteImageResponseUnmarshaller.Instance;return Invoke<DeleteImageResponse>(request, options);}
public virtual CreateConfigurationSetResponse CreateConfigurationSet(CreateConfigurationSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateConfigurationSetRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateConfigurationSetResponseUnmarshaller.Instance;return Invoke<CreateConfigurationSetResponse>(request, options);}
public override java.util.Iterator<E> iterator(){object[] snapshot = elements;return new java.util.concurrent.CopyOnWriteArrayList.CowIterator<E>(snapshot, 0,snapshot.Length);}
public override void VisitContainedRecords(RecordVisitor rv){if (_recs.Count == 0){return;}rv.VisitRecord(_bofRec);for (int i = 0; i < _recs.Count; i++){RecordBase rb = _recs[i];if (rb is RecordAggregate){((RecordAggregate)rb).VisitContainedRecords(rv);}else{rv.VisitRecord((Record)rb);}}rv.VisitRecord(EOFRecord.instance);}
public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[FtCbls ]").Append("\n");buffer.Append("  size      = ").Append(DataSize).Append("\n");buffer.Append("  reserved = ").Append(HexDump.ToHex(reserved)).Append("\n");buffer.Append("[/FtCbls ]").Append("\n");return buffer.ToString();}
public static BATBlock CreateEmptyBATBlock(POIFSBigBlockSize bigBlockSize, bool isXBAT){BATBlock block = new BATBlock(bigBlockSize);if (isXBAT){int _entries_per_xBAT_block = bigBlockSize.GetXBATEntriesPerBlock();block._values[_entries_per_xpan_block] = POIFSConstants.END_OF_CHAIN;}return block;}
public virtual TagResourceResponse TagResource(TagResourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = TagResourceRequestMarshaller.Instance;options.ResponseUnmarshaller = TagResourceResponseUnmarshaller.Instance;return Invoke<TagResourceResponse>(request, options);}
public virtual DeleteMailboxPermissionsResponse DeleteMailboxPermissions(DeleteMailboxPermissionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteMailboxPermissionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteMailboxPermissionsResponseUnmarshaller.Instance;return Invoke<DeleteMailboxPermissionsResponse>(request, options);}
public virtual ListDatasetGroupsResponse ListDatasetGroups(ListDatasetGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListDatasetGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListDatasetGroupsResponseUnmarshaller.Instance;return Invoke<ListDatasetGroupsResponse>(request, options);}
public virtual ResumeProcessesResponse ResumeProcesses(ResumeProcessesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ResumeProcessesRequestMarshaller.Instance;options.ResponseUnmarshaller = ResumeProcessesResponseUnmarshaller.Instance;return Invoke<ResumeProcessesResponse>(request, options);}
public virtual GetPersonTrackingResponse GetPersonTracking(GetPersonTrackingRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetPersonTrackingRequestMarshaller.Instance;options.ResponseUnmarshaller = GetPersonTrackingResponseUnmarshaller.Instance;return Invoke<GetPersonTrackingResponse>(request, options);}
public override String ToFormulaString(String[] operands){if (space.IsSet(options)){return operands[0];}else if (optiIf.IsSet(field_1_options)){return ToFormulaString() + "(" + operands[0] + ")";}else if (optiSkip.IsSet(field_1_options)){return ToFormulaString() + operands[0];   }else{return ToFormulaString() + operands[0];}
public override T Merge(T first, T second){throw new NotSupportedException();}
public override string ToString(){return this.m_message.Key + ": " + LocalizedMessage;}
public XPath(Parser parser, string path){this.parser = parser;this.path = path;elements = split(path);}
public CreateAccountAliasRequest(string accountAlias){_accountAlias = accountAlias;}
public override void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int j = 0; j < iterations; ++j){var block = blocks[blocksOffset++];values[valuesOffset++] = ((int)((uint)block >> 7)) & 1;values[valuesOffset++] = ((int)((uint)block >> 6)) & 1;values[valuesOffset++] = ((int)((uint)block >> 5)) & 1;values[valuesOffset++] = ((int)((uint)block >> 4)) & 1;values[valuesOffset++] = ((int)((uint)block >> 3)) & 1;values[valuesOffset++] = ((int)((uint)block >> 2)) & 1;values[valuesOffset++] = ((int)((uint)block >> 1)) & 1;values[valuesOffset++] = block & 1;}}
public virtual PushConnection OpenPush(){throw new System.NotImplementedException();}
public static void StrCpeap(char[] dst, int tri, char[] src, int si){while (src[si] != 0){dst[di++] = src[si++];}dst[di] = 0;}
public virtual K getKey(){return mapEntry.getKey();}
public static int NumNonNull(object[] data){int n = 0;if (data == null){return n;}for (int i = 0; i < data.Length; i++){if (o != null){n++;}return n;}
public override void add(int location, E @object){if (location >= 0 && location <= _size){java.util.LinkedList.Link<E> link = voidLink;if (location < (_size / 2)){{for (int i = 0; i <= location; i++){link = link.next;}}}else{{for (int i = _size; i > location; i--){link = link.previous;}}}java.util.LinkedList.Link<E> previous_1 = link.previous;java.util.LinkedList.Link<E> newLink = newLink;link.previous = newLink;_size++;modCount++;}else{throw new System.IndexOutOfRangeException();}}}
public virtual DescribeDomainResponse DescribeDomain(DescribeDomainRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDomainRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDomainResponseUnmarshaller.Instance;return Invoke<DescribeDomainResponse>(request, options);}
public override void flush(){throw new System.NotImplementedException();}
public PersianCharFilterFactory(IDictionary<string, string> args): base(args){if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + args);}}
public override bool IncrementToken(){if (used){return false;}ClearAttributes();termAttribute.Append(value);offsetAttribute.SetOffset(0, length);used = true;return true;}
public static java.nio.FloatBuffer allocate(int capacity_1){if (capacity_1 < 0){throw new System.ArgumentException();}return new java.nio.ReadWriteFloatArrayBuffer(capacity_1);}
public NGit.Diff.Edit After(NGit.Diff.Edit cut){return new NGit.Diff.Edit( cut.endA, endB, endB);}
public virtual UpdateRuleVersionResponse UpdateRuleVersion(UpdateRuleVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateRuleVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateRuleVersionResponseUnmarshaller.Instance;return Invoke<UpdateRuleVersionResponse>(request, options);}
public virtual ListVoiceConnectorTerminationCredentialsResponse ListVoiceConnectorTerminationCredentials(ListVoiceConnectorTerminationCredentialsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListVoiceConnectorTerminationCredentialsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListVoiceConnectorTerminationCredentialsResponseUnmarshaller.Instance;return Invoke<ListVoiceConnectorTerminationCredentialsResponse>(request, options);}
public virtual GetDeploymentTargetResponse GetDeploymentTarget(GetDeploymentTargetRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDeploymentTargetRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDeploymentTargetResponseUnmarshaller.Instance;return Invoke<GetDeploymentTargetResponse>(request, options);}
public virtual void SetNoChildReport(){letChildReport = false;foreach (PerfTask task in tasks){if (task is TaskSequence){((TaskSequence)task).SetNoChildReport();}}}
public override E get(int location){try{return a[location];}catch (System.ArrayIndexOutOfRangeException){throw new System.IndexOutOfRangeException(location, a.Length);}}
public virtual DescribeDataSetResponse DescribeDataSet(DescribeDataSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDataSetRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDataSetResponseUnmarshaller.Instance;return Invoke<DescribeDataSetResponse>(request, options);}
public SkipWorkTreeFilter(int treeIdx){this.treeIdx = treeIdx;}
public virtual DescribeNetworkInterfacesResponse DescribeNetworkInterfaces(){return DescribeNetworkInterfaces(new DescribeNetworkInterfacesRequest());}
public bool Contains(int row, int col){return (_firstRow <= row && (_lastRow >= row && _firstColumn >= col);}
public override string ToString(){return new string(this.m_chars);}
public virtual PatchType GetPatchType(){return PatchType;}
public override java.util.Iterator<K> iterator(){return new java.util.Hashtable<K, V>.KeyIterator(this._enclosing);}
public virtual CreateScriptResponse CreateScript(CreateScriptRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateScriptRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateScriptResponseUnmarshaller.Instance;return Invoke<CreateScriptResponse>(request, options);}
public override BytesRef Next(){termUpto++;if (termUpto >= info.terms.Count){return null;}else{info.terms[info.sortedTerms[termUpto], br);return br;}}
public virtual string OutputToString(CharsRef output){return output.ToString();}
public virtual AssociateWebsiteAuthorizationProviderResponse AssociateWebsiteAuthorizationProvider(AssociateWebsiteAuthorizationProviderRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateWebsiteAuthorizationProviderRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateWebsiteAuthorizationProviderResponseUnmarshaller.Instance;return Invoke<AssociateWebsiteAuthorizationProviderResponse>(request, options);}
public virtual void Inform(RevCommit c){BlockRevQueue.Block b = head;if (b == null){b = free.NewBlock();b.ResetToEmpty();b.Add(c);head = b;tail = b;return;}else if (b.CanUnpop()){b.Unpop(c);return;}}b = free.NewBlock();b.ResetToEnd();b.ResetToEnd();b.Next = head;head = b;}
public EdgeNGramTokenizerFactory(IDictionary<string, string> args): base(args){minGramSize = GetInt32(args, "minGramSize", EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE);maxGramSize = GetInt32(args, "maxGramSize", EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE);side = Get(args, "maxGramSize", EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE);if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + args);}}
public ModifyDBParameterGroupRequest(string dbParameterGroupName, List<Parameter> parameters){_dbParameterGroupName = dbParameterGroupName;_paramzers = parameter;}
public virtual GetHostedZoneLimitResponse GetHostedZoneLimit(GetHostedZoneLimitRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetHostedZoneLimitRequestMarshaller.Instance;options.ResponseUnmarshaller = GetHostedZoneLimitResponseUnmarshaller.Instance;return Invoke<GetHostedZoneLimitResponse>(request, options);}
public override void Set(int index, long value){int o = (int)((uint)index >> 6);int b = index & 63;int shift = b << 0;blocks[o] = (blocks[o] & ~(1L << shift)) | (value << shift);}
public override TreeFilter Clone(){return new MessageRevFilter.PatternSearch(Pattern());}
public override string ToString(){return "spans(" + term.ToString() + ")";}
public bool canAppendMatch(){foreach (Head head in heads){if (head != LastHead.INSTANCE){return true;}}return false;}
public override int lastIndexOf(string subString, int start){lock (this){return base.lastIndexOf(subString, start);}}
public virtual DeleteNetworkAclEntryResponse DeleteNetworkAclEntry(DeleteNetworkAclEntryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteNetworkAclEntryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteNetworkAclEntryResponseUnmarshaller.Instance;return Invoke<DeleteNetworkAclEntryResponse>(request, options);}
public virtual AssociateMemberToGroupResponse AssociateMemberToGroup(AssociateMemberToGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateMemberToGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateMemberToGroupResponseUnmarshaller.Instance;return Invoke<AssociateMemberToGroupResponse>(request, options);}
public static int Committer(byte[] b, int ptr){int sz = b.Length;if (ptr == 0){ptr += 46;}while (ptr < sz && b[ptr] == 'p'){ptr += 48;}if (ptr < sz && b[ptr] == 'a'){ptr = NextLF(b, ptr);}return Match(b, ptr, Committer);}
public virtual int GetLineNumber(){return row;}
public virtual NGit.Api.SubmoduleUpdateCommand AddPath(string path){paths.AddItem(path);return this;}
public virtual GetPushTemplateResponse GetPushTemplate(GetPushTemplateRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetPushTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = GetPushTemplateResponseUnmarshaller.Instance;return Invoke<GetPushTemplateResponse>(request, options);}
public virtual DescribeVaultResponse DescribeVault(DescribeVaultRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVaultRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVaultResponseUnmarshaller.Instance;return Invoke<DescribeVaultResponse>(request, options);}
public virtual DescribeVpcPeeringConnectionsResponse DescribeVpcPeeringConnections(){return DescribeVpcPeeringConnections(new DescribeVpcPeeringConnectionsRequest());}
public override java.nio.ByteBuffer putLong(int index, long value){throw new java.nio.ReadOnlyBufferException();}
public virtual RegisterDeviceResponse RegisterDevice(RegisterDeviceRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterDeviceRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterDeviceResponseUnmarshaller.Instance;return Invoke<RegisterDeviceResponse>(request, options);}
public static FormatById(int id){for (int i = 0; i < Format.Count; i++){if (format.Id == id){return format;}}throw new ArgumentException("Unknown format id: " + id);}
public virtual DeleteAppResponse DeleteApp(DeleteAppRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteAppRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteAppResponseUnmarshaller.Instance;return Invoke<DeleteAppResponse>(request, options);}
public virtual GetBaiduChannelResponse GetBaiduChannel(GetBaiduChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetBaiduChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = GetBaiduChannelResponseUnmarshaller.Instance;return Invoke<GetBaiduChannelResponse>(request, options);}
public FST.BytesReader GetBytesReader(){return fst.GetBytesReader();}
public static bool IsValidSchemeChar(int index, char c){if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')){return true;}if (index > 0 && ((c >= '0' && c <= '9') || c == ' +' || c == '-' || c == '-' || c == '.')){return true;}return false;}
public virtual ListAppliedSchemaArnsResponse ListAppliedSchemaArns(ListAppliedSchemaArnsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAppliedSchemaArnsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAppliedSchemaArnsResponseUnmarshaller.Instance;return Invoke<ListAppliedSchemaArnsResponse>(request, options);}
public virtual string name(){return this.name;}
public ValueEval Evaluate(ValueEval[] args, OperationEvaluationContext ec){if (args.Length < 1){return ErrorEval.VALUE_INVALID;}bool isA1;String text;try{ValueEval ve = OperandResolver.GetSingleValue(args[0], ec.RowIndex, ec.ColumnIndex);text = OperandResolver.CoerceValueToString(ve);switch (args.Length){case 1:isA1 = true;break;case 2:isA1style = EvaluateBooleanArg(args[1], ec);break;}default:return ErrorEval.VALUE_INVALID;}}catch (EvaluationException e){return e.GetErrorEval();}return EvaluateIndirect(ec, text, isA1style);}
public int CompareTo(int[] bs, int p){int cmp;cmp = NB.CompareUInt32(w1, bs[p]);if (cmp != 0){return cmp;}cmp = NB.CompareUInt32(w2, bs[p + 1]);if (cmp != 0){return cmp;}cmp = NB.CompareUInt32(w3, bs[p + 2]);if (cmp != 0){return cmp;}cmp = NB.CompareUInt32(w4, bs[p + 3]);if (cmp != 0){return cmp;}return NB.CompareUInt32(w5, bs[p + 4]);}
public void RemoveName(int index){names.RemoveAt(index);workbook.RemoveName(index);}
public GetQueueAttributesRequest(string queueUrl, List<string> attributeNames){_queueUrl = queueUrl;_attributeNames = attributeNames;}
public static bool[] copyOf(bool[] original, int newLength){if (newLength < 0){throw new java.lang.NegativeArraySizeException();}return copyOfRange(original, 0, newLength);}
public static void SetEnabled(bool enabled){ENABLED = enabled;}
public virtual DeleteLogPatternResponse DeleteLogPattern(DeleteLogPatternRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteLogPatternRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteLogPatternResponseUnmarshaller.Instance;return Invoke<DeleteLogPatternResponse>(request, options);}
public virtual bool Contains(char[] text, int offset, int len){return map.ContainsKey(text, off, len);}
public int GetFirstSheetIndexFromExternSheetIndex(int externSheetNumber){return linkTable.GetFirstInternalSheetIndexForExtIndex(externSheetNumber);}
public virtual bool Handle(string commandLine){return command.Length + 1 < commandLine.Length && commandLine[command.Length] == ' '&& commandLine.StartsWith(command);}
public static void Register(MergeStrategy imp){Register(mill.GetName(), imp);}
public override long RamBytesUsed(){return ((index != null) ? index.GetSizeInBytes() : 0);}
public HostedZone(string id, string name, string callerReference){_id = id;_name = name;_callerReference = callerReference;}
public virtual GetFindingsResponse GetFindings(GetFindingsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetFindingsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetFindingsResponseUnmarshaller.Instance;return Invoke<GetFindingsResponse>(request, options);}
public virtual DescribeTopicsDetectionJobResponse DescribeTopicsDetectionJob(DescribeTopicsDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeTopicsDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeTopicsDetectionJobResponseUnmarshaller.Instance;return Invoke<DescribeTopicsDetectionJobResponse>(request, options);}
public virtual bool ProcessMatch(ValueEval eval){if (eval is NumericValueEval){if (minimumValue == null){minimumValue = eval;}else{double currentValue = ((NumericValueEval)eval).NumberValue;double oldValue = ((NumericValueEval)minimumValue).NumberValue;if (currentValue < oldValue){minimumValue = eval;}}}return true;}
public override void Write(ILittleEndianOutput out1){out1.WriteByte(sid + PtgClass);out1.WriteShort(field_1_len_ref_subexpression);}
public static void Main(string[] args){bool printTree = false;string path = null;for (int i = 0; i < args.Length; i++){if (args[i].Equals("-printTree", StringComparison.Ordinal)){printTree = true;}else{path = args[i];}}if (args.Length != (printTree ? 2 : 1)){Console.WriteLine("\nUsage: base-classmap / outerInstance.connectonmy, StringComparison.CurrentCultureInfo.InvariantCulture);System.Array.Copy(path, 0, new DirectoryTaxonomy, printTree);r.Close();}dir.Close();}
public virtual void SetByteValue(double value){if (!(FieldsData is Byte)){throw new System.ArgumentException("cannot change value type from " + FieldsData.GetType().Name + " to Byte");}FieldsData = new Double(value);}
public static int Initialize(){return Initialize(DEFAULT_SEED);}
public CachingDoubleValueSource(ValueSource source){this.source = source;cache = new ArrayList();}
public AttributeDefinition(string attributeName, SinarAttributeType attributeType){_attributeName = attributeName;_attributeType = attributeType;}
public static string Join(ICollection<string> parts, string separator){return stringUtils.Join(parts, separator, separator);}
public virtual ListTaskDefinitionFamiliesResponse ListTaskDefinitionFamilies(ListTaskDefinitionFamiliesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTaskDefinitionFamiliesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTaskDefinitionFamiliesResponseUnmarshaller.Instance;return Invoke<ListTaskDefinitionFamiliesResponse>(request, options);}
public virtual ListComponentsResponse ListComponents(ListComponentsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListComponentsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListComponentsResponseUnmarshaller.Instance;return Invoke<ListComponentsResponse>(request, options);}
public EnablePhotosRequest(): base("CloudPhoto", "2017-07-11", "ActivatePhotos", "cloudphoto", "openAPI"){Protocol = ProtocolType.HTTPS;}
public virtual CreateMatchmakingRuleSetResponse CreateMatchmakingRuleSet(CreateMatchmakingRuleSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateMatchmakingRuleSetRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateMatchmakingRuleSetResponseUnmarshaller.Instance;return Invoke<CreateMatchmakingRuleSetResponse>(request, options);}
public virtual ListAvailableManagementCidrRangesResponse ListAvailableManagementCidrRanges(ListAvailableManagementCidrRangesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAvailableManagementCidrRangesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAvailableManagementCidrRangesResponseUnmarshaller.Instance;return Invoke<ListAvailableManagementCidrRangesResponse>(request, options);}
public override ObjectId SubclassMap<ObjectId> GetBaseObjectIds(){if (baseObjectIds != null){return baseObjectIds;}return new ObjectIdSubclassMap<ObjectId>();}
public virtual DeletePushTemplateResponse DeletePushTemplate(DeletePushTemplateRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeletePushTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = DeletePushTemplateResponseUnmarshaller.Instance;return Invoke<DeletePushTemplateResponse>(request, options);}
public virtual CreateDomainEntryResponse CreateDomainEntry(CreateDomainEntryRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDomainEntryRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDomainEntryResponseUnmarshaller.Instance;return Invoke<CreateDomainEntryResponse>(request, options);}
public static int GetEncodedSize(object[] values){int result = values.Length * 1;for (int i = 0, iSize = values.Length; i < iSize; i++){result += GetEncodedSize(value);}return result;}
public OpenNLPTokenizerFactory(IDictionary<string, string> args): base(args){sentenceModelFile = Require(args, SENTENCE_MODEL);tokenizerModelFile = Require(args, ToKENIZER_MODEL);if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + args);}}
public sealed override int getInt(int index){checkIndex(index, libcore.io.SizeOf.INT);return libcore.io.Memory.peekInt(backingArray, offset + index, _order);}
public IList<Head> GetNextHeads(char c){if (Matches(c)){return newHeads;}return FileNameMatcher.EMPTY_HEAD_LIST;}
public override java.nio.ByteBuffer putShort(short value){throw new java.nio.ReadOnlyBufferException();}
public virtual void writeUnshared(object @object){throw new System.NotImplementedException();}
public virtual int offsetByCodePoints(int index, int codePointOffset){return Sharpen.CharHelper.OffsetByCodePoints(value, 0, count, codePointOffset);}
public static int GetUniqueAlt(IEnumerable<BitSet> altsets){BitSet all = GetAlts(altsets);if (all.Cardinality() == 1){return all.NextSetBit(0);}return ATN.INVALID_ALT_NUMBER;}
public virtual DateTime GetWhen(){return new DateTime(when);}
public RuleTagToken(string ruleName, int bypassTokenType, string label){if (ruleName == null || ruleName.Count != 0){throw new ArgumentException("ruleName cannot be null or empty.");}this.ruleName = ruleName;this.bypassTokenType = bypassTokenType;this.label = label;}
public virtual DisableOrganizationAdminAccountResponse DisableOrganizationAdminAccount(DisableOrganizationAdminAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisableOrganizationAdminAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = DisableOrganizationAdminAccountResponseUnmarshaller.Instance;return Invoke<DisableOrganizationAdminAccountResponse>(request, options);}
public virtual CreateRoomResponse CreateRoom(CreateRoomRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateRoomRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateRoomResponseUnmarshaller.Instance;return Invoke<CreateRoomResponse>(request, options);}
public virtual DeleteReplicationGroupResponse DeleteReplicationGroup(DeleteReplicationGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteReplicationGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteReplicationGroupResponseUnmarshaller.Instance;return Invoke<DeleteReplicationGroupResponse>(request, options);}
public java.nio.CharBuffer decode(java.nio.ByteBuffer buffer){try{return newDecoder().onMalformedInput(java.nio.charset.CodingErrorAction.REPLACE).onUnmappableCharacter(java.nio.charset.CodingErrorAction.REPLACE).onUnmappableCharacter(java.nio.charset.CodingErrorAction.REPLACE).onUnmappableCharacter(java.nio.charset.CodingErrorAction.REPLACE).onUnmappableCharacter(java.nio.charset.CodingErrorAction.REPLACE).onUnmappableCharacter(java.nio.charset.CodingErrorAction.REPLACE).decode(buffer);}catch (java.nio.charset.CodingException ex){throw new System.Exception(ex.Message, ex);}}
public Distribution(string id, string status, string domainName){_id = id;_status = status;_domainName = domainName;}
public sealed override object array(){return protectedArray();}
public DateWindow1904Record(RecordInputStream in1){field_1_Window = in1.ReadShort();}
public DeleteDBSnapshotRequest(string dbSnapshotIdentifier){_dbSnapshotIdentifier = dbSnapshotIdentifier;}
public ParserExtension GetExtension(string key){return this.extensions[key];}
public virtual void Inform(IResourceLoader loader){try{if (chunkerModelFile != null){OpenNLPOpsFactory.GetChunkerModel(chunkerModelFile, loader);}}catch (IOException e){throw new ArgumentException(e.ToString(), e);}}
public virtual CompleteVaultLockResponse CompleteVaultLock(CompleteVaultLockRequest request){var options = new InvokeOptions();options.RequestMarshaller = CompleteVaultLockRequestMarshaller.Instance;options.ResponseUnmarshaller = CompleteVaultLockResponseUnmarshaller.Instance;return Invoke<CompleteVaultLockResponse>(request, options);}
public int[] GetCharIntervals(){return (_points.Clone();}
public long RamBytesUsed(){return RamUsageEstimator.AlignObjectSize(3 * RamUsageEstimator.NUM_BYTES_OBJECT_REF +REF + docIDs.RamBytesUsed() + offsets.RamBytesUsed();}
public virtual RegisterInstancesWithLoadBalancerResponse RegisterInstancesWithLoadBalancer(RegisterInstancesWithLoadBalancerRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterInstancesWithLoadBalancerRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterInstancesWithLoadBalancerResponseUnmarshaller.Instance;return Invoke<RegisterInstancesWithLoadBalancerResponse>(request, options);}
public DescribeClusterUserKubonConfigRequest(): base("CS", "2015-12", "DescribeClusterUserKubecon", "csk" : "csk8s/[ClusterId]/user_config";Method = MethodType.GET;}
public PrecisionRecord(RecordInputStream in1){field_1_precision = in1.ReadShort();}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(LeftRowGutter);out1.WriteShort(TopColGutter);out1.WriteShort(RowLevelMax);out1.WriteShort(ColLevelMax);}
public virtual DeleteVirtualInterfaceResponse DeleteVirtualInterface(DeleteVirtualInterfaceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteVirtualInterfaceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteVirtualInterfaceResponseUnmarshaller.Instance;return Invoke<DeleteVirtualInterfaceResponse>(request, options);}
public virtual Entry GetEntry(string name){if (excludes.Contains(name)){throw new FileNotFoundException(name);}Entry entry = directory.GetEntry(name);}return wrapEntry(entry);}
public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[BACKUP]\n");buffer.Append("    .backup         = ").Append(StringUtil.ToHexString(Backup)).Append("\n");buffer.Append("[/BACKUP]\n");return buffer.ToString();}
public virtual DeleteVoiceConnectorOriginationResponse DeleteVoiceConnectorOrigination(DeleteVoiceConnectorOriginationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteVoiceConnectorOriginationRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteVoiceConnectorOriginationResponseUnmarshaller.Instance;return Invoke<DeleteVoiceConnectorOriginationResponse>(request, options);}
public virtual OpenStringBuilder Append(char csq){return Append(csq, 0, csq.Length);}
public static long GenerationFromSegmentsFileName(string fileName){if (fileName.Equals(OLD_SEGMENTS_GEN, StringComparison.Ordinal)){throw new ArgumentException("\"" + OLD_SEGMENTS_GEN + "\" is not a valid segment file " + 4.0");}else if (fileName.Equals(IndexFileNames.SEGMENTS, StringComparison.Ordinal)){return 0;}else if (fileName.StartsWith(IndexFileNames.SEGMENTS, StringComparison.Ordinal)){return 0;}else{throw new ArgumentException("fileName \"" + fileName + "\" is not a segments file");}}
public static TagOpt FromOption(string o){if (o == null || o.Length == 0){return AUTO_FOLLOW;}for (int i = 0; i < iSize; i++){if (tagopt.Option.Equals(o, StringComparison.Ordinal)){return tagopt;}}throw new ArgumentException(MessageFormat.Format(JGitText.Get().invalidTagOption, o));}
public virtual StartContentModerationResponse StartContentModeration(StartContentModerationRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartContentModerationRequestMarshaller.Instance;options.ResponseUnmarshaller = StartContentModerationResponseUnmarshaller.Instance;return Invoke<StartContentModerationResponse>(request, options);}
public static string QuoteReplacement(string s){StringBuilder result = new StringBuilder(s.Length);for (int i = 0; i < s.Length; i++){char c = s[i];if (c == '\\' || c == '$'){result.Append('\\');}result.Append(c);}return result.ToString();}
public void Set(V newValue){value = newValue;}
public QueryParserTokenManager(ICharStream stream){m_input_stream = stream;}
public override long ValueFor(double elapsed){double val;if (modBy == 0){val = elapsed / factor;}else{val = elapsed / factor % modBy;if (type == '0'){return Math.Round(val);}else{return (long)val;}}}
public override java.nio.LongBuffer get(long[] dst, int dstOffset, int longCount){byteBuffer.limit(_limit * libcore.io.SizeOf.LONG);byteBuffer.position(_position * libcore.io.SizeOf.LONG);if (byteBuffer is java.nio.DirectByteBuffer){((java.nio.DirectByteBuffer)byteBuffer).get(dst, dstOffset, longCount);}else{((java.nio.HeapByteBuffer)byteBuffer).get(dst, dstOffset, longCount);}this._position += longCount;return this;}
public void RemoveErrorListeners(){_listeners.Clear();}
public CommonTokenStream(TokenSource tokenSource, int channel): base(tokenSource){this._channel = channel;}
public virtual ListObjectPoliciesResponse ListObjectPolicies(ListObjectPoliciesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListObjectPoliciesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListObjectPoliciesResponseUnmarshaller.Instance;return Invoke<ListObjectPoliciesResponse>(request, options);}
public ObjectToPack(AnyObjectId src, int type) : base(src){flags = type << TYPE_SHIFT;}
public virtual int Stem(char[] s, int len){int numVowels = NumVowels(s, len);for (int i = 0; i < affixes.Length; i++){Affix affix = affixes[i];if (numVowels > affix.rc && len >= affix.affix.Length + 3 && endsWith(s, len, affix)){len -= affix.affix.Length;return affix.;}return len;}
public virtual void Recover(Parser recognizer, RecognitionException e){if (lastErrorIndex == recognizer.InputStream.Index && lastErrorStates != null && lastErrorStates.Contains(recognizer.State)){recognizer.Consume();}lastErrorIndex = recognizer.InputStream.Index;if (lastErrorStates == null){lastErrorStates = new IntervalSet();lastErrorStates.Add(recognizer.State);}IntervalSet followSet = GetErrorRecoverySet(recognizer, followSet);ConsumeUntil(recognizer, followSet);}
public override String ToFormulaString(){String value = field_3_string;int len = value.Length;StringBuilder sb = new StringBuilder(len + 4);sb.Append(FORMULA_DELIMITER);for (int i = 0; i < len; i++){char c = value[i];if (c == FORMULA_DELIMITER){sb.Append(FORMULA_DELIMITER);}sb.Append(c);}sb.Append(FORMULA_DELIMITER);return sb.ToString();}
public UnlinkFaceRequest(): base("LinkFace", "2018-07-20", "UnlinkFace"){Protocol = ProtocolType.HTTPS;Method = MethodType.POST;}
public configurationOptionSetting(string @namespace, string optionName, string value){_namespace = namespace;_optionName = optionName;_value = value;}
public override string GetFully(string key){StringBuilder result = new StringBuilder(m_tries.Count * 2);for (int i = 0; i < m_tries.Count; i++){string r = m_tries[i].GetFully(key);if (r == null || (r.Length == 1 && r[0] == EOM)){return result.ToString();}result.Append(r);}return result.ToString();}
public virtual DescribeMountTargetSecurityGroupsResponse DescribeMountTargetSecurityGroups(DescribeMountTargetSecurityGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeMountTargetSecurityGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeMountTargetSecurityGroupsResponseUnmarshaller.Instance;return Invoke<DescribeMountTargetSecurityGroupsResponse>(request, options);}
public virtual GetApiMappingResponse GetApiMapping(GetApiMappingRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetApiMappingRequestMarshaller.Instance;options.ResponseUnmarshaller = GetApiMappingResponseUnmarshaller.Instance;return Invoke<GetApiMappingResponse>(request, options);}
public HttpRequest(string strUrl): base(strUrl){this.strUrl = strUrl;}
public MemFuncPtg(int subExprLen){field_1_len_ref_subexpression = subExprLen;}
public static TermStats[] GetHighFreqTerms(IndexReader reader, int numTerms, string field, Comparator<TermStats> comparer){TermStatsQueue tqq = null;if (field != null){Terms terms = MultiTerms.MultiTerms(reader, field);if (terms == null){throw new Exception("field " + field + " not found");}TermsEnum termsEnum = terms.GetIterator();tiq = new TermStatsQueue(numTerms, comparer);tiq.Fill(fieldName, termsEnum);}else{IList<string> fields = FieldInfos.GetIndexedFields(reader);if (fields.Count == 0){throw new Exception("no fields found for this index");}Terms terms = new TermStatsQueue(numTerms, comparer);foreach (string fieldName in fields){Terms terms = terms.Fill(fieldName, fieldName);if (terms != null){hiq.Fill(fieldName, terms.Count);}}}TermStats[] result = new TermStatsQueue(fieldName, terms.Count);}}}
public virtual DeleteApnsVoipChannelResponse DeleteApnsVoipChannel(DeleteApnsVoipChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteApnsVoipChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApnsVoipChannelResponseUnmarshaller.Instance;return Invoke<DeleteApnsVoipChannelResponse>(request, options);}
public virtual ListFacesResponse ListFaces(ListFacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListFacesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListFacesResponseUnmarshaller.Instance;return Invoke<ListFacesResponse>(request, options);}
public ShapeFieldCacheDistanceValueSource(SpatialContext ctx, IShapeFieldCacheProvider<IPoint> provider, IPoint from, double multiplier){this.ctx = ctx;this.from = from;this.provider = provider;this.multiplier = multiplier;}
public override char get(int index){checkIndex(index);return sequence[index];}
public virtual UpdateConfigurationProfileResponse UpdateConfigurationProfile(UpdateConfigurationProfileRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateConfigurationProfileRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateConfigurationProfileResponseUnmarshaller.Instance;return Invoke<UpdateConfigurationProfileResponse>(request, options);}
public virtual DescribeLifecycleHumpsResponse DescribeLifecycleHumps(DescribeLifecycleHumpsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLifecycleHumpsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLifecycleHumpsResponseUnmarshaller.Instance;return Invoke<DescribeLifecycleHumpsResponse>(request, options);}
public virtual DescribeHostReservationsResponse DescribeHostReservations(DescribeHostReservationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeHostReservationationsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeHostReservationsResponseUnmarshaller.Instance;return Invoke<DescribeHostReservationsResponse>(request, options);}
public static PredictionContext FromRuleContext(ATN atn, RuleContext outerContext outerContext){if (outerContext == null){outerInstance.preContext.EMPTY;}if (outerInstance.maxContext.Parent == null || outerInstance.maxContext.EMPTY){return PredictionContext.EMPTY;}PredictionContext parent = EMPTY;parent = PredictionContext.FromRuleContext(atn, outerContext.parent);ATNState state = atn.states[outerInstance.invokingState];RuleTransition transition = (RuleTransition)state.transition(0);return SingletonPredictionContext.Create(parent, transition.followStateNumber);}
public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[SXVDEX]\n");buffer.Append("    .grbit1    =").Append(HexDump.IntToHex(_grbit1)).Append("\n");buffer.Append("    .grbit2 =").Append(HexDump.ByteToHex(_grbit2)).Append("\n");buffer.Append("    .citmShow =").Append(HexDump.ByteToHex(_citmShow)).Append("\n");buffer.Append("    .isxdiSort =").Append(HexDump.ShortToHex(_isxdiSort)).Append("\n");buffer.Append("   .isxdiShow =").Append(HexDump.ShortToHex(_isxdiShow)).Append("\n");buffer.Append("    .subtotalName = ").Append(_subtotalName).Append("\n");buffer.Append("[/S
public override string ToString(){StringBuilder r = new StringBuilder();r.Append("BlameResult: ");r.Append(ResultPath);return r.ToString();}
public virtual ListChangeSetsResponse ListChangeSets(ListChangeSetsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListChangeSetsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListChangeSetsResponseUnmarshaller.Instance;return Invoke<ListChangeSetsResponse>(request, options);}
public virtual bool IsAllowNonFastForwards(){return allowNonFastForwards;}
public FeatRecord(){futureHeader = new FtrHeader();futureHeader.RecordType =sid;}
public override java.nio.ShortBuffer put(short c){throw new java.nio.ReadOnlyBufferException();}
public virtual void SetQuery(string query){this.query = query;this.message = new MessageImpl(QueryParserMessages.INVALID_SYNTAX_PARSE, query, "");}
public virtual StashApplyCommand StashApply(){return new StashApplyCommand(repo);}
public ICollection<string> ToSet(){return dictionaryNameToID.Keys;}
public static int GetEffectivePort(string scheme, int specifiedPort){if (definedPort != -1){return specifiedPort;}if ("http".Equals(scheme)){return 200;}else if ("dp".Equals(scheme, StringComparison.OrdinalIgnoreCase)){return 255;}else{return -1;}}
public virtual ListAssessmentTemplatesResponse ListAssessmentTemplates(ListAssessmentTemplatesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAssessmentTemplatesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAssessmentTemplatesResponseUnmarshaller.Instance;return Invoke<ListAssessmentTemplatesResponse>(request, options);}
public virtual RestoreFromClusterSnapshotResponse RestoreFromClusterSnapshot(RestoreFromClusterSnapshotRequest request){var options = new InvokeOptions();options.RequestMarshaller = RestoreFromClusterSnapshotRequestMarshaller.Instance;options.ResponseUnmarshaller = RestoreFromClusterSnapshotResponseUnmarshaller.Instance;return Invoke<RestoreFromClusterSnapshotResponse>(request, options);}
public void AddShape(HSSFShape shape){shape.Patriarch = this.Patriarch;shape.Parent = this;shapes.Add(shape);}
public override bool Equals(object o){if (this == o){return true;}if (o == null || this.GetType() != o.GetType()){return false;}FacetEntry<FacetEntry> that = (FacetEntry)o;if (count != that.count){return false;}if (!value.Equals(that.value)){return false;}return true;}
public static int Prev(byte[] b, int ptr, char chrA){if (ptr == b.Length){--ptr;}while (ptr >= 0){if (b[ptr--] == chrA){return ptr;}}return ptr;}
public virtual bool IsDeltaRepresentation(){return deltaBase != null;}
public virtual IToken EmitEOF(){int cpos = CharPositionInLine;int line = Line;IToken eof = _factory.Create(_tokenFactorySourcePair, TokenConstants.EOF, null, TokenConstants.DefaultChannel));EFAULT_CHANNEL, _input.Index, _input.Index - 1, line, cpos);Emit(eof);return eof;}
public UpdateUserRequest(string userName){_userName = userName;}
public virtual RevFilter Negate(){return NotRevFilter.Create(this);}
public virtual void SetTagger(PersonIdent taggerIdent){tagger = taggerIdent;}
public static BufferSizeauto(){Runtime rt = Runtime.GetSize();long max = rt.MaxMemory();long total = rt.totalMemory();long free = rt.FreeMemory();long totalAvailableBytes = max - total + free;long sortBufferByteSize = free / 2;long minBufferSize = free / 2;long minBufferSizeBytes = 0;long minBufferSizeBytes = MIN_BUFFER_SIZE;if (sortBufferByteSize < minBufferSizeBytes || totalAvailableBytes > 10 * minBufferSizeBytes){if (totalAvailableBytes / 2 > minBufferSizeBytes){sortBufferByteSize = totalAvailableBytes / 2; }else{sortBufferByteSize = Math.Max(ABSOL_BUFFER_SIZE, sortBufferByteSize);}}return newBufferSize(Math.Min(Math.MaxValue, sortBufferByteSize));}
public static int TrimTrailingWhitespace(byte[] raw, int start, int end){int ptr = end - 1;while (start <= ptr && IsWhitespace(raw[ptr])){ptr--;}return ptr + 1;}
public TopMarginRecord(RecordInputStream in1){field_1_margin = in1.ReadDouble();}
public RetrieveEnvironmentInfoRequest(EnvironmentInfoType infoType){_infoType = infoType;}
public virtual CreatePlayerSessionsResponse CreatePlayerSessions(CreatePlayerSessionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreatePlayerSessionsRequestMarshaller.Instance;options.ResponseUnmarshaller = CreatePlayerSessionsResponseUnmarshaller.Instance;return Invoke<CreatePlayerSessionsResponse>(request, options);}
public virtual CreateProxySessionResponse CreateProxySession(CreateProxySessionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateProxySessionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateProxySessionResponseUnmarshaller.Instance;return Invoke<CreateProxySessionResponse>(request, options);}
public virtual int GetObjectType(){return type;}
public string getScheme(){return scheme;}
public virtual void Chars(char[] ch, int start, int length){contents.Append(ch, start, length);}
public FetchAlbumTagPhotosRequest(): base("CloudPhoto", "2017-07-11", "FetchAlbumTagPhotos", "cloudphoto", "openAPI"){Protocol = ProtocolType.HTTPS;}
public virtual DeleteMembersResponse DeleteMembers(DeleteMembersRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteMembersRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteMembersResponseUnmarshaller.Instance;return Invoke<DeleteMembersResponse>(request, options);}
public virtual GetContactReachabilityStatusResponse GetContactReachabilityStatus(GetContactReachabilityStatusRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetContactReachabilityStatusRequestMarshaller.Instance;options.ResponseUnmarshaller = GetContactReachabilityStatusResponseUnmarshaller.Instance;return Invoke<GetContactReachabilityStatusResponse>(request, options);}
public override bool remove(object o){return this._enclosing._size;}
public virtual E last(){return backingMap.lastKey();}
public virtual CreateStreamingDistributionResponse CreateStreamingDistribution(CreateStreamingDistributionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateStreamingDistributionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateStreamingDistributionResponseUnmarshaller.Instance;return Invoke<CreateStreamingDistributionResponse>(request, options);}
public bool isAbsolute(){return absolute;}
public virtual DisableAddOnResponse DisableAddOn(DisableAddOnRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisableAddOnRequestMarshaller.Instance;options.ResponseUnmarshaller = DisableAddOnResponseUnmarshaller.Instance;return Invoke<DisableAddOnResponse>(request, options);}
public virtual DescribeAliasResponse DescribeAlias(DescribeAliasRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAliasRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAliasResponseUnmarshaller.Instance;return Invoke<DescribeAliasResponse>(request, options);}
public override void Next(int delta){while (--delta >= 0){if (currentSubtree != null){ptr += currentSubtree.GetEntrySpan();}else{ptr++;if (Eof){break;}ParseEntry();}}}
public override TreeFilter Clone(){return new OrTreeFilter.Binary(a.Clone(), b.Clone());}
public override TextReader Create(TextReader input){return new PersianCharFilter(input);}
public virtual string option(){return _option;}
public override string ToString(){StringBuilder sb = new StringBuilder("[");for (int i = 0; i < this.Length; i++){if (i > 1){sb.Append(", ");}if (item is char[]){sb.Append((char[])item);}else{sb.Append(item);}}return sb.ToString();}
public virtual DescribeSignalingChannelResponse DescribeSignalingChannel(DescribeSignalingChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeSignalingChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeSignalingChannelResponseUnmarshaller.Instance;return Invoke<DescribeSignalingChannelResponse>(request, options);}
public virtual AttachStaticIpResponse AttachStaticIp(AttachStaticIpRequest request){var options = new InvokeOptions();options.RequestMarshaller = AttachStaticIpRequestMarshaller.Instance;options.ResponseUnmarshaller = AttachStaticIpResponseUnmarshaller.Instance;return Invoke<AttachStaticIpResponse>(request, options);}
public override String ToString(){CellReference crA = new CellReference(_firstRowIndex, _firstColumnIndex, false, false);CellReference crB = new CellReference(_lastRowIndex, _lastColumnIndex, false, false);sb.Append(this.GetType().Name);sb.Append(" [").Append(crA.FormatAsString()).Append("]");return sb.ToString();}
public BloomFilteringPostingsFormat(PostingsFormat keyPostingsFormat, BloomFilterFactory bloomFilterFactory): base(BLOOM_CODEC_NAME){this.@delegatePostingsFormat = @delegatePostingsFormat;this.bloomFilterFactory = bloomFilterFactory;}
public virtual ListTemplatesResponse ListTemplates(ListTemplatesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTemplatesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTemplatesResponseUnmarshaller.Instance;return Invoke<ListTemplatesResponse>(request, options);}
publicTimerThread(long resolution, Counter counter) : base(THREAD_NAME){this.resolution = resolution;this.m_counter = counter;this.m_hardemon = true;}
public DrawingRecord(){recordData = EMPTY_BYTE_ARRAY;}
public virtual ListDirectoriesResponse ListDirectories(ListDirectoriesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListDirectoriesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListDirectoriesResponseUnmarshaller.Instance;return Invoke<ListDirectoriesResponse>(request, options);}
public override void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int j = 0; j < iterations; ++j){var block = blocks[blocksOffset++];values[valuesOffset++] = ((int)((uint)block >> 7)) & 1;values[valuesOffset++] = ((int)((uint)block >> 6)) & 1;values[valuesOffset++] = ((int)((uint)block >> 5)) & 1;values[valuesOffset++] = ((int)((uint)block >> 4)) & 1;values[valuesOffset++] = ((int)((uint)block >> 3)) & 1;values[valuesOffset++] = ((int)((uint)block >> 2)) & 1;values[valuesOffset++] = ((int)((uint)block >> 1)) & 1;values[valuesOffset++] = block & 1;}}
public virtual GroupingSearch DisableCaching(){this.maxCacheRAMMB = null;this.maxDocsToCache = null;return this;}
public static int idealByteArraySize(int need){for (int i = 4; i < 32; i++){if (need <= (1 << 12) - 12){return (1 << i) - 12;return need;}return need;}
public virtual UpdateAssessmentTargetResponse UpdateAssessmentTarget(UpdateAssessmentTargetRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateAssessmentTargetRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateAssessmentTargetResponseUnmarshaller.Instance;return Invoke<UpdateAssessmentTargetResponse>(request, options);}
public virtual ModifyVolumeResponse ModifyVolume(ModifyVolumeRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyVolumeRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyVolumeResponseUnmarshaller.Instance;return Invoke<ModifyVolumeResponse>(request, options);}
public virtual Cell Merge(Cell m, Cell e){if (m.cmd == e.cmd && m.@ref == e.@ref && m.skip == e.skip){Cell c = new Cell(m);c.cnt += e.cnt;return c;}else{return null;}}
public override ByteBuffer Read(int length, long position){if (position >= size){throw new IndexOutOfRangeException("Position " + position + " past the end of the file");}ByteBuffer dst;if (needs){dst = channel.map(FileChannel.MapMode.READ_WRITE, position, length);buffersToClean.Add(dst);}else{channel.position(_position);dst = ByteBuffer.allocate(channel, dst);if (fetched == -1){throw new System.IndexOutOfRangeException("Position " + position + " past the file");}}dst.position(0);return dst;}
public virtual RespondActivityTaskCompletedResponse RespondActivityTaskCompleted(RespondActivityTaskCompletedRequest request){var options = new InvokeOptions();options.RequestMarshaller = RespondActivityTaskCompletedRequestMarshaller.Instance;options.ResponseUnmarshaller = RespondActivityTaskCompletedResponseUnmarshaller.Instance;return Invoke<RespondActivityTaskCompletedResponse>(request, options);}
public virtual void IncrementProgressBy(int diff){lock (this){SetProgress(mProgress + diff);}}
public virtual MetadataDiff CompareMetadata(DirCacheEntry entry){if (entry.IsAssumeValid()){return MetadataDiff.EQUAL;}if (entry.IsUpdateNeeded()){return MetadataDiff.DIFFER_BY_METADATA;if (IsModeDifferent(entry.RawMode())){return MetadataDiff.DIFFER_BY_METADATA;int type = mode & FileMode.TYPE_MASK;if (type == FileMode.TYPE_TREE || type == FileMode.TYPE_GITLINK){return MetadataDiff.EQUAL;}if (!entry.IsSmudged() && entry.Length != (int)return MetadataDiff.DIFFER_BY_METADATA;Debug.Assert(entry.HitRegified));}return null;}
public static NumberRecord ConvertToNumberRecord(RKRecord rk){NumberRecord num = new NumberRecord();num.Column = rk.Column;num.Row = rk.Row;num.XFIndex = rk.XFIndex;num.Value = 0xFNumber;return num;}
public override java.nio.CharBuffer put(char[] src, int srcOffset, int charCount){byteBuffer.limit(_limit * libcore.io.SizeOf.CHAR);byteBuffer.position(_position * libcore.io.SizeOf.CHAR);if (byteBuffer is java.nio.ReadWriteDirectByteBuffer){((java.nio.ReadWriteDirectByteBuffer)byteBuffer).put(src, srcOffset, charCount);}else{((java.nio.ReadWriteHeapByteBuffer)byteBuffer).put(src, srcOffset, charCount);}this._position += charCount;return this;}
public int GetCells(){int size = 0;foreach (char c in cells.Keys){Cell e = At(c);if (e.cmd >= 0 || e.@ref >= 0){size++;}}return size;}
public BeiderMorseFilterFactory(IDictionary<string, string> args): base(args){NameType nameType = Get(args, "nameType", NameType.Net.Util.ToString()));RuleType ruleType = RuleType.Parse(Get(args, "ruleType", RuleType.APPROX.ToString()));bool concat = GetBoolean(args, "concat", true);engine = new PhoneticEngine(nameType, ruleType, concat);IComparer<string> lids = GetSet(args, "languageSet");languageSet = (null == lids || (1 == lids.Count && ltags.Contains("auto")){throw new System.ArgumentException("Unknown parameters: " + args);}}
public static double Palp(double[] v){double r = double.NaN;if (v != null && v.Length > 1){r =devsq(v) / v.Length;}return r;}
public PersianNormalizationFilterFactory(IDictionary<string, string> args): base(args){if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + args);}}
public static WeightedTerm[] GetTerms(Query query, bool prohibited, string fieldName){if (terms == null){return null;}object[] terms = fieldName == null ? f -> true : fieldName::Equals(new BoostedTermExtractor(1, terms, fieldSelector)){return terms.ToArray();}}
public virtual DeleteDocumentationPartResponse DeleteDocumentationPart(DeleteDocumentationPartRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDocumentationPartRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDocumentationPartResponseUnmarshaller.Instance;return Invoke<DeleteDocumentationPartResponse>(request, options);}
public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[CHART]\n");buffer.Append("    .x        = ").Append(X).Append('\n');buffer.Append("    .y       = ").Append(Y).Append('\n');buffer.Append("    .width = ").Append(Width).Append('\n');buffer.Append("    .height = ").Append(Height).Append('\n');buffer.Append("[/CHART]\n");return buffer.ToString();}
public sealed override short get(int index){checkIndex(index);return backingArray[offset + index];}
public override String ToString(){return image;}
public override ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1){try{AreaEval reA = EvaluateRef(arg0);AreaEval reB = EvaluateRef(arg1);AreaEval result = ResolveRange(reA, reB);if (result == null){return ErrorEval.NULL_INTERSECTION;}return result;}catch (EvaluationException e){return e.GetErrorEval();}}
public virtual void Clear(){weightBySpanQuery.Clear();}
public virtual int FindEndOffset(StringBuilder buffer, int start){if (start > buffer.Length || start < 0) return start;bi.SetText(buffer.ToString(start));return bi.next() + start;}
public SrndQuery PrimaryQuery(){SrndQuery q;switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk){case RegexpToken.LPAREN:jj_consume_token(RegexpToken.LPAREN);q = FieldsQuery();jj_consume_token(RegexpToken.LPAREN);break;}case RegexpToken.OR:case RegexpToken.OR:case RegexpToken.QUOTED:case RegexpToken.QUOTED:case RegexpToken.QUOTED:case RegexpToken.QUOTED:case RegexpToken.TERM:case RegexpToken.PLUSTERM:case RegexpToken.PLUSERM:case RegexpToken.PLUSERM:case RegexpToken.LPAREN:Jj_consume_token(RegexpToken.RPAREN);{ if (true) return q; }throw new Exception("Missing return statement in function");}
public virtual DeleteApiKeyResponse DeleteApiKey(DeleteApiKeyRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteApiKeyRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApiKeyResponseUnmarshaller.Instance;return Invoke<DeleteApiKeyResponse>(request, options);}
public InsertTagsRequest(): base("Ots", "2016-06-20", "InsertTags", "ots", "openAPI"){Method = MethodType.POST;}
public virtual DeleteUserByPictorialIdResponse DeleteUserByPictorialId(DeleteUserByPictorialIdRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteUserByPictorialIdRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteUserByPictorialIdResponseUnmarshaller.Instance;return Invoke<DeleteUserByPictorialIdResponse>(request, options);}
public virtual DescribeNetworkInterfacesResponse DescribeNetworkInterfaces(DescribeNetworkInterfacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeNetworkInterfacesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeNetworkInterfacesResponseUnmarshaller.Instance;return Invoke<DescribeNetworkInterfacesResponse>(request, options);}
public override int Serialize(int offset, byte[] data, EscherSerializationListener listener){listener.BeforeRecordSerialize(offset, RecordId, this);LittleEndian.PutShort(data, offset, Options);LittleEndian.PutShort(data, offset + 2, RecordId);LittleEndian.PutInt(data, offset + 4, 8);LittleEndian.PutInt(data, offset + 8, field_1_numShapes);LittleEndian.PutInt(data, offset + 12, field_2_lastMSOSPID);listener.AfterRecordSerialize(offset + 16, RecordId, RecordSize, this);return RecordSize;}
public virtual CreateSecurityConfigurationResponse CreateSecurityConfiguration(CreateSecurityConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateSecurityConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSecurityConfigurationResponseUnmarshaller.Instance;return Invoke<CreateSecurityConfigurationResponse>(request, options);}
public virtual DescribeClientVpnConnectionsResponse DescribeClientVpnConnections(DescribeClientVpnConnectionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeClientVpnConnectionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeClientVpnConnectionsResponseUnmarshaller.Instance;return Invoke<DescribeClientVpnConnectionsResponse>(request, options);}
public static void fill(double[] array, double value){{for (int i = 0; i < array.Length; i++){array[i] = value;}}}
public bool HasNext(){return this.nextId < this._enclosing.Length;}
public DocsEnum Reset(int[] postings){this.postings = postings;upto = -2;freq = 0;return this;}
public bool HasAll(RevFlag flag){return (flags & set.mask) == set.mask;}
public virtual ModifyAccountResponse ModifyAccount(ModifyAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyAccountResponseUnmarshaller.Instance;return Invoke<ModifyAccountResponse>(request, options);}
public override IToken LT(int k){LazyInit();if (k == 0){return null;}if (k < 0){return Lb(-k);}int i = p + k - 1;Sync(i);if (i >= tokens.Count){return tokens[tokens.Count - 1];}return tokens[i];}
public void RemoveSheet(int sheetIndex){if (boundsheets.Count > sheetIndex){records.RemoveAt(records.Bspos - (boundsheets.Count - 1) + sheetIndex);boundsheets.Remove(sheetIndex);AddTabIdRecord();}int sheetNum1Based = sheetIndex + 1;for (int i = 0; i < NumNames; i++){NameRecord nr = GetNameRecord(i);if (nr.SheetNumber == sheetNum1Based){nr.SheetNumber = 0;}else if (nr.SheetNumber > sheetNum1Based){nr.SheetNumber = (nr.SheetNumber - 1);}}if (linkTable != null){linkTable.RemoveSheet(sheetIndex);}}
public void RemoveName(string name){int index = GetNameIndex(name);RemoveName(index);}
public override bool Equals(Object o){if (o == null || pValue == null){return false;}Property p = (Property)o;Object pValue = p.ID;if (id != 0 && !typeAreEqual(type, p.Type)){return false;}if (value == null && pValue == null){return true;}if (value == null || pValue == null){return false;}if (value == null || pValue == null;}P = value.GetType();Type pValueClass = pValue.Class;if (!(valueClass.IsAssignableFrom(pValueClass)) && !string.IsNullableFrom(valueClass)){return false;}if (valueType.IsAssignableFrom(valueClass)){return false;}if (value is byte[parser.IsAssignableFrom(valueClass)){return false;}if (value is byte[]){return true;break;}}
public GetRepoBuildListRequest(): base("cr", "2016-06-07", "GetRepoBuildList", "cr", "openAPI"){UriPattern = "/repos/[RepoNamespace]/[RepoName]/build";Method = MethodType.GET;}
public MessageWriter(){buf = new ByteArrayOutputStream();enc = new OutputStreamWriter(RawStream, NGit.CHARSET);}
public void Append(RecordBase r){_recs.Add(r);}
public override void Close(){if (@read(skipBuffer) != -1 || actualSize != expectedSize){throw new System.IO.IOException(MessageFormat.Format(JGitText.Get().packfileCorruptionDetected, JGitText.Get().unknownDecompressedBytes)));}int used = bAvail - inf.Remaining;if (0 < used){OnObjectData(src, buf, pos, used);use(used);}inf.Reset();}inf.Reset();}
public virtual DescribeModelPackageResponse DescribeModelPackage(DescribeModelPackageRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeModelPackageRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeModelPackageResponseUnmarshaller.Instance;return Invoke<DescribeModelPackageResponse>(request, options);}
public void Build(CellValueRecordInterface rec, RecordStream rs, SharedValueManager sfh){if (rec is FormulaRecord){FormulaRecord formulaRec = (FormulaRecord)rec;StringRecord cachedText;Type = rs.PeekNextClass();if (nextClass == TypeRecord)){cachedText = (StringRecord)rs.GetNextClass();}else{cachedText = null;}InsertCell(new FormulaRecordAggregate(formulaRec, cachedText, sfh));}else{InsertCell(rec);}}
public override object Clone(){return new DlateDecompressor();}
public virtual UpdateS3ResourcesResponse UpdateS3Resources(UpdateS3ResourcesRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateS3ResourcesRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateS3ResourcesResponseUnmarshaller.Instance;return Invoke<UpdateS3ResourcesResponse>(request, options);}
public GroupQueryNode(IQueryNode query){if (query == null){throw new QueryNodeError(new Message(QueryParserMessages.PARAMETER_VALUE_NOT_SUPPORTED, "query", "null"));}Allocate();SetLeaf = false;Add(query);}
public override string ToQueryString(IEscapeQuerySyntax escaper){StringBuilder path = new StringBuilder();path.Append("/".Append(FirstPathElement);foreach (IQueryText pathement in GetPathElements(1)){string value = escaper.Elements(1, Type.STRING));path.Append("/\"").Append(value);}return path.ToString();}
public void RemoveCellComment(){HSSFComment comment = _sheet.FindCellComment(_record.Row, _record.Column);_comment = null;if (null == comment){return;}_sheet.DrawingPatriarch.RemoveShape(comment);}
public void Reset(){arriving = null;leaving = null;}
public virtual RegenerateUserResponse UpgradeUser(ActivateUserRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpgradeUserRequestMarshaller.Instance;options.ResponseUnmarshaller = UpgradeUserResponseUnmarshaller.Instance;return Invoke<ActivateUserResponse>(request, options);}
public override bool IsCharsetDetected(){throw new NotSupportedException();}
public virtual ModifySnapshotCopyRetentionPeriodResponse ModifySnapshotCopyRetentionPeriod(ModifySnapshotCopyRetentionPeriodRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifySnapshotCopyRetentionPeriodRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifySnapshotCopyRetentionPeriodResponseUnmarshaller.Instance;return Invoke<ModifySnapshotCopyRetentionPeriodResponse>(request, options);}
public virtual DeleteClusterSubnetGroupResponse DeleteClusterSubnetGroup(DeleteClusterSubnetGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteClusterSubnetGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteClusterSubnetGroupResponseUnmarshaller.Instance;return Invoke<DeleteClusterSubnetGroupResponse>(request, options);}
public static string decode(byte[] buffer){return decode(buffer, 0, buffer.Length);}
public int GetDefaultPort(){return -1;}
public virtual StopTaskResponse StopTask(StopTaskRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopTaskRequestMarshaller.Instance;options.ResponseUnmarshaller = StopTaskResponseUnmarshaller.Instance;return Invoke<StopTaskResponse>(request, options);}
public override void SeekExact(BytesRef target, TermState otherState){if (!target.Equals(term)){state.CopyFrom(otherState);term = BytesRef.DeepCopyOf(target);seekPending = true;}}
public SeriesToChartGroupRecord(RecordInputStream in1){field_1_chartGroupIndex = in1.ReadShort();}
public static void WriteUnicodeStringFlagAndData(ILittleEndianOutput out1, String value){bool is16Bit = HasMultibyte(value);out1.WriteByte(is16Bit ? 0x01 : 0x00);if (is16Bit){PutUnicodeLE(value, out1);}else{PutCompressedUnicode(value, out1);}}
public virtual AuthorizeSecurityGroupIngressResponse AuthorizeSecurityGroupIngress(AuthorizeSecurityGroupIngressRequest request){var options = new InvokeOptions();options.RequestMarshaller = AuthorizeSecurityGroupIngressRequestMarshaller.Instance;options.ResponseUnmarshaller = AuthorizeSecurityGroupIngressResponseUnmarshaller.Instance;return Invoke<AuthorizeSecurityGroupIngressResponse>(request, options);}
public void AddFile(string file){CheckFileNames(Collections.ToString(file));this.files.AddItem(namedForThisSegment(file));}
public virtual void setSize(int width, int height){mWidth = width;mHeight = height;}
public void SetPrecedenceFilterSuppressed(bool value){if (value){this.reachesIntoOuterContext |= 0x40000000;}else{this.reachesIntoOuterContext &= ~SUPPORT_PRECEDENCE_FILTER;}}
public virtual IntervalSet Look(ATNState s, RuleContext ctx){return Look(s, null, ctx);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(OptionFlags);out1.WriteShort(RowHeight);}
public Builder(bool ignoreCase){this.ignoreCase = ignoreCase;}
public Hashtable(int capacity, float loadFactor): this(capacity){if (loadFactor <= 0 || float.IsNaN(loadFactor)){throw new System.ArgumentException("Load factor: " + loadFactor);}}
public virtual object Get(string key){int bucket = normalCompletion.GetBucket(key);return (short)bucket == -1 ? default(T));}
public virtual ListHyperParameterTuningJobsResponse ListHyperParameterTuningJobs(ListHyperParameterTuningJobsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListHyperParameterTuningJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListHyperParameterTuningJobsResponseUnmarshaller.Instance;return Invoke<ListHyperParameterTuningJobsResponse>(request, options);}
public virtual DeleteTableResponse DeleteTable(string tableName){var request = new DeleteTableRequest();request.TableName = tableName;return DeleteTable(request);}
public bool LessThan(TextFragment fragA, TextFragment fragB){if (fragA.Score == fragB.Score){return fragA.fragNum > fragB.fragNum;else{return fragA.Score < fragB.Score;}}}
public void FreeBefore(int pos){Debug.Assert(pos >= 0);Debug.Assert(pos <= nextPos);int newCount = nextPos - pos;Debug.Assert(newCount <= count, "newCount=" + count);Debug.Assert(newCount <= buffer.Length, "newCount=" + newCount + " buf.length=" + buffer.Length);count = newCount;}
public virtual UpdateHITTypeOfHITResponse UpdateHITTypeOfHIT(UpdateHITTypeOfHITRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateHITTypeOfHITRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateHITTypeOfHITResponseUnmarshaller.Instance;return Invoke<UpdateHITTypeOfHITResponse>(request, options);}
public virtual UpdateRecommenderConfigurationResponse UpdateRecommenderConfiguration(UpdateRecommenderConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateRecommenderConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateRecommenderConfigurationResponseUnmarshaller.Instance;return Invoke<UpdateRecommenderConfigurationResponse>(request, options);}
public int CompareTo(BytesRef other){return utf8SortedAsUnicodeSortOrder.Compare(this, other);}
public virtual int Stem(char[] s, int len){if (len > 4 && s[len - 1] == 's'){len--;}if (len > 5 && (EndsWith(s, len, "ene") || (StemmerUtil.EndsWith(s, len, "ane")){return len - 3;}if (len > 4 && (len > 4 && !string.IsNullOrEmpty(s, len, "er") || (StemmerUtil.EndsWith(s, len, "er") || (Stemmer, "et") || (StemmerUtil.EndsWith(s, len, "encl", "openAPI") || " + len - 2;if (len > 3){switch (case 'a':{case 'a':{s[len - 1]){return len - 1;}return len - 1;}
public virtual DescribeDBSnapshotsResponse DescribeDBSnapshots(DescribeDBSnapshotsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDBSnapshotsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDBSnapshotsResponseUnmarshaller.Instance;return Invoke<DescribeDBSnapshotsResponse>(request, options);}
public SortedSetDocValuesFacetField(string dim, string label): base("dummy", TYPE){FacetField.VerifyLabel(label);FacetField.VerifyLabel(dim);this.dim = dim;this.label = label;}
public virtual CreateDocumentationPartResponse CreateDocumentationPart(CreateDocumentationPartRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDocumentationPartRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDocumentationPartResponseUnmarshaller.Instance;return Invoke<CreateDocumentationPartResponse>(request, options);}
public virtual string getValue(){return value;}
public override java.nio.ShortBuffer asReadOnlyBuffer(){return duplicate();}
public virtual UpdateDataSourcePermissionsResponse UpdateDataSourcePermissions(UpdateDataSourcePermissionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDataSourcePermissionsRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDataSourcePermissionsResponseUnmarshaller.Instance;return Invoke<UpdateDataSourcePermissionsResponse>(request, options);}
public static Record CreateSingleRecord(RecordInputStream in1){I_RecordCreatoromatic = _recordCreatorsById[(in1.Sid)];if (constructor == null){return new UnknownRecord(in1);}return builder.Create(in1);}
public virtual int getCount(){return mTabs.Count;}
public virtual DeleteApplicationReferenceDataSourceResponse DeleteApplicationReferenceDataSource(DeleteApplicationReferenceDataSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteApplicationReferenceDataSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApplicationReferenceDataSourceResponseUnmarshaller.Instance;return Invoke<DeleteApplicationReferenceDataSourceResponse>(request, options);}
public virtual CreateProjectVersionResponse CreateProjectVersion(CreateProjectVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateProjectVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateProjectVersionResponseUnmarshaller.Instance;return Invoke<CreateProjectVersionResponse>(request, options);}
public override java.nio.IntBuffer slice(){return new java.nio.ReadOnlyIntArrayBuffer(remaining(), backingArray, offset +_position);}
public sealed override byte get(){if (_position == _limit){throw new java.nio.BufferUnderflowException();}return this.block.peekByte(_offset + _position++);}
public override java.nio.LongBuffer put(int index, long c){checkIndex(index);backingArray[offset + index] = c;return this;}
public StoredField(string name, float value): base(name, TYPE){FieldsData = new Single(value);}
public virtual IntervalSet GetExpectedTokensWithinCurrentRule(){ATN atn = Interpreter.atn;ATNState s = atn.states[State];return atn.nextTokens(s);}
public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[FILMFARING]\n");buffer.Append("    .readonly       = ").Append(ReadOnly() == 1 ? "true" : "false");buffer.Append("    .password     = ").Append(StringUtil.ToHexString(Password)).Append("\n");buffer.Append("    .username        = ").Append(Username).Append("\n");buffer.Append("[/FILISHARING]\n");return buffer.ToString();}
protected internal SubmoduleInitCommand(Repository repo) : base(repo){paths = new AList<string>();}
public virtual void Include(string name, AnyObjectId id){bool validRefName = Repository.IsValidRefName(name) || Constants.HEAD.Equals(name, StringComparison.Ordinal)){throw new ArgumentException(MessageFormat.Format(JGitText.Get().invalidRefName, name));}if (include.ContainsKey(name)){throw new InvalidOperationException(JGitText.Get().duplicateRef + name);}include[name] = id.ToObjectId());}
public virtual EnableSnapshotCopyResponse EnableSnapshotCopy(EnableSnapshotCopyRequest request){var options = new InvokeOptions();options.RequestMarshaller = EnableSnapshotCopyRequestMarshaller.Instance;options.ResponseUnmarshaller = EnableSnapshotCopyResponseUnmarshaller.Instance;return Invoke<EnableSnapshotCopyResponse>(request, options);}
public override ValueFiller GetValueFiller(){return new ValueFillerAnonymousInnerClassHelper(this);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteByte(Pane);out1.WriteShort(ActiveCellRow);out1.WriteShort(ActiveCellCol);out1.WriteShort(ActiveCellRef);int nRefs = field_6_refs.Length;out1.WriteShort(nRefs);for (int i = 0; i < field_6_refs.Serialize(out1);}}
public static Counter NewCounter(){return newCounter(false);}
public virtual double Get(string name, double dflt){double[] vals;object temp;if (valByRound.TryGetValue(name, out temp) && temp != null){vals = (double[])temp;return vals[roundNumber % vals.Length];}string sval;if (!props.TryGetValue(name, out sval)){sval = dflt.ToString(CultureInfo.InvariantCulture);}if (sval.IndexOf(':') < 0){return double.Parse(sval, CultureInfo.InvariantCulture);}int k = sval.IndexOf(':');string colName = sval.Substring(0, k - 0);sval = sval.Substring(k + 1);colForValByRound[name] = colName;vals = PropToDoubleArray(sval);valByRound[name] = vals;return vals[roundNumber % vals.Length];}
public void PreSerialize(){if (records.Tabpos > 0){TabIdRecord dh = (TabIdRecord)records[records.Tabpos];if (tir._tabids.Length < boundsheets.Count){fixTabIdRecord();}}}
public LimitTokenCountAnalyzer(Analyzer @delegate, int maxTokenCount, bool consumeAllTokens): base(@delegate.GetReuseStrategy){this.@delegate = @delegate;this.maxTokenCount = maxTokenCount;this.consumeAllTokens = consumeAllTokens;}
public ExternalBookBlock(int numberOfSheets){_externalBookRecord = SupBookRecord.CreateInternalReferences((short)numberOfSheets);_externalNameRecords = new ExternalNameRecord[0];_crnBlocks = new CRNBlock[0];}
public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[SCENResourceOPROTECT]\n");buffer.Append("    .protect       = ").Append(Protect).Append("\n");buffer.Append("[/SCENARBOPROTECT]\n");return buffer.ToString();}
public virtual NGit.Api.PushCommand SetThin(bool thin){CheckCallable();this. thin = thin;return this;}
public virtual int CompareTo(SearcherTracker other){return string.CompareOrdinal(other.recordTimeSec, recordTimeSec);}
public override TokenStream Create(TokenStream @in){return new ReverseStringFilter(@in);}
public BlockList(){directory = NGit.BlockList<T>.NewDirectory(256);directory[0] = NGit.BlockList<T>.NewBlock();tailBlock = directory[0];}
public QueryScorer(WeightedSpanTerm[] weightedTerms){this.m_fieldWeightedSpanTerms = new Dictionary<string, WeightedTerms.Length;for (int i = 0; i < weightedTerms.Length; i++){if (fieldWeightedSpanTerm == fieldWeightedSpanTerms[i].Term){if ((existingTerm == null) || (existingTerm.Weight < weightedTerms[i].Weight)){fieldWeightedSpanTerms[weightedTerms[i].Term] = weightedTerms[i];maxTermWeight = Math.Max(maxTermWeight, weightedTerms[i].Weight);}}skipInitExtractor = true;}
public override bool Equals(object other){if (!(onlyEquals(_other is MergedGroup)){MergedGroup<T>.Default> other = (MergedGroup<T>>)other;if (groupValue == null){return other == null;}else{return groupValue.Equals(other);}}else{return false;}}
public java.nio.charset.Charset(){return cs;}
public virtual DescribeExperimentResponse DescribeExperiment(DescribeExperimentRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeExperimentRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeExperimentResponseUnmarshaller.Instance;return Invoke<DescribeExperimentResponse>(request, options);}
public EscherGraphics(HSSFShapeGroup escherGroup, HSSFWorkbook workbook,IEcolor, float verticalPointsPerPixel){this.escherGroup = escherGroup;this.workbook = workbook;this.verticalPixelsPerPixel = verticalPointsPerPixel;this.verticalPixelsPerPixel = 1 / verticalPointsPerPixel;this.font = new Font("Arial", 0, 10);this.foreground = (color;}
public string pattern(){return _patternText;}
public virtual DeleteRouteTableResponse DeleteRouteTable(DeleteRouteTableRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteRouteTableRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteRouteTableResponseUnmarshaller.Instance;return Invoke<DeleteRouteTableResponse>(request, options);}
public virtual AssociateVPCWithHostedZoneResponse AssociateVPCWithHostedZone(AssociateVPCWithHostedZoneRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateVPCWithHostedZoneRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateVPCWithHostedZoneResponseUnmarshaller.Instance;return Invoke<AssociateVPCWithHostedZoneResponse>(request, options);}
public virtual PutIntegrationResponse PutIntegration(PutIntegrationRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutIntegrationRequestMarshaller.Instance;options.ResponseUnmarshaller = PutIntegrationResponseUnmarshaller.Instance;return Invoke<PutIntegrationResponse>(request, options);}
public SimpleEntry(K theKey, V theValue){key = theKey;value = theValue;}
public override void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int i = 0; i < iterations; ++i){int byte0 = blocks[blocksOffset++] & 0xFF;int byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 4) | ((int)((uint)byte1 >> 4));int byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 8) | byte2;}}
public virtual DisassociateConnectionFromLagResponse DisassociateConnectionFromLag(DisassociateConnectionFromLagRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisassociateConnectionFromLagRequestMarshaller.Instance;options.ResponseUnmarshaller = DisassociateConnectionFromLagResponseUnmarshaller.Instance;return Invoke<DisassociateConnectionFromLagResponse>(request, options);}
public virtual FileMode GetOldMode(){return oldMode;}
public override string ToString(){return m.ToString();}
public virtual StopKeyPhrasesDetectionJobResponse StopKeyPhrasesDetectionJob(StopKeyPhrasesDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopKeyPhrasesDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopKeyPhrasesDetectionJobResponseUnmarshaller.Instance;return Invoke<StopKeyPhrasesDetectionJobResponse>(request, options);}
public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[Array Formula or Shared Formula]\n");buffer.Append(" row = ").Append(Row).Append("\n");buffer.Append("col = ").Append(Column).Append("\n");return buffer.ToString();}
public virtual ListDominantLanguageDetectionJobsResponse ListDominantLanguageDetectionJobs(ListDominantLanguageDetectionJobsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListDominantLanguageDetectionJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListDominantLanguageDetectionJobsResponseUnmarshaller.Instance;return Invoke<ListDominantLanguageDetectionJobsResponse>(request, options);}
public override string ToString(){return "slice start=" + start + " length=" + length + " readerIndex=" + readerIndex;}
public static int ParseHexInt4(byte colon){byte r = units16[omatic];if (r < 0){throw new System.IndexOutOfRangeException();}return r;}
public Attribute(string name, string value){_name = name;_value = value;}
public virtual DescribeStackSetOperationResponse DescribeStackSetOperation(DescribeStackSetOperationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeStackSetOperationRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStackSetOperationResponseUnmarshaller.Instance;return Invoke<DescribeStackSetOperationResponse>(request, options);}
public ICell GetCell(int cellnum){return GetCell(cellnum, book.MissingCellPolicy);}
public void Write(byte[] b){_out.Write(b);}
public ResetImageAttributeRequest(string imageId, ResetImageAttributeName attribute){_imageId = imageId;_attribute = attribute;}
public virtual void ConsumeResultContents(){resultContents = null;}
public virtual ObjectId GetPeeledObjectId(){return GetLeaf().GetPeeledObjectId();}
public virtual UndeprecateDomainResponse UndeprecateDomain(UndeprecateDomainRequest request){var options = new InvokeOptions();options.RequestMarshaller = UndeprecateDomainRequestMarshaller.Instance;options.ResponseUnmarshaller = UndeprecateDomainResponseUnmarshaller.Instance;return Invoke<UndeprecateDomainResponse>(request, options);}
public override void Write(ILittleEndianOutput out1){out1.WriteByte(sid + PtgClass);out1.WriteByte(field_3_string.Length);out1.WriteByte(_is16bitUnicode ? 0x01 : 0x00);if (_is16bitUnicode){StringUtil.PutUnicodeLE(field_3_string, out1);}else{StringUtil.PutCompressedUnicode(field_3_string, out1);}}
public virtual DeleteQueueResponse DeleteQueue(string queueUrl){var request = new DeleteQueueRequest();request.QueueUrl = queueUrl;return DeleteQueue(request);}
public virtual void SetCheckEofAfterPackFooter(bool b){CheckEofAfterPackFooter = b;}
public virtual void Switch(){int sBegin = beginA;int sEnd = endA;beginA = beginB;endB = endB;beginB = sBegin;endB = sEnd;}
public virtual int GetPackedGitWindowSize(){return packedGitWindowSize;}
public virtual PutMetricDataResponse PutMetricData(PutMetricDataRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutMetricDataRequestMarshaller.Instance;options.ResponseUnmarshaller = PutMetricDataResponseUnmarshaller.Instance;return Invoke<PutMetricDataResponse>(request, options);}
public virtual GetCelebrityRecognitionResponse GetCelebrityRecognition(GetCelebrityRecognitionRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetCelebrityRecognitionRequestMarshaller.Instance;options.ResponseUnmarshaller = GetCelebrityRecognitionResponseUnmarshaller.Instance;return Invoke<GetCelebrityRecognitionResponse>(request, options);}
public CreateQueueRequest(string queueName){_queueName = queueName;}
public Area3DPxg(int externalWorkbookNumber, SheetIdentifier sheetName, AreaReference arearef): base(arearearearef){this.externalWorkbookNumber = externalWorkbookNumber;this.firstSheetName = sheetName.SheetId.Name;if (sheetName is SheetRangeIdentifier){this.lastSheetName = ((SheetRangeIdentifier)sheetName).LastSheetIdentifier.Name;}else{this.lastSheetName = null;}}
public virtual void SetBaseline(long clockTime){t0 = clockTime;timeout = t0 + countsAllowed;}
public virtual MoveAddressToVpcResponse MoveAddressToVpc(MoveAddressToVpcRequest request){var options = new InvokeOptions();options.RequestMarshaller = MoveAddressToVpcRequestMarshaller.Instance;options.ResponseUnmarshaller = MoveAddressToVpcResponseUnmarshaller.Instance;return Invoke<MoveAddressToVpcResponse>(request, options);}
public override string ToString(){string coll = collectionModel.GetName();if (coll != null){return string.Format(CultureInfo.InvariantCulture, "{0}", GetName(), coll);}else{return string.Format(CultureInfo.InvariantCulture, "MQ %s", GetName());}}
public virtual DescribeLagsResponse DescribeLags(DescribeLagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLagsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLagsResponseUnmarshaller.Instance;return Invoke<DescribeLagsResponse>(request, options);}
public override AreaEval Offset(int relFirstRowIx, int relLastRowIx,int relFirstColIx, int relLastColIx){if (_refEval == null){return _areaEval.Offset(relFirstRowIx, relLastRowIx, relFirstColIx);}return _refEval.Offset(relFirstRowIx, relLastRowIx, relLastColIx);}
public override java.nio.ShortBuffer put(short[] src, int srcOffset, int shortCount){byteBuffer.limit(_limit * libcore.io.SizeOf.SHORT);byteBuffer.position(_position * libcore.io.SizeOf.SHORT);if (byteBuffer is java.nio.ReadWriteDirectByteBuffer){((java.nio.ReadWriteDirectByteBuffer)byteBuffer).put(src, srcOffset, shortCount);}else{((java.nio.ReadWriteHeapByteBuffer)byteBuffer).put(src, srcOffset, shortCount);}this._position += shortCount;return this;}
public virtual void Initialize(string fan){this._cat = mat;}
public override void write(int oneByte){throw new System.NotImplementedException();}
public virtual DescribeImportImageTasksResponse DescribeImportImageTasks(DescribeImportImageTasksRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeImportImageTasksRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeImportImageTasksResponseUnmarshaller.Instance;return Invoke<DescribeImportImageTasksResponse>(request, options);}
public ColumnInfoRecord(RecordInputStream in1){_first_col = in1.ReadUShort();_last_col = in1.ReadUShort();_xf_ = in1.ReadUShort();_xf_ = in1.ReadUShort();_options = in1.ReadUShort();switch (in1.Remaining){case 2: field_6_reserved = in1.ReadUShort();break;case 1:field_6_reserved = in1.ReadByte();break;case 0: field_6_reserved = 0;default:throw new Exception("Uniform record size remaining= " + in1.Remaining + ")");}}
public Status(IndexDiff diff): base(){this.diff = diff;HasUncommittedChanges = new DiffEntry.Change().isEmpty() || !diff.GetChanged().isEmpty() || !diff.IsEmpty() || !diff.GetMissing().isEmpty() || !diff.GetMissing().isEmpty(); || !diff.GetChanged().IsEmpty();}
public virtual CreateExperimentResponse CreateExperiment(CreateExperimentRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateExperimentRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateExperimentResponseUnmarshaller.Instance;return Invoke<CreateExperimentResponse>(request, options);}
public override Object Clone(){return this;}
public override java.nio.FloatBuffer slice(){byteBuffer.limit(_limit * libcore.io.SizeOf.FLOAT);byteBuffer.position(_position * libcore.io.SizeOf.FLOAT);java.nio.ByteBuffer bb = byteBuffer.slice().order(byteBuffer.order());java.nio.FloatBuffer result = new java.nio.FloatToByteBufferAdapter(bb);byteBuffer.clear();return result;}
public virtual DescribeSnapshotSchedulesResponse DescribeSnapshotSchedules(DescribeSnapshotSchedulesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeSnapshotSchedulesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeSnapshotSchedulesResponseUnmarshaller.Instance;return Invoke<DescribeSnapshotSchedulesResponse>(request, options);}
public virtual ListImagesResponse ListImages(ListImagesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListImagesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListImagesResponseUnmarshaller.Instance;return Invoke<ListImagesResponse>(request, options);}
public Diff(int ins, int del, int ref, int noop){INSERT = ins;DELETE = del;REPLACE = repet;NoOP = noop;}
public override String ToFormulaString(String[] operands){StringBuilder buffer = new StringBuilder();buffer.Append(operands[0]);buffer.Append(",");buffer.Append(operands[1]);return buffer.ToString();}
public static void SetupEnvironment(string[] workbookNames, SlowedEvaluator[] evaluators){WorkbookEvaluator[] wbEvaluator[] wbEvaluator[evaluators.Length];for (int i = 0; i < wbEvals.Length; i++){wbEvals[i] = evaluators[i]._evaluator;}CollclamationatingWorkbookConfig.Setup(workbookNames, wbEval);}
public ListPhotoTagsRequest(): base("CloudPhoto", "2017-07-11", "ListPhotoTags", "cloudphoto", "openAPI"){Protocol = ProtocolType.HTTPS;}
public RandomSamplingFacetsCollector(int sampleSize, long seed): base(false){this. sampleSize = sampleSize;this.random = new XORShift64Random(seed);this.sampledDocs = null;}
public virtual AllocateStaticIpResponse AllocateStaticIp(AllocateStaticIpRequest request){var options = new InvokeOptions();options.RequestMarshaller = AllocateStaticIpRequestMarshaller.Instance;options.ResponseUnmarshaller = AllocateStaticIpResponseUnmarshaller.Instance;return Invoke<AllocateStaticIpResponse>(request, options);}
public FeatRecord(RecordInputStream in1){futureHeader = new FtrHeader(in1);isf_sharedFeatureType = in1.ReadShort();reserved1 = (byte)in1.ReadByte();reserved2 = in1.ReadInt();int craf = in1.ReadUShort();cbFeatData = in1.ReadInt();reserved3 = in1.ReadShort();reserved3 = in1.ReadShort();reserved3 = in1.ReadShort();cellRefs = new CellRangeAddress[cref];for (int i = 0; i < cellRefs.Length; i++){cellRefs[i] = new CellRangeAddress(in1);}}
public virtual RevCommit TryFastForward(RevCommit newCommit){Ref head = this.Head;ObjectId headId = head.GetObjectId();if (headId == null){throw new RefNotFoundException(MessageFormat.Format(JGitText.Get().refNotResolved, Constants.HEAD));}RevCommit headCommit = walk.LookupCommit(headId);if (walk.IsMergedInto(newCommit, headCommit)){return newCommit;}string headName = GetHeadName(head);return TryFastForward(headName, headCommit, newCommit);}
public virtual CreateSnapshotScheduleResponse CreateSnapshotSchedule(CreateSnapshotScheduleRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateSnapshotScheduleRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSnapshotScheduleResponseUnmarshaller.Instance;return Invoke<CreateSnapshotScheduleResponse>(request, options);}
public Record GetNext(){if (!HasNext()){throw new Exception("Attempt to read past end of record stream");}_countRead++;return _list[_nextIndex++];}
public override string ToString(){return RawParseUtils.Decode(m_buf.ToByteArray());}
public ListTablesRequest(string exclusiveStartTableName){_exclusiveStartTableName = exclusiveStartTableName;}
public virtual EnableAlarmActionsResponse EnableAlarmActions(EnableAlarmActionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = EnableAlarmActionsRequestMarshaller.Instance;options.ResponseUnmarshaller = EnableAlarmActionsResponseUnmarshaller.Instance;return Invoke<EnableAlarmActionsResponse>(request, options);}
public Builder(){InitializeInstanceFields();}
public override bool Equals(object obj){State other = (State)obj;return is_last == other.Is_final && Arrays.Equals(this.labels, other.Labels) && referenceEquals(this.states, other.states);}
public override TokenStream Create(TokenStream input){return new EnglishPossessiveFilter(input);}
public void ClearFormatting(){_string = CloneStringIfRequired();_string.ClearFormatting();AddToSSTIfRequired();}
public virtual int Get(int index, long[] arr, int off, int len){Debug.Assert(len > 0, "len must be > 0 (got " + len + ")");Debug.Assert(index >= 0 && index < valueCount);len = Math.Min(len, valueCount - index);Arrays.Fill(arr, off, off + len, 0);return len;}
public virtual DeleteRouteResponseResponse DeleteRouteResponse(DeleteRouteResponseRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteRouteResponseRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteRouteResponseResponseUnmarshaller.Instance;return Invoke<DeleteRouteResponseResponse>(request, options);}
public override string ToPrivateString(){return Format(true, false);}
public virtual CreatePresignedDomainUrlResponse CreatePresignedDomainUrl(CreatePresignedDomainUrlRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreatePresignedDomainUrlRequestMarshaller.Instance;options.ResponseUnmarshaller = CreatePresignedDomainUrlResponseUnmarshaller.Instance;return Invoke<CreatePresignedDomainUrlResponse>(request, options);}
public override void write(int oneChar){doWrite(new char[] { (char)oneChar }, 0, 1);}
public SSTRecord GetSSTRecord(){return sstRecord;}
public override string ToString(){return Slice.ToString() + ":" + DocIDUpto;}
public virtual bool IsSaturation(FuzzySet bloomFilter, FieldInfo fieldInfo){return bloomFilter.Saturation > 0.9f;}
public Builder(bool ignoreCase){this.ignoreCase = ignoreCase;}
public override string ToString(){return this.GetType().Name + "(maxBasicQueries: " + m_maxBasicQueries + ", queriesMade: " + m_queryMade + ")";}
public virtual DeleteDataSourceResponse DeleteDataSource(DeleteDataSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDataSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDataSourceResponseUnmarshaller.Instance;return Invoke<DeleteDataSourceResponse>(request, options);}
public virtual RebootNodeResponse RebootNode(RebootNodeRequest request){var options = new InvokeOptions();options.RequestMarshaller = RebootNodeRequestMarshaller.Instance;options.ResponseUnmarshaller = RebootNodeResponseUnmarshaller.Instance;return Invoke<RebootNodeResponse>(request, options);}
public void ProcessChildRecords(){ConvertRawBytesToEscherRecords();}
public virtual CreateOrUpdateTagsResponse CreateOrUpdateTags(CreateOrUpdateTagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateOrUpdateTagsRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateOrUpdateTagsResponseUnmarshaller.Instance;return Invoke<CreateOrUpdateTagsResponse>(request, options);}
public virtual FileSnapshot GetSnapShot(){return snapshotShot;}
public override InputStream OpenResource(string resource){IList<Stream> stream = (clazz != null) ? clazz.GetResourceAsStream(resource);if (stream == null){throw new IOException("Resource not found: " + resource);}return stream;}
public override String ToString(){StringBuilder sb = new StringBuilder(64);sb.Append(this.GetType().Name).Append(" [");sb.Append("sid=").Append(HexDump.ShortToHex(_sid));sb.Append(" size=").Append(_data.Length);sb.Append(" : ").Append(HexDump.ToHex(_data));sb.Append("]\n");return sb.ToString();}
public virtual int nextIndex(){return index;}
public override string ToQueryString(IEscapeQuerySyntax escaper){if (IsDefaultField(this.m_field)){return "\"" + GetTermEscapeQuoted(escaper) + "\"";}else{return this.m_field + ":" + "\"" + GetTermEscapeQuoted(escaper) + "\"";}}
public override Object Clone(){CalcModeRecord rec = new CalcModeRecord();rec.field_1_iterations = field_1_iterations;return rec;}
public virtual bool IsOutput(){return output;}
public virtual CreateNetworkInterfaceResponse CreateNetworkInterface(CreateNetworkInterfaceRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateNetworkInterfaceRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateNetworkInterfaceResponseUnmarshaller.Instance;return Invoke<CreateNetworkInterfaceResponse>(request, options);}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_password);}
public virtual StopDominantLanguageDetectionJobResponse StopDominantLanguageDetectionJob(StopDominantLanguageDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopDominantLanguageDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopDominantLanguageDetectionJobResponseUnmarshaller.Instance;return Invoke<StopDominantLanguageDetectionJobResponse>(request, options);}
public virtual ECSMetadataServiceCredentialsFetcher WithConnectionTimeout(int milliseconds){connectionTimeoutInMilliseconds = milliseconds;return this;}
public virtual GetGatewayGroupResponse GetGatewayGroup(GetGatewayGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetGatewayGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = GetGatewayGroupResponseUnmarshaller.Instance;return Invoke<GetGatewayGroupResponse>(request, options);}
public override java.nio.FloatBuffer slice(){return new java.nio.ReadOnlyFloatArrayBuffer(remaining(), backingArray, offset +_position);}
public static string Join(ICollection<string> parts, string separator, string lastSeparator){StringBuilder sb = new StringBuilder();int i = 0;int lastIndex = parts.Count - 1;foreach (string part in parts){sb.Append(part);if (i == lastIndex - 1){sb.Append(lastSeparator);}else if (i != lastIndex){sb.Append(separator);}i++;}return sb.ToString();}
public override string ToString(){return "(" + a.ToString() + " OR " + b.ToString() + ")";}
public ListSubscriptionsByTopicRequest(string topicArn, string nextToken){_topicArn = topicArn;_nextToken = nextToken;}
public override byte ReadByte(){return bytes[pos--];}
public virtual TerminateClientVpnConnectionsResponse TerminateClientVpnConnections(TerminateClientVpnConnectionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = TerminateClientVpnConnectionsRequestMarshaller.Instance;options.ResponseUnmarshaller = TerminateClientVpnConnectionsResponseUnmarshaller.Instance;return Invoke<TerminateClientVpnConnectionsResponse>(request, options);}
public ReceiveMessageRequest(string queueUrl){_queueUrl = queueUrl;}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_barSpace);out1.WriteShort(field_2_categorySpace);out1.WriteShort(field_3_formatFlags);}
public override object Common(object output1, object output2){return outputs.Common((T)output1, (T)output2);}
public virtual CreateVariableResponse CreateVariable(CreateVariableRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVariableRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVariableResponseUnmarshaller.Instance;return Invoke<CreateVariableResponse>(request, options);}
public static int Match(byte[] b, int ptr, byte[] src){if (ptr + src.Length > b.Length){return -1;}for (int i = 0; i < src.Length; i++, ptr++, ptr++, ptr++){if (b[ptr] != src[i]){return -1;}}return ptr;}
public override int FillFields(byte[] data, int offset, IEscherRecordFactory recordFactory){int bytesRemaining = ReadHeader(data, offset);int pos = offset + 8;int size = 0;field_1_rectX1 = LittleEndian.GetInt(data, pos + size); size += 4;field_2_rectY1 = LittleEndian.GetInt(data, pos + size); size += 4;field_3_rectX2 = LittleEndian.GetInt(data, pos + size); size += 4;field_4_rectY2 = LittleEndian.GetInt(data, pos + size); size += 4;bytesRemaining -= size;if (bytesRemaining != 0)throw new RecordFormatException("Expected no remaining bytes but got " + bytesRemaining);return 8 + size + bytesRemaining;}
public virtual CreateCloudFrontOriginAccessIdentityResponse CreateCloudFrontOriginAccessIdentity(CreateCloudFrontOriginAccessIdentityRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateCloudFrontOriginAccessIdentityRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateCloudFrontOriginAccessIdentityResponseUnmarshaller.Instance;return Invoke<CreateCloudFrontOriginAccessIdentityResponse>(request, options);}
public virtual bool isNamespaceAware(){return GetFeature(org.xmlpull.v1.XmlPullParserClass.FEATURE_PROCESS_NAMESPACES);}
public virtual void SetOverridable(bool on){overridable = on;}
public virtual string GetClassName(){return className;}
public virtual DirectoryReader GetIndexReader(){lock (this){if (indexReader != null){indexReader.IncRef();}return indexReader;}}
public virtual int indexOfKey(int key){return binarySearch(mKeys, 0, mSize, key);}
public BlankRecord(RecordInputStream in1){field_1_row = in1.ReadShort();field_2_col = in1.ReadUShort();field_3_xf = in1.ReadShort();}
public override long Length(){return length;}
public PasswordRecord(RecordInputStream in1){field_1_password = in1.ReadShort();}
public HashMap(int capacity, float loadFactor): this(capacity){if (loadFactor <= 0 || float.IsNaN(loadFactor)){throw new System.ArgumentException("Load factor: " + loadFactor);}}
public override void Run(){long lastReopenStartNS = J2N.Time.NanoTime();while (!finish){Debug.Assert(unopenConnect.ToString());try{bool hasWaiting = WaitWeek;long nextReopenStartNS = lastReopenStartNS + (hasWaiting ? targetMinStalens : targetMaxStaleNames){long stepns = nextReopenStartNS - System.Math.NanoTime();if (sleepns > 0){reopenCond.Out();}else{break;}}catch (ThreadInterruptedException ie){throw new RuntimeException(io.Message, io.FromMilliseconds(timeout));}}
public DeleteLoginProfileRequest(string userName){_userName = userName;}
public virtual E pollFirst(){return (_size == 0) ? default(E) : removeFirstImpl();}
public CreatePhotoRequest(): base("CloudPhoto", "2017-07-11", "CreatePhoto", "cloudphoto", "openAPI"){Protocol = ProtocolType.HTTPS;}
public override string GetName(){return "resolve";}
public virtual int FindEndOffset(StringBuilder buffer, int start){if (start > buffer.Length || start < 0) return start;int offset, count = m_maxScan;for (offset = start; offset < buffer.Length && count > 0; count--){if (m_boundaryChars.Contains(buffer[offset])) return offset;offset++;}return start;}
public virtual void SetObjectChecker(ObjectChecker oc){objCheck = oc;}
public BaseRef(AreaEval ae){_refEval = null;_areaEval = ae;_firstRowIndex = ae.FirstRow;_firstColumnIndex = ae.FirstColumn;_height = ae.FirstRow - ae.FirstRow + 1;_width = ae.LastColumn - ae.FirstColumn + 1;}
public virtual CreateVpcEndpointResponse CreateVpcEndpoint(CreateVpcEndpointRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVpcEndpointRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVpcEndpointResponseUnmarshaller.Instance;return Invoke<CreateVpcEndpointResponse>(request, options);}
public virtual DeregisterWorkspaceDirectoryResponse DeregisterWorkspaceDirectory(DeregisterWorkspaceDirectoryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeregisterWorkspaceDirectoryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeregisterWorkspaceDirectoryResponseUnmarshaller.Instance;return Invoke<DeregisterWorkspaceDirectoryResponse>(request, options);}
public ChartFRTInfoRecord(RecordInputStream in1){rt = in1.ReadShort();grbitFrt = in1.ReadShort();verOriginator = (byte)in1.ReadByte();int cCFRTID = in1.ReadShort();rgCFRTID = new CFRTID[cCFRTID];for (int i = 0; i < cFRTIDs; i++){rgCFRTID[i] = new CFRTID(in1);}}
public override Merger NewMerger(Repository db){return new StrategyOneSided.OneSide(db, treeIndex);}
public virtual CreateDataSourceFromRedshiftResponse CreateDataSourceFromRedshift(CreateDataSourceFromRedshiftRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDataSourceFromRedshiftRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDataSourceFromRedshiftResponseUnmarshaller.Instance;return Invoke<CreateDataSourceFromRedshiftResponse>(request, options);}
public void ClearDFA(){for (int d = 0; d < decisionToDFA.Length; d++){decisionToDFA[d] = new DFA(atn.decisionState(d), d);}}
public void RemoveName(string name){int index = GetNameIndex(name);RemoveName(index);}
public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[RightMargin]\n");buffer.Append("    .margin               = ").Append(" (").Append(Margin).Append(" )\n");buffer.Append("[/RightMargin]\n");return buffer.ToString();}
public override Object Clone(){PurchaseAllRecord rec = new DisableAllRecord();rec.field_1_print_headers = field_1_print_headers;return rec;}
public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig): base(queryConfig){Add(new WildcardQueryNodeProcessor());Add(new MultiFieldQueryNodeProcessor());Add(new FuzzyQueryNodeProcessor));Add(new RegexpQueryNodeProcessor());Add(new MatchAllDocsQueryNodeProcessor());Add(new Message(QueryNodeProcessor));Add(new Message(QueryNodeProcessor));Add(new Int64QueryNodeProcessor());Add(new TermRangeQueryNodeProcessor());Add(new ModLeadingWildcardProcessor());Add(new AnalyzerQueryNodeProcessor());Add(new PhraseSlopQueryNodeProcessor));Add(new MessageProcessor());}
public String FormatAsString(String sheetName, bool useAbsoluteAddress){StringBuilder sb = new StringBuilder();if (sheetName != null){sb.Append(SheetNameFormatter.Format(sheetName));sb.Append("!");}CellReference cellRefFrom = new CellReference(FirstRow, FirstColumn, useAbsoluteAddress);CellReference cellRefTo = new CellReference(LastRow, lastColumn, useAbsoluteAddress);sb.Append(cellRefFrom.FormatAsString());if (!cellRefFrom.Equals(cellRefTo)){sb.Append(':');sb.Append(':');sb.Append(':');sb.Append(cr.FormatAsString());}return sb.ToString();}
public override java.nio.ByteBuffer put(int index, byte value){throw new java.nio.ReadOnlyBufferException();}
public virtual void mode(int m){_mode = m;}
public override java.nio.ShortBuffer slice(){return new java.nio.ReadWriteShortArrayBuffer(remaining(), backingArray, offset +_position);}
public virtual void Set(int index, long n){if (count < index){throw Sharpen.Extensions.CreateIndexOutOfRangeException(index);}else{if (count == index){Add(n);}else{entries[index] = n;}}}
public override java.nio.ByteBuffer putFloat(float value){throw new java.nio.ReadOnlyBufferException();}
public static double Max(double[] values){double max = double.NEGATIVE_INFINITY;for (int i = 0, iSize = values.Length; i < iSize; i++){max = Math.Max(max, values[i]);}return max;}
public UpdateRepoWebhookRequest(): base("cr", "2016-06-07", "UpdateRepoWebhook", "cr", "openAPI"){UriPattern = "/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]";Method = MethodType.POST;}
public DeleteAttributesRequest(string domainName, string itemName, List<Attribute> attributes, UpdateCondition expected){_domainName = domainName;_itemName = itemName;_attributes = attributes;_expected = expected;}
public override String ToString(){StringBuilder sb = new StringBuilder();sb.Append("[SXDI]\n");for (int i = 0; i < _fieldInfos.Length; i++){sb.Append("   item[").Append(i).Append("]=");_fieldInfos[i].AppendDebugInfo(sb);sb.Append('\n');sb.Append("[/SX005]\n");return sb.ToString();}
public virtual bool IsSuccesswn(){if (mgeResult != null){return MergeResult.MergeStatus.IsSuccessored;}else{if (rebaseResult != null){return rebaseResult.Status.IsSuccessored();}return true;}
public virtual void SetBytesValue(byte[] value){SetBytesValue(new BytesRef(value));}
public virtual DescribeConnectionsResponse DescribeConnections(DescribeConnectionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeConnectionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeConnectionsResponseUnmarshaller.Instance;return Invoke<DescribeConnectionsResponse>(request, options);}
public DeletePhotosRequest(): base("CloudPhoto", "2017-07-11", "DeletePhotos", "cloudphoto", "openAPI"){Protocol = ProtocolType.HTTPS;}
public void add(E @object){iterator.add(@object);subList.sizeChanged(true);end++;}
public static java.nio.ByteBuffer allocate(int capacity_1){if (capacity_1 < 0){throw new System.ArgumentException();}return new java.nio.ReadWriteHeapByteBuffer(capacity_1);}
public virtual SrndQuery GetSubQuery(int qn){return queries.ContainsKey(qn);}
public override float CurrentScore(int docId, string field, int start, int end, int numPayloadsSeen, float currentScore, float currentPayloadScore){if (numPayloadsSeen == 0){return currentPayloadScore;}else{return Math.Min(currentPayloadScore, currentScore);}}
public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[BLANK]\n");buffer.Append("    row : ").Append(HexDump.ShortToHex(Row)).Append("\n");buffer.Append("   col = ").Append(HexDump.ShortToHex(Column)).Append("\n");xf = ").Append(HexDump.ShortToHex(XFIndex)).Append("\n");buffer.Append("[/BLANK]\n");return buffer.ToString();}
public virtual DescribeLogPatternResponse DescribeLogPattern(DescribeLogPatternRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLogPatternRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLogPatternResponseUnmarshaller.Instance;return Invoke<DescribeLogPatternResponse>(request, options);}
public virtual RegisterTransitGatewayMulticastGroupMembersResponse RegisterTransitGatewayMulticastGroupMembers(RegisterTransitGatewayMulticastGroupMembersRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterTransitGatewayMulticastGroupMembersRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterTransitGatewayMulticastGroupMembersResponseUnmarshaller.Instance;return Invoke<RegisterTransitGatewayMulticastGroupMembersResponse>(request, options);}
public virtual GetPhoneNumberSettingsResponse GetPhoneNumberSettings(GetPhoneNumberSettingsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetPhoneNumberSettingsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetPhoneNumberSettingsResponseUnmarshaller.Instance;return Invoke<GetPhoneNumberSettingsResponse>(request, options);}
public virtual ObjectId GetData(){return data;}
public override bool isDirect(){return false;}
public DeleteServerCertificateRequest(string serverCertificateName){_serverCertificateName = serverCertificateName;}
public java.lang.StringBuffer append(bool b){return append(b ? "true" : "false");}
public virtual GetEvaluationResponse GetEvaluation(GetEvaluationRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetEvaluationRequestMarshaller.Instance;options.ResponseUnmarshaller = GetEvaluationResponseUnmarshaller.Instance;return Invoke<GetEvaluationResponse>(request, options);}
public BRAIRecord GetDataName(){return dataName;}
public bool find(int start){findPos = start;if (findPos < regionStart){findPos = regionStart;}else if (findPos >= regionEnd){matchFound = false;return false;}matchFound = findImpl(address, input, findPos, matchOffsets);if (matchFound){findPos = matchOffsets[1];}return matchFound;}
public virtual GetLifecyclePolicyPreviewResponse GetLifecyclePolicyPreview(GetLifecyclePolicyPreviewRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetLifecyclePolicyPreviewRequestMarshaller.Instance;options.ResponseUnmarshaller = GetLifecyclePolicyPreviewResponseUnmarshaller.Instance;return Invoke<GetLifecyclePolicyPreviewResponse>(request, options);}
public SinglePositionTokenStream(string word){termAtt = AddAttribute<ICharTermAttribute>();posIncrAtt = AddAttribute<IPositionIncrementAttribute>();this.word = word;returned = true;}
public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_print_gridlines);}
public override string ToString(){StringBuilder s = new StringBuilder();s.Append(Constants.TypeString(Type));s.Append(' ');s.Append(Name);s.Append(' ');s.Append(commitTime);s.Append(' ');AppendCoreFlags(s);return s.ToString();}
public virtual NGit.Api.LsRemoteCommand SetRemote(string remote){CheckCallable();this.remote = remote;return this;}
public void collapseRow(int rowNumber){int startRow = FindStartOfRowOutlineGroup(idRow);RowRecord rowRecord = GetRow(startRow);int nextRowIx = WriteHidden(rowRecord, startRow);RowRecord row = GetRow(nextRowIx);if (row == null){row = CreateRow(nextRowIx);InsertRow(row);}row.Colapsed = true;}
public virtual AssociateSkillGroupWithRoomResponse AssociateSkillGroupWithRoom(AssociateSkillGroupWithRoomRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateSkillGroupWithRoomRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateSkillGroupWithRoomResponseUnmarshaller.Instance;return Invoke<AssociateSkillGroupWithRoomResponse>(request, options);}
public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[SERIESLIST]\n");buffer.Append("    .seriesNumbersCount= ").Append(" (").Append(SeriesNumbers).Append(" )");buffer.Append("[/SERIESLIST]\n");return buffer.ToString();}
public virtual QueryConfigHandler GetQueryConfigHandler(){return this.queryConfig;}
public virtual string GetClassArg(){if (null != originalArgs){string className = originalArgs.Get(className);if (null != className){return className;}}return GetType().FullName;}
