['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'serial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Output', 'out', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'field', '_', '1', '_', 'v', 'center', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'add', 'All', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'Block', 'List', 'AST#type_arguments#Left', '<', 'T', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'src', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'src', '.', 'size', 'AST#field_access#Right', '==', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'src', 'Dir', 'Id', 'x', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', ';', 'AST#binary_expression#Left', 'src', 'Dir', 'Id', 'x', '<', 'AST#field_access#Left', 'src', '.', 'tail', 'Dir', 'Id', 'x', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'src', 'Dir', 'Id', 'x', '++', 'AST#update_expression#Right', ')', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'All', 'AST#argument_list#Left', '(', 'AST#array_access#Left', 'AST#field_access#Left', 'src', '.', 'directory', 'AST#field_access#Right', '[', 'src', 'Dir', 'Id', 'x', ']', 'AST#array_access#Right', ',', '0', ',', 'BL', 'OCK', '_', 'SIZE', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#for_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'src', '.', 'tail', 'Bl', 'k', 'Id', 'x', 'AST#field_access#Right', '!', '=', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'All', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'src', '.', 'tail', 'Block', 'AST#field_access#Right', ',', '0', ',', 'AST#field_access#Left', 'src', '.', 'tail', 'Bl', 'k', 'Id', 'x', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'write', 'Byte', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'byte', 'b', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'upt', 'o', '==', 'block', 'Size', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'current', 'Block', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'Block', 'AST#argument_list#Left', '(', 'current', 'Block', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'current', 'Block', '=', 'AST#array_creation_expression#Left', 'new', 'byte', 'AST#dimensions_expr#Left', '[', 'block', 'Size', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'upt', 'o', '=', '0', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'current', 'Block', '[', 'AST#update_expression#Left', 'upt', 'o', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'b', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Object', 'Id', 'get', 'Object', 'Id', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'object', 'Id', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Domain', 'Entry', 'Result', 'delete', 'Domain', 'Entry', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Domain', 'Entry', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Domain', 'Entry', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'long', 'ram', 'Bytes', 'Used', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#ternary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'term', 'Off', 'sets', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '?', 'AST#method_invocation#Left', 'term', 'Off', 'sets', '.', 'ram', 'Bytes', 'Used', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ':', '0', 'AST#ternary_expression#Right', ')', 'AST#parenthesized_expression#Right', '+', 'AST#parenthesized_expression#Left', '(', 'AST#ternary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'terms', 'D', 'ict', 'Off', 'sets', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '?', 'AST#method_invocation#Left', 'terms', 'D', 'ict', 'Off', 'sets', '.', 'ram', 'Bytes', 'Used', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ':', '0', 'AST#ternary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'String', 'get', 'Full', 'Message', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'raw', '=', 'buffer', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'msg', 'B', '=', 'AST#method_invocation#Left', 'Raw', 'Par', 'se', 'Ut', 'ils', '.', 'tag', 'Message', 'AST#argument_list#Left', '(', 'raw', ',', '0', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'msg', 'B', '<', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', '""', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Raw', 'Par', 'se', 'Ut', 'ils', '.', 'dec', 'ode', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'gu', 'ess', 'Enc', 'oding', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'raw', ',', 'msg', 'B', ',', 'AST#field_access#Left', 'raw', '.', 'length', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'PO', 'IF', 'S', 'File', 'System', 'AST#ERROR#Left', '(', ')', '{', 'AST#ERROR#Right', 'this', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'true', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', '_', 'header', '.', 'set', 'BAT', 'Count', 'AST#argument_list#Left', '(', '1', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', '_', 'header', '.', 'set', 'BAT', 'Array', 'AST#argument_list#Left', '(', 'AST#array_creation_expression#Left', 'new', 'int', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_initializer#Left', '{', '1', '}', 'AST#array_initializer#Right', 'AST#array_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'BAT', 'Block', 'AST#variable_declarator#Left', 'bb', '=', 'AST#method_invocation#Left', 'BAT', 'Block', '.', 'create', 'Empty', 'BAT', 'Block', 'AST#argument_list#Left', '(', 'big', 'Block', 'Size', ',', 'false', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'bb', '.', 'set', 'Our', 'Block', 'Index', 'AST#argument_list#Left', '(', '1', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', '_', 'bat', '_', 'blocks', '.', 'add', 'AST#argument_list#Left', '(', 'bb', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Next', 'Block', 'AST#argument_list#Left', '(', '0', ',', 'AST#field_access#Left', 'PO', 'IF', 'S', 'Const', 'ants', '.', 'END', '_', 'OF', '_', 'CH', 'AIN', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Next', 'Block', 'AST#argument_list#Left', '(', '1', ',', 'AST#field_access#Left', 'PO', 'IF', 'S', 'Const', 'ants', '.', 'F', 'AT', '_', 'S', 'ECT', 'OR', '_', 'BL', 'OCK', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', '_', 'property', '_', 'table', '.', 'set', 'Start', 'Block', 'AST#argument_list#Left', '(', '0', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'init', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'address', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'slice', '=', 'AST#array_access#Left', 'AST#field_access#Left', 'pool', '.', 'buff', 'ers', 'AST#field_access#Right', '[', 'AST#binary_expression#Left', 'address', '>>', 'AST#field_access#Left', 'Byte', 'Block', 'Pool', '.', 'BY', 'TE', '_', 'BL', 'OCK', '_', 'SH', 'IFT', 'AST#field_access#Right', 'AST#binary_expression#Right', ']', 'AST#array_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#assert_statement#Left', 'assert', 'AST#binary_expression#Left', 'slice', '!', '=', 'null', 'AST#binary_expression#Right', ';', 'AST#assert_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'upt', 'o', '=', 'AST#binary_expression#Left', 'address', '&', 'AST#field_access#Left', 'Byte', 'Block', 'Pool', '.', 'BY', 'TE', '_', 'BL', 'OCK', '_', 'MAS', 'K', 'AST#field_access#Right', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'offset', '0', '=', 'address', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#assert_statement#Left', 'assert', 'AST#binary_expression#Left', 'upt', 'o', '<', 'AST#field_access#Left', 'slice', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#assert_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Sub', 'module', 'Add', 'Command', 'set', 'Path', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'path', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'path', 'AST#field_access#Right', '=', 'path', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Ing', 'est', 'ions', 'Result', 'list', 'Ing', 'est', 'ions', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Ing', 'est', 'ions', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Ing', 'est', 'ions', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Query', 'Parser', 'Token', 'Manager', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Char', 'Stream', 'stream', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'lex', 'State', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'this', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'stream', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Switch', 'To', 'AST#argument_list#Left', '(', 'lex', 'State', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Sh', 'ard', 'Iterator', 'Result', 'get', 'Sh', 'ard', 'Iterator', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Sh', 'ard', 'Iterator', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Sh', 'ard', 'Iterator', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Mod', 'ify', 'Str', 'ategy', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'a', 'eg', 'is', '"', ',', '"', '2016', '-', '11', '-', '11', '"', ',', '"', 'Mod', 'ify', 'Str', 'ategy', '"', ',', '"', 'v', 'ip', 'a', 'eg', 'is', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Method', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Method', 'Type', '.', 'POST', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'ready', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', '{', 'AST#ERROR#Right', 'AST#synchronized_statement#Left', 'syn', 'chron', 'ized', 'AST#parenthesized_expression#Left', '(', 'lock', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'in', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'IO', 'Exception', 'AST#argument_list#Left', '(', '"', 'Input', 'Stream', 'Reader', 'Ġis', 'Ġclosed', '"', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'bytes', '.', 'has', 'Rem', 'aining', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '||', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'in', '.', 'available', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '>', '0', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'IO', 'Exception', 'e', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', '}', 'AST#block#Right', 'AST#synchronized_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Esc', 'her', 'Opt', 'Record', 'get', 'Opt', 'Record', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', '_', 'opt', 'Record', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'syn', 'chron', 'ized', 'AST#modifiers#Right', 'int', 'read', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'buffer', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'length', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'buffer', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Null', 'Po', 'inter', 'Exception', 'AST#argument_list#Left', '(', '"', 'buffer', 'Ġ==', 'Ġnull', '"', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Ar', 'rays', '.', 'check', 'Offset', 'And', 'Count', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'buffer', '.', 'length', 'AST#field_access#Right', ',', 'offset', ',', 'length', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'length', '==', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', '0', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'cop', 'yl', 'en', '=', 'AST#ternary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'count', '-', 'pos', 'AST#binary_expression#Right', '<', 'length', 'AST#binary_expression#Right', '?', 'AST#binary_expression#Left', 'count', '-', 'pos', 'AST#binary_expression#Right', ':', 'length', 'AST#ternary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'cop', 'yl', 'en', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'buffer', '[', 'AST#binary_expression#Left', 'offset', '+', 'i', 'AST#binary_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#cast_expression#Left', '(', 'byte', ')', 'AST#method_invocation#Left', 'AST#field_access#Left', 'this', '.', 'buffer', 'AST#field_access#Right', '.', 'char', 'At', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'pos', '+', 'i', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'pos', '+=', 'cop', 'yl', 'en', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'cop', 'yl', 'en', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Open', 'NL', 'PS', 'ent', 'ence', 'Break', 'Iterator', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'NL', 'PS', 'ent', 'ence', 'Det', 'ector', 'Op', 'sent', 'ence', 'Op', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'sent', 'ence', 'Op', 'AST#field_access#Right', '=', 'sent', 'ence', 'Op', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'print', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'str', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'write', 'AST#argument_list#Left', '(', 'AST#ternary_expression#Left', 'AST#binary_expression#Left', 'str', '!', '=', 'null', 'AST#binary_expression#Right', '?', 'str', ':', 'AST#method_invocation#Left', 'String', '.', 'value', 'Of', 'AST#argument_list#Left', '(', 'AST#cast_expression#Left', '(', 'Object', ')', 'null', 'AST#cast_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#ternary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Not', 'Im', 'ple', 'mented', 'Function', 'Exception', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'function', 'Name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Not', 'Im', 'ple', 'mented', 'Exception', 'cause', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#ERROR#Left', 'super', 'AST#inferred_parameters#Left', '(', 'function', 'Name', ',', 'cause', ')', 'AST#inferred_parameters#Right', 'AST#ERROR#Right', ';', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'function', 'Name', 'AST#field_access#Right', '=', 'function', 'Name', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'V', 'next', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'super', '.', 'next', 'Entry', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Value', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'void', 'read', 'Bytes', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'b', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'len', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'bo', 'olean', 'use', 'Buffer', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'available', '=', 'AST#binary_expression#Left', 'buffer', 'Length', '-', 'buffer', 'Position', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'len', '<', '=', 'available', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'len', '>', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'System', '.', 'array', 'copy', 'AST#argument_list#Left', '(', 'buffer', ',', 'buffer', 'Position', ',', 'b', ',', 'offset', ',', 'len', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'buffer', 'Position', '+=', 'len', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'available', '>', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'System', '.', 'array', 'copy', 'AST#argument_list#Left', '(', 'buffer', ',', 'buffer', 'Position', ',', 'b', ',', 'offset', ',', 'available', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'offset', '+=', 'available', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'len', '-', '=', 'available', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'buffer', 'Position', '+=', 'available', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'use', 'Buffer', '&&', 'AST#binary_expression#Left', 'len', '<', 'buffer', 'Size', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'ref', 'ill', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'buffer', 'Length', '<', 'len', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'System', '.', 'array', 'copy', 'AST#argument_list#Left', '(', 'buffer', ',', '0', ',', 'b', ',', 'offset', ',', 'buffer', 'Length', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'EO', 'F', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'read', 'Ġpast', 'ĠE', 'OF', ':', 'Ġ"', '+', 'this', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'System', '.', 'array', 'copy', 'AST#argument_list#Left', '(', 'buffer', ',', '0', ',', 'b', ',', 'offset', ',', 'len', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'buffer', 'Position', '=', 'len', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'long', 'AST#variable_declarator#Left', 'after', '=', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'buffer', 'Start', '+', 'buffer', 'Position', 'AST#binary_expression#Right', '+', 'len', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'after', '>', 'AST#method_invocation#Left', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'EO', 'F', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'read', 'Ġpast', 'ĠE', 'OF', ':', 'Ġ"', '+', 'this', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'read', 'Internal', 'AST#argument_list#Left', '(', 'b', ',', 'offset', ',', 'len', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'buffer', 'Start', '=', 'after', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'buffer', 'Position', '=', '0', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'buffer', 'Length', '=', '0', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Tag', 'Queue', 'Result', 'tag', 'Queue', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Tag', 'Queue', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Tag', 'Queue', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'remove', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Un', 'supported', 'Operation', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Cache', 'Sub', 'net', 'Group', 'mod', 'ify', 'Cache', 'Sub', 'net', 'Group', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Mod', 'ify', 'Cache', 'Sub', 'net', 'Group', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Mod', 'ify', 'Cache', 'Sub', 'net', 'Group', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Par', 'ams', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'params', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'super', '.', 'set', 'Par', 'ams', 'AST#argument_list#Left', '(', 'params', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'language', '=', 'AST#assignment_expression#Left', 'country', '=', 'AST#assignment_expression#Left', 'vari', 'ant', '=', '""', 'AST#assignment_expression#Right', 'AST#assignment_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'String', 'Token', 'izer', 'AST#variable_declarator#Left', 'st', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Token', 'izer', 'AST#argument_list#Left', '(', 'params', ',', '","', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'st', '.', 'has', 'More', 'Tokens', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'language', '=', 'AST#method_invocation#Left', 'st', '.', 'next', 'Token', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'st', '.', 'has', 'More', 'Tokens', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'country', '=', 'AST#method_invocation#Left', 'st', '.', 'next', 'Token', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'st', '.', 'has', 'More', 'Tokens', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'vari', 'ant', '=', 'AST#method_invocation#Left', 'st', '.', 'next', 'Token', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Document', 'ation', 'Version', 'Result', 'delete', 'Document', 'ation', 'Version', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Document', 'ation', 'Version', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Document', 'ation', 'Version', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'equ', 'als', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'obj', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'obj', 'instance', 'of', 'F', 'acet', 'Label', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'F', 'acet', 'Label', 'AST#variable_declarator#Left', 'other', '=', 'AST#cast_expression#Left', '(', 'F', 'acet', 'Label', ')', 'obj', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'length', '!', '=', 'AST#field_access#Left', 'other', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', 'AST#binary_expression#Left', 'length', '-', '1', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '>', '=', '0', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '--', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'AST#array_access#Left', 'comp', 'onents', '[', 'i', ']', 'AST#array_access#Right', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'AST#array_access#Left', 'AST#field_access#Left', 'other', '.', 'comp', 'onents', 'AST#field_access#Right', '[', 'i', ']', 'AST#array_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Instance', 'Access', 'Details', 'Result', 'get', 'Instance', 'Access', 'Details', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Instance', 'Access', 'Details', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Instance', 'Access', 'Details', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'H', 'SS', 'FP', 'oly', 'gon', 'create', 'Poly', 'gon', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'H', 'SS', 'F', 'Child', 'An', 'ch', 'or', 'anch', 'or', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'H', 'SS', 'FP', 'oly', 'gon', 'AST#variable_declarator#Left', 'shape', '=', 'AST#object_creation_expression#Left', 'new', 'H', 'SS', 'FP', 'oly', 'gon', 'AST#argument_list#Left', '(', 'this', ',', 'anch', 'or', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'shape', '.', 'set', 'Parent', 'AST#argument_list#Left', '(', 'this', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'shape', '.', 'set', 'An', 'ch', 'or', 'AST#argument_list#Left', '(', 'anch', 'or', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sh', 'apes', '.', 'add', 'AST#argument_list#Left', '(', 'shape', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'on', 'Create', 'AST#argument_list#Left', '(', 'shape', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'shape', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'get', 'She', 'et', 'Name', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'sheet', 'Index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Bound', 'She', 'et', 'Rec', 'AST#argument_list#Left', '(', 'sheet', 'Index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'She', 'et', 'name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Dash', 'board', 'Result', 'get', 'Dash', 'board', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Dash', 'board', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Dash', 'board', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Ass', 'ociate', 'Sign', 'in', 'De', 'legate', 'G', 'roups', 'With', 'Account', 'Result', 'ass', 'ociate', 'Sign', 'in', 'De', 'legate', 'G', 'roups', 'With', 'Account', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Ass', 'ociate', 'Sign', 'in', 'De', 'legate', 'G', 'roups', 'With', 'Account', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Ass', 'ociate', 'Sign', 'in', 'De', 'legate', 'G', 'roups', 'With', 'Account', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'add', 'Multiple', 'Bl', 'anks', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'M', 'ul', 'Bl', 'ank', 'Record', 'm', 'br', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'j', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'j', '<', 'AST#method_invocation#Left', 'm', 'br', '.', 'get', 'Num', 'Column', 's', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'j', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Bl', 'ank', 'Record', 'AST#variable_declarator#Left', 'br', '=', 'AST#object_creation_expression#Left', 'new', 'Bl', 'ank', 'Record', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'br', '.', 'set', 'Column', 'AST#argument_list#Left', '(', 'AST#cast_expression#Left', '(', 'short', ')', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'j', '+', 'AST#method_invocation#Left', 'm', 'br', '.', 'get', 'First', 'Column', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#cast_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'br', '.', 'set', 'Row', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'm', 'br', '.', 'get', 'Row', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'br', '.', 'set', 'X', 'F', 'Index', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'm', 'br', '.', 'get', 'X', 'F', 'At', 'AST#argument_list#Left', '(', 'j', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'insert', 'Cell', 'AST#argument_list#Left', '(', 'br', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'String', 'quote', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'string', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'sb', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\\\', 'Q', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'ap', 'os', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'k', ';', 'AST#local_variable_declaration#Right', 'AST#while_statement#Left', 'while', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#assignment_expression#Left', 'k', '=', 'AST#method_invocation#Left', 'string', '.', 'index', 'Of', 'AST#argument_list#Left', '(', '"', '\\\\', 'E', '"', ',', 'ap', 'os', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ')', 'AST#parenthesized_expression#Right', '>', '=', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'string', '.', 'sub', 'string', 'AST#argument_list#Left', '(', 'ap', 'os', ',', 'AST#binary_expression#Left', 'k', '+', '2', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\\\\\\\', 'E', '\\\\', 'Q', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ap', 'os', '=', 'AST#binary_expression#Left', 'k', '+', '2', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#while_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'string', '.', 'sub', 'string', 'AST#argument_list#Left', '(', 'ap', 'os', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\\\', 'E', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Byte', 'Buffer', 'put', 'Int', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Read', 'Only', 'Buffer', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Array', 'P', 'tg', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'Object', 'AST#dimensions#Left', '[', ']', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'values', '2', 'd', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'n', 'Column', 's', '=', 'AST#field_access#Left', 'AST#array_access#Left', 'values', '2', 'd', '[', '0', ']', 'AST#array_access#Right', '.', 'length', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'n', 'R', 'ows', '=', 'AST#field_access#Left', 'values', '2', 'd', '.', 'length', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'n', 'Column', 's', '=', 'AST#cast_expression#Left', '(', 'short', ')', 'n', 'Column', 's', 'AST#cast_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'n', 'R', 'ows', '=', 'AST#cast_expression#Left', '(', 'short', ')', 'n', 'R', 'ows', 'AST#cast_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'Object', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'vv', '=', 'AST#array_creation_expression#Left', 'new', 'Object', 'AST#dimensions_expr#Left', '[', 'AST#binary_expression#Left', '_', 'n', 'Column', 's', '*', '_', 'n', 'R', 'ows', 'AST#binary_expression#Right', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'r', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'r', '<', 'n', 'R', 'ows', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'r', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'Object', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'row', 'Data', '=', 'AST#array_access#Left', 'values', '2', 'd', '[', 'r', ']', 'AST#array_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'c', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'c', '<', 'n', 'Column', 's', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'c', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'vv', '[', 'AST#method_invocation#Left', 'get', 'Value', 'Index', 'AST#argument_list#Left', '(', 'c', ',', 'r', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ']', 'AST#array_access#Right', '=', 'AST#array_access#Left', 'row', 'Data', '[', 'c', ']', 'AST#array_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'array', 'Values', '=', 'vv', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'res', 'erved', '0', 'Int', '=', '0', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'res', 'erved', '1', 'Short', '=', '0', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'res', 'erved', '2', 'Byte', '=', '0', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Ice', 'Server', 'Config', 'Result', 'get', 'Ice', 'Server', 'Config', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Ice', 'Server', 'Config', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Ice', 'Server', 'Config', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '+', '"', 'Ġ["', 'AST#binary_expression#Right', '+', 'AST#method_invocation#Left', 'get', 'Value', 'As', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '"]', '"', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'field', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'To', 'Child', 'Block', 'Join', 'Query', 'Ġ("', '+', 'AST#method_invocation#Left', 'parent', 'Query', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '")', '"', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'void', 'inc', 'Ref', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'ref', 'Count', '.', 'incre', 'ment', 'And', 'Get', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Configuration', 'Set', 'S', 'ending', 'Enabled', 'Result', 'update', 'Configuration', 'Set', 'S', 'ending', 'Enabled', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Configuration', 'Set', 'S', 'ending', 'Enabled', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Configuration', 'Set', 'S', 'ending', 'Enabled', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'get', 'Next', 'X', 'BAT', 'Chain', 'Offset', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'get', 'X', 'B', 'ATE', 'nt', 'ries', 'Per', 'Block', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '*', 'AST#field_access#Left', 'Little', 'End', 'ian', 'Con', 'sts', '.', 'INT', '_', 'SIZE', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'mult', 'ip', 'ly', 'By', 'Power', 'Of', 'Ten', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'p', 'ow', '10', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Ten', 'Power', 'AST#variable_declarator#Left', 'tp', '=', 'AST#method_invocation#Left', 'Ten', 'Power', '.', 'get', 'Instance', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Math', '.', 'abs', 'AST#argument_list#Left', '(', 'p', 'ow', '10', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'p', 'ow', '10', '<', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'm', 'ul', 'Shift', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'tp', '.', '_', 'div', 'is', 'or', 'AST#field_access#Right', ',', 'AST#field_access#Left', 'tp', '.', '_', 'div', 'is', 'or', 'Shift', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'm', 'ul', 'Shift', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'tp', '.', '_', 'multipl', 'ic', 'and', 'AST#field_access#Right', ',', 'AST#field_access#Left', 'tp', '.', '_', 'multipl', 'ier', 'Shift', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'String', 'Builder', 'AST#variable_declarator#Left', 'b', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'l', '=', 'AST#method_invocation#Left', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'b', '.', 'append', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'File', '.', 'separ', 'ator', 'Char', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'l', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'b', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Component', 'AST#argument_list#Left', '(', 'i', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'i', '<', 'AST#binary_expression#Left', 'l', '-', '1', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'b', '.', 'append', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'File', '.', 'separ', 'ator', 'Char', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'b', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Instance', 'Profile', 'C', 'red', 'entials', 'Provider', 'with', 'F', 'et', 'cher', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'EC', 'S', 'Met', 'adata', 'Service', 'C', 'red', 'entials', 'F', 'et', 'cher', 'fet', 'cher', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'fet', 'cher', 'AST#field_access#Right', '=', 'fet', 'cher', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#field_access#Left', 'this', '.', 'fet', 'cher', 'AST#field_access#Right', '.', 'set', 'Role', 'Name', 'AST#argument_list#Left', '(', 'role', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Progress', 'Monitor', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Progress', 'Monitor', 'pm', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'progress', 'Monitor', '=', 'pm', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'reset', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'first', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ptr', '=', '0', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'e', 'of', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'parse', 'Entry', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'E', 'pre', 'vious', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'iterator', '.', 'pre', 'vious', 'Index', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '>', '=', 'start', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'iterator', '.', 'pre', 'vious', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'No', 'Such', 'Element', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'get', 'New', 'Pref', 'ix', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'this', '.', 'new', 'Pref', 'ix', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'index', 'Of', 'Value', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'm', 'Size', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#array_access#Left', 'm', 'Values', '[', 'i', ']', 'AST#array_access#Right', '==', 'value', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'i', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'Ch', 'ars', 'Ref', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'unique', 'St', 'ems', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'char', 'word', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'length', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'Ch', 'ars', 'Ref', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'stem', 's', '=', 'AST#method_invocation#Left', 'stem', 'AST#argument_list#Left', '(', 'word', ',', 'length', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'stem', 's', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '<', '2', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'stem', 's', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'Char', 'Array', 'Set', 'AST#variable_declarator#Left', 'terms', '=', 'AST#object_creation_expression#Left', 'new', 'Char', 'Array', 'Set', 'AST#argument_list#Left', '(', '8', ',', 'AST#field_access#Left', 'd', 'ictionary', '.', 'ignore', 'Case', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'Ch', 'ars', 'Ref', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'ded', 'up', 'ed', '=', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Array', 'List', 'AST#type_arguments#Left', '<', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'Ch', 'ars', 'Ref', 's', ':', 'stem', 's', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'terms', '.', 'cont', 'ains', 'AST#argument_list#Left', '(', 's', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'ded', 'up', 'ed', '.', 'add', 'AST#argument_list#Left', '(', 's', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'terms', '.', 'add', 'AST#argument_list#Left', '(', 's', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#return_statement#Left', 'return', 'ded', 'up', 'ed', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Gate', 'way', 'Resp', 'ons', 'es', 'Result', 'get', 'Gate', 'way', 'Resp', 'ons', 'es', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Gate', 'way', 'Resp', 'ons', 'es', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Gate', 'way', 'Resp', 'ons', 'es', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Position', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'long', 'pos', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'current', 'Block', 'Index', '=', 'AST#cast_expression#Left', '(', 'int', ')', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'pos', '>>', 'block', 'B', 'its', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#cast_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'current', 'Block', '=', 'AST#array_access#Left', 'blocks', '[', 'current', 'Block', 'Index', ']', 'AST#array_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'current', 'Block', 'U', 'pt', 'o', '=', 'AST#cast_expression#Left', '(', 'int', ')', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'pos', '&', 'block', 'Mask', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#cast_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'long', 'skip', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'long', 'n', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 's', '=', 'AST#cast_expression#Left', '(', 'int', ')', 'AST#method_invocation#Left', 'Math', '.', 'min', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'available', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#method_invocation#Left', 'Math', '.', 'max', 'AST#argument_list#Left', '(', '0', ',', 'n', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ptr', '+=', 's', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 's', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Boot', 'strap', 'Action', 'Det', 'ail', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Boot', 'strap', 'Action', 'Config', 'boot', 'strap', 'Action', 'Config', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Boot', 'strap', 'Action', 'Config', 'AST#argument_list#Left', '(', 'boot', 'strap', 'Action', 'Config', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'serial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Output', 'out', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'field', '_', '1', '_', 'row', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'field', '_', '2', '_', 'col', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'field', '_', '3', '_', 'flags', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'field', '_', '4', '_', 'shape', 'id', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'field', '_', '6', '_', 'author', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Byte', 'AST#argument_list#Left', '(', 'AST#ternary_expression#Left', 'field', '_', '5', '_', 'has', 'Mult', 'ib', 'y', 'te', '?', '0', 'x', '01', ':', '0', 'x', '00', 'AST#ternary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'field', '_', '5', '_', 'has', 'Mult', 'ib', 'y', 'te', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'String', 'Ut', 'il', '.', 'put', 'Un', 'ic', 'ode', 'LE', 'AST#argument_list#Left', '(', 'field', '_', '6', '_', 'author', ',', 'out', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'String', 'Ut', 'il', '.', 'put', 'Comp', 'ressed', 'Un', 'ic', 'ode', 'AST#argument_list#Left', '(', 'field', '_', '6', '_', 'author', ',', 'out', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'field', '_', '7', '_', 'padding', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Byte', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'field', '_', '7', '_', 'padding', '.', 'int', 'Value', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'last', 'Index', 'Of', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'string', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'last', 'Index', 'Of', 'AST#argument_list#Left', '(', 'string', ',', 'count', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'add', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'E', 'object', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'add', 'Last', 'Impl', 'AST#argument_list#Left', '(', 'object', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'un', 'set', 'Section', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'section', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'sub', 'section', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Config', 'Snap', 'shot', 'src', ',', 'res', ';', 'AST#local_variable_declaration#Right', 'AST#do_statement#Left', 'do', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'src', '=', 'AST#method_invocation#Left', 'state', '.', 'get', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'res', '=', 'AST#method_invocation#Left', 'un', 'set', 'Section', 'AST#argument_list#Left', '(', 'src', ',', 'section', ',', 'sub', 'section', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'while', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'state', '.', 'comp', 'are', 'And', 'Set', 'AST#argument_list#Left', '(', 'src', ',', 'res', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#do_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'String', 'get', 'Tag', 'Name', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'tag', 'Name', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'add', 'Sub', 'Record', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Sub', 'Record', 'element', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sub', 'rec', 'ords', '.', 'add', 'AST#argument_list#Left', '(', 'index', ',', 'element', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'remove', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'o', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#synchronized_statement#Left', 'syn', 'chron', 'ized', 'AST#parenthesized_expression#Left', '(', 'mut', 'ex', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'de', 'legate', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'remove', 'AST#argument_list#Left', '(', 'o', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#synchronized_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Double', 'Met', 'aph', 'one', 'Filter', 'create', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Token', 'Stream', 'input', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Double', 'Met', 'aph', 'one', 'Filter', 'AST#argument_list#Left', '(', 'input', ',', 'max', 'Code', 'Length', ',', 'in', 'ject', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'long', 'length', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'in', 'Core', 'Length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Value', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'bo', 'olean', 'new', 'Value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'value', '=', 'new', 'Value', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'P', 'air', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Content', 'Source', 'old', 'Source', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Content', 'Source', 'new', 'Source', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'old', 'Source', 'AST#field_access#Right', '=', 'old', 'Source', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'new', 'Source', 'AST#field_access#Right', '=', 'new', 'Source', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'get', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'i', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'count', '<', '=', 'i', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Array', 'Index', 'Out', 'Of', 'B', 'ounds', 'Exception', 'AST#argument_list#Left', '(', 'i', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#array_access#Left', 'ent', 'ries', '[', 'i', ']', 'AST#array_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Rep', 'o', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'cr', '"', ',', '"', '2016', '-', '06', '-', '07', '"', ',', '"', 'Create', 'Rep', 'o', '"', ',', '"', 'cr', '"', ')', ';', 'AST#ERROR#Right', 'set', 'U', 'ri', 'Pattern', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', '"', '/', 're', 'pos', '"', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Method', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Method', 'Type', '.', 'PUT', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'is', 'Delta', 'Base', 'As', 'Offset', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'd', 'elta', 'Base', 'As', 'Offset', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'remove', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'expected', 'Mod', 'Count', '==', 'AST#field_access#Left', 'list', '.', 'mod', 'Count', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'last', 'Link', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'Link', 'AST#type_arguments#Left', '<', 'ET', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'next', '=', 'AST#field_access#Left', 'last', 'Link', '.', 'next', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'Link', 'AST#type_arguments#Left', '<', 'ET', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'pre', 'vious', '=', 'AST#field_access#Left', 'last', 'Link', '.', 'pre', 'vious', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'next', '.', 'pre', 'vious', 'AST#field_access#Right', '=', 'pre', 'vious', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'pre', 'vious', '.', 'next', 'AST#field_access#Right', '=', 'next', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'last', 'Link', '==', 'link', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'pos', '--', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'link', '=', 'pre', 'vious', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'last', 'Link', '=', 'null', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'expected', 'Mod', 'Count', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'AST#field_access#Left', 'list', '.', 'size', 'AST#field_access#Right', '--', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'AST#field_access#Left', 'list', '.', 'mod', 'Count', 'AST#field_access#Right', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'State', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Con', 'current', 'Mod', 'ification', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Mer', 'ge', 'Sh', 'ards', 'Result', 'mer', 'ge', 'Sh', 'ards', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Mer', 'ge', 'Sh', 'ards', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Mer', 'ge', 'Sh', 'ards', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'All', 'ocate', 'Host', 'ed', 'Connection', 'Result', 'all', 'ocate', 'Host', 'ed', 'Connection', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'All', 'ocate', 'Host', 'ed', 'Connection', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'All', 'ocate', 'Host', 'ed', 'Connection', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'get', 'Begin', 'Index', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'start', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'final', 'AST#modifiers#Right', 'AST#array_type#Left', 'Weight', 'ed', 'Term', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'get', 'Ter', 'ms', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Query', 'query', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'get', 'Ter', 'ms', 'AST#argument_list#Left', '(', 'query', ',', 'false', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Byte', 'Buffer', 'comp', 'act', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Read', 'Only', 'Buffer', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'dec', 'ode', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'blocks', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'blocks', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'long', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'values', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'values', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'iter', 'ations', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'iter', 'ations', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', '++', 'i', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'long', 'AST#variable_declarator#Left', 'byte', '0', '=', 'AST#binary_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'AST#update_expression#Left', 'blocks', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '&', '0', 'x', 'FF', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'byte', '0', '>>>', '2', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'final', 'long', 'AST#variable_declarator#Left', 'byte', '1', '=', 'AST#binary_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'AST#update_expression#Left', 'blocks', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '&', '0', 'x', 'FF', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'byte', '0', '&', '3', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '<<', '4', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '|', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'byte', '1', '>>>', '4', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'final', 'long', 'AST#variable_declarator#Left', 'byte', '2', '=', 'AST#binary_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'AST#update_expression#Left', 'blocks', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '&', '0', 'x', 'FF', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'byte', '1', '&', '15', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '<<', '2', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '|', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'byte', '2', '>>>', '6', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'byte', '2', '&', '63', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'get', 'Human', 'ish', 'Name', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'AST#ERROR#Right', 'AST#expression_statement#Left', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#expression_statement#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 's', '=', 'AST#method_invocation#Left', 'get', 'Path', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', '"', '/"', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 's', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '||', 'AST#method_invocation#Left', '""', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 's', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 's', '=', 'AST#method_invocation#Left', 'get', 'Host', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 's', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'String', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'e', 'lements', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', '"', 'file', '"', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'sche', 'me', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '||', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'LOC', 'AL', '_', 'FILE', '.', 'mat', 'cher', 'AST#argument_list#Left', '(', 's', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'mat', 'ches', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'e', 'lements', '=', 'AST#method_invocation#Left', 's', '.', 'split', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"[', '\\\\', '"', '+', 'AST#field_access#Left', 'File', '.', 'separ', 'ator', 'Char', 'AST#field_access#Right', 'AST#binary_expression#Right', '+', '"', '/', ']"', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'el', 'see', 'lements', '=', 'AST#method_invocation#Left', 's', '.', 'split', 'AST#argument_list#Left', '(', '"', '/+', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'e', 'lements', '.', 'length', 'AST#field_access#Right', '==', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 'result', '=', 'AST#array_access#Left', 'e', 'lements', '[', 'AST#binary_expression#Left', 'AST#field_access#Left', 'e', 'lements', '.', 'length', 'AST#field_access#Right', '-', '1', 'AST#binary_expression#Right', ']', 'AST#array_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'AST#field_access#Left', 'Const', 'ants', '.', 'D', 'OT', '_', 'G', 'IT', 'AST#field_access#Right', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'result', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'result', '=', 'AST#array_access#Left', 'e', 'lements', '[', 'AST#binary_expression#Left', 'AST#field_access#Left', 'e', 'lements', '.', 'length', 'AST#field_access#Right', '-', '2', 'AST#binary_expression#Right', ']', 'AST#array_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'else', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'result', '.', 'ends', 'With', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Const', 'ants', '.', 'D', 'OT', '_', 'G', 'IT', '_', 'EXT', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'result', '=', 'AST#method_invocation#Left', 'result', '.', 'sub', 'string', 'AST#argument_list#Left', '(', '0', ',', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'result', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '-', 'AST#method_invocation#Left', 'AST#field_access#Left', 'Const', 'ants', '.', 'D', 'OT', '_', 'G', 'IT', '_', 'EXT', 'AST#field_access#Right', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'result', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Note', 'book', 'Instance', 'L', 'if', 'ecycle', 'Config', 'Result', 'desc', 'ribe', 'Note', 'book', 'Instance', 'L', 'if', 'ecycle', 'Config', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Note', 'book', 'Instance', 'L', 'if', 'ecycle', 'Config', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Note', 'book', 'Instance', 'L', 'if', 'ecycle', 'Config', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'get', 'Access', 'Key', 'Secret', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'this', '.', 'access', 'Key', 'Secret', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'V', 'pn', 'Connection', 'Result', 'create', 'V', 'pn', 'Connection', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'V', 'pn', 'Connection', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'V', 'pn', 'Connection', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Vo', 'ices', 'Result', 'desc', 'ribe', 'Vo', 'ices', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Vo', 'ices', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Vo', 'ices', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Monitor', 'ing', 'Exec', 'utions', 'Result', 'list', 'Monitor', 'ing', 'Exec', 'utions', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Monitor', 'ing', 'Exec', 'utions', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Monitor', 'ing', 'Exec', 'utions', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Desc', 'ribe', 'Job', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'v', 'ault', 'Name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'job', 'Id', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'V', 'ault', 'Name', 'AST#argument_list#Left', '(', 'v', 'ault', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Job', 'Id', 'AST#argument_list#Left', '(', 'job', 'Id', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Esc', 'her', 'Record', 'get', 'Esc', 'her', 'Record', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'es', 'cher', 'Rec', 'ords', '.', 'get', 'AST#argument_list#Left', '(', 'index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Ap', 'is', 'Result', 'get', 'Ap', 'is', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Ap', 'is', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Ap', 'is', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'S', 'ms', 'Channel', 'Result', 'delete', 'S', 'ms', 'Channel', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'S', 'ms', 'Channel', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'S', 'ms', 'Channel', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Tr', 'acking', 'Ref', 'Update', 'get', 'Tr', 'acking', 'Ref', 'Update', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'tracking', 'Ref', 'Update', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'print', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'bo', 'olean', 'b', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'print', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'String', '.', 'value', 'Of', 'AST#argument_list#Left', '(', 'b', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Query', 'Node', 'get', 'Child', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Children', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'AST#argument_list#Left', '(', '0', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Not', 'Ign', 'ored', 'Filter', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'work', 'dir', 'Tree', 'Index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'index', 'AST#field_access#Right', '=', 'work', 'dir', 'Tree', 'Index', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Area', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Input', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '1', '_', 'format', 'Flags', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Thumbnail', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'Cloud', 'Photo', '"', ',', '"', '2017', '-', '07', '-', '11', '"', ',', '"', 'Get', 'Thumbnail', '"', ',', '"', 'cloud', 'photo', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Prot', 'ocol', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Prot', 'ocol', 'Type', '.', 'HT', 'TPS', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Trans', 'it', 'Gate', 'way', 'V', 'pc', 'Attach', 'ments', 'Result', 'desc', 'ribe', 'Trans', 'it', 'Gate', 'way', 'V', 'pc', 'Attach', 'ments', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Trans', 'it', 'Gate', 'way', 'V', 'pc', 'Attach', 'ments', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Trans', 'it', 'Gate', 'way', 'V', 'pc', 'Attach', 'ments', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Put', 'Voice', 'Connector', 'Stream', 'ing', 'Configuration', 'Result', 'put', 'Voice', 'Connector', 'Stream', 'ing', 'Configuration', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Put', 'Voice', 'Connector', 'Stream', 'ing', 'Configuration', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Put', 'Voice', 'Connector', 'Stream', 'ing', 'Configuration', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Ord', 'Range', 'get', 'Ord', 'Range', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'dim', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'prefix', 'To', 'Ord', 'Range', '.', 'get', 'AST#argument_list#Left', '(', 'dim', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 'sy', 'mbol', '=', '""', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'start', 'Index', '>', '=', '0', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'start', 'Index', '<', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Input', 'Stream', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'sy', 'mbol', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Input', 'Stream', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Text', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Inter', 'val', '.', 'of', 'AST#argument_list#Left', '(', 'start', 'Index', ',', 'start', 'Index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'sy', 'mbol', '=', 'AST#method_invocation#Left', 'Ut', 'ils', '.', 'escape', 'Wh', 'ites', 'pace', 'AST#argument_list#Left', '(', 'sy', 'mbol', ',', 'false', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'String', '.', 'format', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Loc', 'ale', '.', 'get', 'Default', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', '"', '%', 's', "('", '%', 's', "')", '"', ',', 'AST#method_invocation#Left', 'AST#class_literal#Left', 'Lex', 'er', 'No', 'V', 'iable', 'Alt', 'Exception', '.', 'class', 'AST#class_literal#Right', '.', 'get', 'Simple', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'sy', 'mbol', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'E', 'pe', 'ek', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'pe', 'ek', 'First', 'Impl', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Works', 'paces', 'Result', 'create', 'Works', 'paces', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Works', 'paces', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Works', 'paces', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Number', 'Format', 'Index', 'Record', 'clone', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'copy', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Rep', 'ositories', 'Result', 'desc', 'ribe', 'Rep', 'ositories', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Rep', 'ositories', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Rep', 'ositories', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'S', 'parse', 'Int', 'Array', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'initial', 'Cap', 'acity', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'initial', 'Cap', 'acity', '=', 'AST#method_invocation#Left', 'Array', 'Ut', 'ils', '.', 'ide', 'al', 'Int', 'Array', 'Size', 'AST#argument_list#Left', '(', 'initial', 'Cap', 'acity', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'm', 'Keys', '=', 'AST#array_creation_expression#Left', 'new', 'int', 'AST#dimensions_expr#Left', '[', 'initial', 'Cap', 'acity', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'm', 'Values', '=', 'AST#array_creation_expression#Left', 'new', 'int', 'AST#dimensions_expr#Left', '[', 'initial', 'Cap', 'acity', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'm', 'Size', '=', '0', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Hyp', 'hen', 'ated', 'Words', 'Filter', 'create', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Token', 'Stream', 'input', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Hyp', 'hen', 'ated', 'Words', 'Filter', 'AST#argument_list#Left', '(', 'input', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Dist', 'ribution', 'With', 'Tags', 'Result', 'create', 'Dist', 'ribution', 'With', 'Tags', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Dist', 'ribution', 'With', 'Tags', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Dist', 'ribution', 'With', 'Tags', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Random', 'Access', 'File', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'file', 'Name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'mode', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'File', 'Not', 'Found', 'Exception', 'AST#ERROR#Right', 'AST#block#Left', '{', 'this', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#object_creation_expression#Left', 'new', 'File', 'AST#argument_list#Left', '(', 'file', 'Name', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#ERROR#Left', ',', 'mode', 'AST#ERROR#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Works', 'pace', 'Image', 'Result', 'delete', 'Works', 'pace', 'Image', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Works', 'pace', 'Image', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Works', 'pace', 'Image', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'String', 'to', 'H', 'ex', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'long', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'sb', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', '16', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'write', 'H', 'ex', 'AST#argument_list#Left', '(', 'sb', ',', 'value', ',', '16', ',', '""', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'sb', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Dist', 'ribution', 'Result', 'update', 'Dist', 'ribution', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Dist', 'ribution', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Dist', 'ribution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'H', 'SS', 'FC', 'olor', 'get', 'Color', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'short', 'index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'index', '==', 'AST#method_invocation#Left', 'AST#field_access#Left', 'H', 'SS', 'FC', 'olor', 'Pred', 'efined', '.', 'AUT', 'OM', 'AT', 'IC', 'AST#field_access#Right', '.', 'get', 'Index', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#field_access#Left', 'H', 'SS', 'FC', 'olor', 'Pred', 'efined', '.', 'AUT', 'OM', 'AT', 'IC', 'AST#field_access#Right', '.', 'get', 'Color', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'b', '=', 'AST#method_invocation#Left', '_', 'pal', 'ette', '.', 'get', 'Color', 'AST#argument_list#Left', '(', 'index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#ternary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'b', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '?', 'null', ':', 'AST#object_creation_expression#Left', 'new', 'Custom', 'Color', 'AST#argument_list#Left', '(', 'index', ',', 'b', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#ternary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Value', 'E', 'val', 'evaluate', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'Value', 'E', 'val', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'oper', 'ands', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'src', 'Row', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'src', 'Col', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Not', 'Im', 'ple', 'mented', 'Function', 'Exception', 'AST#argument_list#Left', '(', '_', 'function', 'Name', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'serial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Output', 'out', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'AST#cast_expression#Left', '(', 'short', ')', 'field', '_', '1', '_', 'number', '_', 'cr', 'n', '_', 'rec', 'ords', 'AST#cast_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'AST#cast_expression#Left', '(', 'short', ')', 'field', '_', '2', '_', 'sheet', '_', 'table', '_', 'index', 'AST#cast_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'DB', 'Engine', 'Versions', 'Result', 'desc', 'ribe', 'DB', 'Engine', 'Versions', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'desc', 'ribe', 'DB', 'Engine', 'Versions', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Desc', 'ribe', 'DB', 'Engine', 'Versions', 'Request', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Format', 'Run', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'short', 'character', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'short', 'font', 'Index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', '_', 'character', 'AST#field_access#Right', '=', 'character', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', '_', 'font', 'Index', 'AST#field_access#Right', '=', 'font', 'Index', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'to', 'Big', 'End', 'ian', 'Ut', 'f', '16', 'Bytes', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'ch', 'ars', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'length', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'result', '=', 'AST#array_creation_expression#Left', 'new', 'byte', 'AST#dimensions_expr#Left', '[', 'AST#binary_expression#Left', 'length', '*', '2', 'AST#binary_expression#Right', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'end', '=', 'AST#binary_expression#Left', 'offset', '+', 'length', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'result', 'Index', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', 'offset', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'end', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', '++', 'i', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'char', 'AST#variable_declarator#Left', 'ch', '=', 'AST#array_access#Left', 'ch', 'ars', '[', 'i', ']', 'AST#array_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'result', '[', 'AST#update_expression#Left', 'result', 'Index', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#cast_expression#Left', '(', 'byte', ')', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'ch', '>>', '8', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#cast_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'result', '[', 'AST#update_expression#Left', 'result', 'Index', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#cast_expression#Left', '(', 'byte', ')', 'ch', 'AST#cast_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 'result', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Upload', 'Arch', 'ive', 'Result', 'upload', 'Arch', 'ive', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Upload', 'Arch', 'ive', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Upload', 'Arch', 'ive', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'Token', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'get', 'Hidden', 'Tokens', 'To', 'Left', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'token', 'Index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'get', 'Hidden', 'Tokens', 'To', 'Left', 'AST#argument_list#Left', '(', 'token', 'Index', ',', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'equ', 'als', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'obj', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'this', '==', 'obj', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'super', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'obj', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', 'AST#method_invocation#Left', 'obj', '.', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'Autom', 'aton', 'Query', 'AST#variable_declarator#Left', 'other', '=', 'AST#cast_expression#Left', '(', 'Autom', 'aton', 'Query', ')', 'obj', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'comp', 'iled', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'other', '.', 'comp', 'iled', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'term', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'other', '.', 'term', 'AST#field_access#Right', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'else', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'term', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'other', '.', 'term', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Sp', 'an', 'Query', 'make', 'Sp', 'an', 'Cl', 'ause', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'Sp', 'an', 'Query', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'span', 'Qu', 'eries', '=', 'AST#array_creation_expression#Left', 'new', 'Sp', 'an', 'Query', 'AST#dimensions_expr#Left', '[', 'AST#method_invocation#Left', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'Iterator', 'AST#type_arguments#Left', '<', 'Sp', 'an', 'Query', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'sq', 'i', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'weight', 'By', 'Sp', 'an', 'Query', '.', 'key', 'Set', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'iterator', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#while_statement#Left', 'while', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'sq', 'i', '.', 'has', 'Next', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Sp', 'an', 'Query', 'AST#variable_declarator#Left', 'sq', '=', 'AST#method_invocation#Left', 'sq', 'i', '.', 'next', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'float', 'AST#variable_declarator#Left', 'boost', '=', 'AST#method_invocation#Left', 'weight', 'By', 'Sp', 'an', 'Query', '.', 'get', 'AST#argument_list#Left', '(', 'sq', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'boost', '!', '=', '1', 'f', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'sq', '=', 'AST#object_creation_expression#Left', 'new', 'Sp', 'an', 'Boost', 'Query', 'AST#argument_list#Left', '(', 'sq', ',', 'boost', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'span', 'Qu', 'eries', '[', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'sq', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#while_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'span', 'Qu', 'eries', '.', 'length', 'AST#field_access#Right', '==', '1', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'AST#array_access#Left', 'span', 'Qu', 'eries', '[', '0', ']', 'AST#array_access#Right', ';', 'AST#return_statement#Right', 'else', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Sp', 'an', 'Or', 'Query', 'AST#argument_list#Left', '(', 'span', 'Qu', 'eries', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'St', 'ash', 'Create', 'Command', 'st', 'ash', 'Create', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'St', 'ash', 'Create', 'Command', 'AST#argument_list#Left', '(', 're', 'po', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Field', 'Info', 'field', 'Info', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'field', 'Name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'by', 'Name', '.', 'get', 'AST#argument_list#Left', '(', 'field', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Event', 'Source', 'Result', 'desc', 'ribe', 'Event', 'Source', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Event', 'Source', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Event', 'Source', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Document', 'Analysis', 'Result', 'get', 'Document', 'Analysis', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Document', 'Analysis', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Document', 'Analysis', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'C', 'ancel', 'Update', 'Stack', 'Result', 'c', 'ancel', 'Update', 'Stack', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'C', 'ancel', 'Update', 'Stack', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'C', 'ancel', 'Update', 'Stack', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Mod', 'ify', 'Load', 'Bal', 'ancer', 'Attributes', 'Result', 'mod', 'ify', 'Load', 'Bal', 'ancer', 'Attributes', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Mod', 'ify', 'Load', 'Bal', 'ancer', 'Attributes', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Mod', 'ify', 'Load', 'Bal', 'ancer', 'Attributes', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Set', 'Instance', 'Prot', 'ection', 'Result', 'set', 'Instance', 'Prot', 'ection', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Set', 'Instance', 'Prot', 'ection', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Set', 'Instance', 'Prot', 'ection', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Mod', 'ify', 'DB', 'Proxy', 'Result', 'mod', 'ify', 'DB', 'Proxy', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Mod', 'ify', 'DB', 'Proxy', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Mod', 'ify', 'DB', 'Proxy', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'add', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'output', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'len', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'end', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'pos', 'Length', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'count', '==', 'AST#field_access#Left', 'output', 's', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'output', 's', '=', 'AST#method_invocation#Left', 'Array', 'Ut', 'il', '.', 'grow', 'AST#argument_list#Left', '(', 'output', 's', ',', 'AST#binary_expression#Left', 'count', '+', '1', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'count', '==', 'AST#field_access#Left', 'end', 'Off', 'sets', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'AST#array_type#Left', 'int', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'next', '=', 'AST#array_creation_expression#Left', 'new', 'int', 'AST#dimensions_expr#Left', '[', 'AST#method_invocation#Left', 'Array', 'Ut', 'il', '.', 'overs', 'ize', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '1', '+', 'count', 'AST#binary_expression#Right', ',', 'AST#field_access#Left', 'Integer', '.', 'BY', 'T', 'ES', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'System', '.', 'array', 'copy', 'AST#argument_list#Left', '(', 'end', 'Off', 'sets', ',', '0', ',', 'next', ',', '0', ',', 'count', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'end', 'Off', 'sets', '=', 'next', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'count', '==', 'AST#field_access#Left', 'pos', 'Length', 's', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'AST#array_type#Left', 'int', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'next', '=', 'AST#array_creation_expression#Left', 'new', 'int', 'AST#dimensions_expr#Left', '[', 'AST#method_invocation#Left', 'Array', 'Ut', 'il', '.', 'overs', 'ize', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '1', '+', 'count', 'AST#binary_expression#Right', ',', 'AST#field_access#Left', 'Integer', '.', 'BY', 'T', 'ES', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'System', '.', 'array', 'copy', 'AST#argument_list#Left', '(', 'pos', 'Length', 's', ',', '0', ',', 'next', ',', '0', ',', 'count', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'pos', 'Length', 's', '=', 'next', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#array_access#Left', 'output', 's', '[', 'count', ']', 'AST#array_access#Right', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'output', 's', '[', 'count', ']', 'AST#array_access#Right', '=', 'AST#object_creation_expression#Left', 'new', 'Ch', 'ars', 'Ref', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#array_access#Left', 'output', 's', '[', 'count', ']', 'AST#array_access#Right', '.', 'copy', 'Ch', 'ars', 'AST#argument_list#Left', '(', 'output', ',', 'offset', ',', 'len', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'end', 'Off', 'sets', '[', 'count', ']', 'AST#array_access#Right', '=', 'end', 'Offset', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'pos', 'Length', 's', '[', 'count', ']', 'AST#array_access#Right', '=', 'pos', 'Length', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'count', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'F', 'etch', 'L', 'ibraries', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'Cloud', 'Photo', '"', ',', '"', '2017', '-', '07', '-', '11', '"', ',', '"', 'F', 'etch', 'L', 'ibraries', '"', ',', '"', 'cloud', 'photo', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Prot', 'ocol', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Prot', 'ocol', 'Type', '.', 'HT', 'TPS', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'ex', 'ists', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'fs', '.', 'ex', 'ists', 'AST#argument_list#Left', '(', 'objects', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Filter', 'Output', 'Stream', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Output', 'Stream', 'out', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'out', 'AST#field_access#Right', '=', 'out', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Scale', 'Cl', 'uster', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'CS', '"', ',', '"', '2015', '-', '12', '-', '15', '"', ',', '"', 'Scale', 'Cl', 'uster', '"', ',', '"', 'cs', 'k', '"', ')', ';', 'AST#ERROR#Right', 'set', 'U', 'ri', 'Pattern', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', '"', '/', 'cl', 'usters', '/', '[', 'Cl', 'uster', 'Id', ']"', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Method', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Method', 'Type', '.', 'PUT', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Data', 'Val', 'idation', 'Con', 'str', 'aint', 'create', 'Time', 'Con', 'str', 'aint', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'operator', 'Type', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'form', 'ula', '1', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'form', 'ula', '2', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'D', 'V', 'Con', 'str', 'aint', '.', 'create', 'Time', 'Con', 'str', 'aint', 'AST#argument_list#Left', '(', 'operator', 'Type', ',', 'form', 'ula', '1', ',', 'form', 'ula', '2', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Object', 'Parent', 'Path', 's', 'Result', 'list', 'Object', 'Parent', 'Path', 's', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Object', 'Parent', 'Path', 's', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Object', 'Parent', 'Path', 's', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Cache', 'Sub', 'net', 'G', 'roups', 'Result', 'desc', 'ribe', 'Cache', 'Sub', 'net', 'G', 'roups', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Cache', 'Sub', 'net', 'G', 'roups', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Cache', 'Sub', 'net', 'G', 'roups', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Sh', 'ared', 'Form', 'ula', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'bo', 'olean', 'flag', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '5', '_', 'options', '=', 'AST#method_invocation#Left', 'shared', 'Form', 'ula', '.', 'set', 'Short', 'Boo', 'lean', 'AST#argument_list#Left', '(', 'field', '_', '5', '_', 'options', ',', 'flag', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'is', 'Re', 'use', 'Object', 's', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 're', 'use', 'Object', 's', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Error', 'Node', 'add', 'Error', 'Node', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Token', 'bad', 'Token', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Error', 'Node', 'Impl', 'AST#variable_declarator#Left', 't', '=', 'AST#object_creation_expression#Left', 'new', 'Error', 'Node', 'Impl', 'AST#argument_list#Left', '(', 'bad', 'Token', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'Any', 'Child', 'AST#argument_list#Left', '(', 't', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 't', '.', 'set', 'Parent', 'AST#argument_list#Left', '(', 'this', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 't', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Lat', 'v', 'ian', 'St', 'em', 'Filter', 'Factory', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'Map', 'AST#type_arguments#Left', '<', 'String', ',', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'args', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'args', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'args', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'Unknown', 'Ġparameters', ':', 'Ġ"', '+', 'args', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Event', 'Sub', 'scription', 'remove', 'Source', 'Ident', 'ifier', 'From', 'Sub', 'scription', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Remove', 'Source', 'Ident', 'ifier', 'From', 'Sub', 'scription', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Remove', 'Source', 'Ident', 'ifier', 'From', 'Sub', 'scription', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'Token', 'Filter', 'Factory', 'for', 'Name', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'Map', 'AST#type_arguments#Left', '<', 'String', ',', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'args', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'loader', '.', 'new', 'Instance', 'AST#argument_list#Left', '(', 'name', ',', 'args', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Add', 'Al', 'bum', 'Photos', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'Cloud', 'Photo', '"', ',', '"', '2017', '-', '07', '-', '11', '"', ',', '"', 'Add', 'Al', 'bum', 'Photos', '"', ',', '"', 'cloud', 'photo', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Prot', 'ocol', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Prot', 'ocol', 'Type', '.', 'HT', 'TPS', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Th', 'reat', 'Intel', 'Set', 'Result', 'get', 'Th', 'reat', 'Intel', 'Set', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Th', 'reat', 'Intel', 'Set', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Th', 'reat', 'Intel', 'Set', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Rev', 'Filter', 'clone', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'B', 'inary', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'a', '.', 'clone', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#method_invocation#Left', 'b', '.', 'clone', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'equ', 'als', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'o', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#instanceof_expression#Left', 'o', 'instance', 'of', 'Ar', 'men', 'ian', 'St', 'em', 'mer', 'AST#instanceof_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'bo', 'olean', 'has', 'Array', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'protected', 'Has', 'Array', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Contribut', 'or', 'Ins', 'ights', 'Result', 'update', 'Contribut', 'or', 'Ins', 'ights', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Contribut', 'or', 'Ins', 'ights', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Contribut', 'or', 'Ins', 'ights', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'un', 'write', 'Protect', 'Work', 'book', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'rec', 'ords', '.', 'remove', 'AST#argument_list#Left', '(', 'file', 'Share', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'rec', 'ords', '.', 'remove', 'AST#argument_list#Left', '(', 'write', 'Protect', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'file', 'Share', '=', 'null', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'write', 'Protect', '=', 'null', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Sol', 'r', 'Syn', 'onym', 'Parser', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'bo', 'olean', 'ded', 'up', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'bo', 'olean', 'exp', 'and', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Analy', 'zer', 'analy', 'zer', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#ERROR#Left', 'super', 'AST#inferred_parameters#Left', '(', 'ded', 'up', ',', 'analy', 'zer', ')', 'AST#inferred_parameters#Right', 'AST#ERROR#Right', ';', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'exp', 'and', 'AST#field_access#Right', '=', 'exp', 'and', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Request', 'Spot', 'Inst', 'ances', 'Result', 'request', 'Spot', 'Inst', 'ances', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Request', 'Spot', 'Inst', 'ances', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Request', 'Spot', 'Inst', 'ances', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'get', 'Object', 'Data', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'find', 'Object', 'Record', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Object', 'Data', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Contact', 'Attributes', 'Result', 'get', 'Contact', 'Attributes', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Contact', 'Attributes', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Contact', 'Attributes', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'get', 'Key', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '+', '":', 'Ġ"', 'AST#binary_expression#Right', '+', 'AST#method_invocation#Left', 'get', 'Value', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Text', 'Translation', 'J', 'obs', 'Result', 'list', 'Text', 'Translation', 'J', 'obs', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Text', 'Translation', 'J', 'obs', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Text', 'Translation', 'J', 'obs', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Contact', 'Methods', 'Result', 'get', 'Contact', 'Methods', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Contact', 'Methods', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Contact', 'Methods', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'short', 'look', 'up', 'Index', 'By', 'Name', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Function', 'Met', 'adata', 'AST#variable_declarator#Left', 'fd', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Instance', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Function', 'By', 'Name', 'Internal', 'AST#argument_list#Left', '(', 'name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'fd', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'fd', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Instance', 'C', 'et', 'ab', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Function', 'By', 'Name', 'Internal', 'AST#argument_list#Left', '(', 'name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'fd', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#cast_expression#Left', '(', 'short', ')', 'AST#method_invocation#Left', 'fd', '.', 'get', 'Index', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'An', 'omaly', 'Detect', 'ors', 'Result', 'desc', 'ribe', 'An', 'omaly', 'Detect', 'ors', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'An', 'omaly', 'Detect', 'ors', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'An', 'omaly', 'Detect', 'ors', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'String', 'insert', 'Id', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'message', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Object', 'Id', 'change', 'Id', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'insert', 'Id', 'AST#argument_list#Left', '(', 'message', ',', 'change', 'Id', ',', 'false', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'long', 'get', 'Object', 'Size', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Any', 'Object', 'Id', 'object', 'Id', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'type', 'H', 'int', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'Missing', 'Object', 'Exception', ',', 'In', 'correct', 'Object', 'Type', 'Exception', ',', 'IO', 'Exception', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'long', 'AST#variable_declarator#Left', 's', 'z', '=', 'AST#method_invocation#Left', 'db', '.', 'get', 'Object', 'Size', 'AST#argument_list#Left', '(', 'this', ',', 'object', 'Id', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 's', 'z', '<', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'type', 'H', 'int', '==', 'OB', 'J', '_', 'ANY', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Missing', 'Object', 'Exception', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'object', 'Id', '.', 'copy', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#field_access#Left', 'AST#method_invocation#Left', 'J', 'G', 'it', 'Text', '.', 'get', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'unknown', 'Object', 'Type', '2', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#if_statement#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Missing', 'Object', 'Exception', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'object', 'Id', '.', 'copy', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'type', 'H', 'int', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 's', 'z', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Import', 'Installation', 'Media', 'Result', 'import', 'Installation', 'Media', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Import', 'Installation', 'Media', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Import', 'Installation', 'Media', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Put', 'L', 'if', 'ecycle', 'Event', 'H', 'ook', 'Exec', 'ution', 'Status', 'Result', 'put', 'L', 'if', 'ecycle', 'Event', 'H', 'ook', 'Exec', 'ution', 'Status', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Put', 'L', 'if', 'ecycle', 'Event', 'H', 'ook', 'Exec', 'ution', 'Status', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Put', 'L', 'if', 'ecycle', 'Event', 'H', 'ook', 'Exec', 'ution', 'Status', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Number', 'P', 'tg', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Input', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'this', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'in', '.', 'read', 'Double', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Field', 'Level', 'Enc', 'ryption', 'Config', 'Result', 'get', 'Field', 'Level', 'Enc', 'ryption', 'Config', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Field', 'Level', 'Enc', 'ryption', 'Config', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Field', 'Level', 'Enc', 'ryption', 'Config', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Det', 'ector', 'Result', 'desc', 'ribe', 'Det', 'ector', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Det', 'ector', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Det', 'ector', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Report', 'Instance', 'Status', 'Result', 'report', 'Instance', 'Status', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Report', 'Instance', 'Status', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Report', 'Instance', 'Status', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Al', 'arm', 'Result', 'delete', 'Al', 'arm', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Al', 'arm', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Al', 'arm', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Token', 'Stream', 'create', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Token', 'Stream', 'input', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Port', 'ug', 'uese', 'St', 'em', 'Filter', 'AST#argument_list#Left', '(', 'input', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'F', 't', 'C', 'bl', 's', 'Sub', 'Record', 'AST#ERROR#Left', '(', ')', '{', 'AST#ERROR#Right', 'AST#variable_declarator#Left', 'res', 'erved', '=', 'AST#array_creation_expression#Left', 'new', 'byte', 'AST#dimensions_expr#Left', '[', 'ENC', 'OD', 'ED', '_', 'SIZE', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'AST#marker_annotation#Left', '@', 'Override', 'AST#marker_annotation#Right', 'public', 'AST#modifiers#Right', 'bo', 'olean', 'remove', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'object', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#synchronized_statement#Left', 'syn', 'chron', 'ized', 'AST#parenthesized_expression#Left', '(', 'mut', 'ex', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'c', '.', 'remove', 'AST#argument_list#Left', '(', 'object', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#synchronized_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'D', 'ed', 'icated', 'I', 'p', 'Result', 'get', 'D', 'ed', 'icated', 'I', 'p', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'D', 'ed', 'icated', 'I', 'p', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'D', 'ed', 'icated', 'I', 'p', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'pre', 'ced', 'ence', '+', '"', 'Ġ>=', 'Ġ_', 'p', '"', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Stream', 'Process', 'ors', 'Result', 'list', 'Stream', 'Process', 'ors', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Stream', 'Process', 'ors', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Stream', 'Process', 'ors', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Delete', 'Load', 'Bal', 'ancer', 'Policy', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'load', 'Bal', 'ancer', 'Name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'policy', 'Name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Load', 'Bal', 'ancer', 'Name', 'AST#argument_list#Left', '(', 'load', 'Bal', 'ancer', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Policy', 'Name', 'AST#argument_list#Left', '(', 'policy', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Window', 'Protect', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'options', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'options', '=', 'options', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Un', 'buff', 'ered', 'Char', 'Stream', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'buffer', 'Size', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'n', '=', '0', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'data', '=', 'AST#array_creation_expression#Left', 'new', 'int', 'AST#dimensions_expr#Left', '[', 'buffer', 'Size', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Oper', 'ations', 'Result', 'get', 'Oper', 'ations', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Oper', 'ations', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Oper', 'ations', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'copy', 'Raw', 'To', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'b', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'o', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'NB', '.', 'en', 'code', 'Int', '32', 'AST#argument_list#Left', '(', 'b', ',', 'o', ',', 'w', '1', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'NB', '.', 'en', 'code', 'Int', '32', 'AST#argument_list#Left', '(', 'b', ',', 'AST#binary_expression#Left', 'o', '+', '4', 'AST#binary_expression#Right', ',', 'w', '2', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'NB', '.', 'en', 'code', 'Int', '32', 'AST#argument_list#Left', '(', 'b', ',', 'AST#binary_expression#Left', 'o', '+', '8', 'AST#binary_expression#Right', ',', 'w', '3', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'NB', '.', 'en', 'code', 'Int', '32', 'AST#argument_list#Left', '(', 'b', ',', 'AST#binary_expression#Left', 'o', '+', '12', 'AST#binary_expression#Right', ',', 'w', '4', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'NB', '.', 'en', 'code', 'Int', '32', 'AST#argument_list#Left', '(', 'b', ',', 'AST#binary_expression#Left', 'o', '+', '16', 'AST#binary_expression#Right', ',', 'w', '5', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Window', 'One', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Input', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '1', '_', 'h', '_', 'hold', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '2', '_', 'v', '_', 'hold', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '3', '_', 'width', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '4', '_', 'height', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '5', '_', 'options', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '6', '_', 'active', '_', 'sheet', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '7', '_', 'first', '_', 'visible', '_', 'tab', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '8', '_', 'num', '_', 'selected', '_', 'tab', 's', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '9', '_', 'tab', '_', 'width', '_', 'rat', 'io', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Stop', 'Works', 'paces', 'Result', 'stop', 'Works', 'paces', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Stop', 'Works', 'paces', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Stop', 'Works', 'paces', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'close', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', '{', 'AST#ERROR#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'is', 'Open', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'is', 'Open', '=', 'false', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'dump', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#finally_clause#Left', 'f', 'inally', 'AST#block#Left', '{', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'channel', '.', 'tr', 'unc', 'ate', 'AST#argument_list#Left', '(', 'file', 'Length', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#finally_clause#Left', 'f', 'inally', 'AST#block#Left', '{', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'channel', '.', 'close', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#finally_clause#Left', 'f', 'inally', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'f', 'os', '.', 'close', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#finally_clause#Right', 'AST#try_statement#Right', '}', 'AST#block#Right', 'AST#finally_clause#Right', 'AST#try_statement#Right', '}', 'AST#block#Right', 'AST#finally_clause#Right', 'AST#try_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Match', 'making', 'Rule', 'S', 'ets', 'Result', 'desc', 'ribe', 'Match', 'making', 'Rule', 'S', 'ets', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Match', 'making', 'Rule', 'S', 'ets', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Match', 'making', 'Rule', 'S', 'ets', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'get', 'P', 'ron', 'unciation', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'word', 'Id', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'char', 'surface', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'off', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'len', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'null', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'get', 'Path', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'path', 'Str', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'double', 'dev', 'sq', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'double', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'v', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'double', 'AST#variable_declarator#Left', 'r', '=', 'AST#field_access#Left', 'Double', '.', 'Na', 'N', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'v', '!', '=', 'null', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'AST#field_access#Left', 'v', '.', 'length', 'AST#field_access#Right', '>', '=', '1', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'double', 'AST#variable_declarator#Left', 'm', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'double', 'AST#variable_declarator#Left', 's', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'n', '=', 'AST#field_access#Left', 'v', '.', 'length', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'n', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 's', '+=', 'AST#array_access#Left', 'v', '[', 'i', ']', 'AST#array_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'm', '=', 'AST#binary_expression#Left', 's', '/', 'n', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 's', '=', '0', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'n', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 's', '+=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#array_access#Left', 'v', '[', 'i', ']', 'AST#array_access#Right', '-', 'm', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '*', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#array_access#Left', 'v', '[', 'i', ']', 'AST#array_access#Right', '-', 'm', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'r', '=', 'AST#ternary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'n', '==', '1', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '?', '0', ':', 's', 'AST#ternary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'r', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Res', 'ize', 'Result', 'desc', 'ribe', 'Res', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Res', 'ize', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Res', 'ize', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'bo', 'olean', 'has', 'Pass', 'ed', 'Through', 'Non', 'Gre', 'edy', 'Dec', 'ision', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'pass', 'ed', 'Through', 'Non', 'Gre', 'edy', 'Dec', 'ision', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'end', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'end', 'AST#argument_list#Left', '(', '0', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'tra', 'verse', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Cell', 'Handler', 'handler', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'first', 'Row', '=', 'AST#method_invocation#Left', 'range', '.', 'get', 'First', 'Row', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'last', 'Row', '=', 'AST#method_invocation#Left', 'range', '.', 'get', 'Last', 'Row', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'first', 'Column', '=', 'AST#method_invocation#Left', 'range', '.', 'get', 'First', 'Column', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'last', 'Column', '=', 'AST#method_invocation#Left', 'range', '.', 'get', 'Last', 'Column', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'width', '=', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'last', 'Column', '-', 'first', 'Column', 'AST#binary_expression#Right', '+', '1', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Simple', 'Cell', 'Walk', 'Context', 'AST#variable_declarator#Left', 'ctx', '=', 'AST#object_creation_expression#Left', 'new', 'Simple', 'Cell', 'Walk', 'Context', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Row', 'AST#variable_declarator#Left', 'current', 'Row', '=', 'null', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Cell', 'AST#variable_declarator#Left', 'current', 'Cell', '=', 'null', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'ctx', '.', 'row', 'Number', 'AST#field_access#Right', '=', 'first', 'Row', 'AST#assignment_expression#Right', ';', 'AST#binary_expression#Left', 'AST#field_access#Left', 'ctx', '.', 'row', 'Number', 'AST#field_access#Right', '<', '=', 'last', 'Row', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', '++', 'AST#field_access#Left', 'ctx', '.', 'row', 'Number', 'AST#field_access#Right', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'current', 'Row', '=', 'AST#method_invocation#Left', 'sheet', '.', 'get', 'Row', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'ctx', '.', 'row', 'Number', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'current', 'Row', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#continue_statement#Left', 'continue', ';', 'AST#continue_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'ctx', '.', 'col', 'Number', 'AST#field_access#Right', '=', 'first', 'Column', 'AST#assignment_expression#Right', ';', 'AST#binary_expression#Left', 'AST#field_access#Left', 'ctx', '.', 'col', 'Number', 'AST#field_access#Right', '<', '=', 'last', 'Column', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', '++', 'AST#field_access#Left', 'ctx', '.', 'col', 'Number', 'AST#field_access#Right', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'current', 'Cell', '=', 'AST#method_invocation#Left', 'current', 'Row', '.', 'get', 'Cell', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'ctx', '.', 'col', 'Number', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'current', 'Cell', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#continue_statement#Left', 'continue', ';', 'AST#continue_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'is', 'Empty', 'AST#argument_list#Left', '(', 'current', 'Cell', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '&&', 'AST#unary_expression#Left', '!', 'tra', 'verse', 'Empty', 'C', 'ells', 'AST#unary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#continue_statement#Left', 'continue', ';', 'AST#continue_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'long', 'AST#variable_declarator#Left', 'row', 'Size', '=', 'AST#method_invocation#Left', 'Ar', 'ithmetic', 'Ut', 'ils', '.', 'm', 'ul', 'And', 'Check', 'AST#argument_list#Left', '(', 'AST#cast_expression#Left', '(', 'long', ')', 'AST#method_invocation#Left', 'Ar', 'ithmetic', 'Ut', 'ils', '.', 'sub', 'And', 'Check', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'ctx', '.', 'row', 'Number', 'AST#field_access#Right', ',', 'first', 'Row', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', ',', 'AST#cast_expression#Left', '(', 'long', ')', 'width', 'AST#cast_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'ctx', '.', 'ord', 'inal', 'Number', 'AST#field_access#Right', '=', 'AST#method_invocation#Left', 'Ar', 'ithmetic', 'Ut', 'ils', '.', 'add', 'And', 'Check', 'AST#argument_list#Left', '(', 'row', 'Size', ',', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#field_access#Left', 'ctx', '.', 'col', 'Number', 'AST#field_access#Right', '-', 'first', 'Column', 'AST#binary_expression#Right', '+', '1', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'handler', '.', 'on', 'Cell', 'AST#argument_list#Left', '(', 'current', 'Cell', ',', 'ctx', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'get', 'Read', 'Index', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'pos', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'comp', 'are', 'To', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Score', 'Term', 'other', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'this', '.', 'boost', 'AST#field_access#Right', '==', 'AST#field_access#Left', 'other', '.', 'boost', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#field_access#Left', 'other', '.', 'bytes', 'AST#field_access#Right', '.', 'get', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'comp', 'are', 'To', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'AST#field_access#Left', 'this', '.', 'bytes', 'AST#field_access#Right', '.', 'get', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', 'else', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Float', '.', 'comp', 'are', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'this', '.', 'boost', 'AST#field_access#Right', ',', 'AST#field_access#Left', 'other', '.', 'boost', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'normal', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'char', 's', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'len', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'len', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#switch_expression#Left', 'switch', 'AST#parenthesized_expression#Left', '(', 'AST#array_access#Left', 's', '[', 'i', ']', 'AST#array_access#Right', ')', 'AST#parenthesized_expression#Right', 'AST#switch_block#Left', '{', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'F', 'AR', 'SI', '_', 'Y', 'EH', 'AST#switch_label#Right', ':', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'Y', 'EH', '_', 'B', 'AR', 'REE', 'AST#switch_label#Right', ':', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 's', '[', 'i', ']', 'AST#array_access#Right', '=', 'Y', 'EH', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'KE', 'HE', 'H', 'AST#switch_label#Right', ':', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 's', '[', 'i', ']', 'AST#array_access#Right', '=', 'K', 'AF', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'HE', 'H', '_', 'Y', 'EH', 'AST#switch_label#Right', ':', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'HE', 'H', '_', 'GO', 'AL', 'AST#switch_label#Right', ':', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 's', '[', 'i', ']', 'AST#array_access#Right', '=', 'HE', 'H', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'HAM', 'ZA', '_', 'AB', 'O', 'VE', 'AST#switch_label#Right', ':', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'len', '=', 'AST#method_invocation#Left', 'delete', 'AST#argument_list#Left', '(', 's', ',', 'i', ',', 'len', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'i', '--', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'default', ':', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', '}', 'AST#switch_block#Right', 'AST#switch_expression#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 'len', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'serial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Output', 'out', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', '_', 'options', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Di', 'agn', 'ostic', 'Error', 'Listener', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'bo', 'olean', 'ex', 'act', 'Only', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'ex', 'act', 'Only', 'AST#field_access#Right', '=', 'ex', 'act', 'Only', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Key', 'Sche', 'ma', 'Element', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'attribute', 'Name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Key', 'Type', 'key', 'Type', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Attribute', 'Name', 'AST#argument_list#Left', '(', 'attribute', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Key', 'Type', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'key', 'Type', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Ass', 'ignment', 'Result', 'get', 'Ass', 'ignment', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Ass', 'ignment', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Ass', 'ignment', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'has', 'Object', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Any', 'Object', 'Id', 'id', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'find', 'Offset', 'AST#argument_list#Left', '(', 'id', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Group', 'ing', 'Search', 'set', 'All', 'G', 'roups', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'bo', 'olean', 'all', 'G', 'roups', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'all', 'G', 'roups', 'AST#field_access#Right', '=', 'all', 'G', 'roups', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'syn', 'chron', 'ized', 'AST#modifiers#Right', 'void', 'set', 'Multi', 'Val', 'ued', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'dim', 'Name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'bo', 'olean', 'v', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Dim', 'Config', 'AST#variable_declarator#Left', 'ft', '=', 'AST#method_invocation#Left', 'field', 'Types', '.', 'get', 'AST#argument_list#Left', '(', 'dim', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'ft', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ft', '=', 'AST#object_creation_expression#Left', 'new', 'Dim', 'Config', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'field', 'Types', '.', 'put', 'AST#argument_list#Left', '(', 'dim', 'Name', ',', 'ft', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'ft', '.', 'multi', 'Val', 'ued', 'AST#field_access#Right', '=', 'v', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'get', 'C', 'ells', 'Val', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'Iterator', 'AST#type_arguments#Left', '<', 'Character', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'i', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'cells', '.', 'key', 'Set', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'iterator', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'size', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', ';', 'AST#method_invocation#Left', 'i', '.', 'has', 'Next', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Character', 'AST#variable_declarator#Left', 'c', '=', 'AST#method_invocation#Left', 'i', '.', 'next', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Cell', 'AST#variable_declarator#Left', 'e', '=', 'AST#method_invocation#Left', 'at', 'AST#argument_list#Left', '(', 'c', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'e', '.', 'cmd', 'AST#field_access#Right', '>', '=', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'size', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 'size', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Voice', 'Connector', 'Result', 'delete', 'Voice', 'Connector', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Voice', 'Connector', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Voice', 'Connector', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'L', 'if', 'ecycle', 'Policy', 'Result', 'delete', 'L', 'if', 'ecycle', 'Policy', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'L', 'if', 'ecycle', 'Policy', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'L', 'if', 'ecycle', 'Policy', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'write', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'b', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'len', '=', 'AST#field_access#Left', 'b', '.', 'length', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'check', 'Position', 'AST#argument_list#Left', '(', 'len', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'System', '.', 'array', 'copy', 'AST#argument_list#Left', '(', 'b', ',', '0', ',', '_', 'buf', ',', '_', 'write', 'Index', ',', 'len', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'write', 'Index', '+=', 'len', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Reb', 'ase', 'Result', 'get', 'Reb', 'ase', 'Result', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'this', '.', 're', 'base', 'Result', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'int', 'get', 'Ne', 'arest', 'Set', 'Size', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'max', 'Number', 'Of', 'Values', 'Ex', 'pected', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'float', 'des', 'ired', 'S', 'aturation', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#field_access#Left', 'usable', 'Bit', 'Set', 'S', 'izes', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'num', 'Set', 'B', 'its', 'At', 'Des', 'ired', 'S', 'aturation', '=', 'AST#cast_expression#Left', '(', 'int', ')', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#array_access#Left', 'usable', 'Bit', 'Set', 'S', 'izes', '[', 'i', ']', 'AST#array_access#Right', '*', 'des', 'ired', 'S', 'aturation', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'est', 'imated', 'Num', 'Unique', 'Values', '=', 'AST#method_invocation#Left', 'get', 'Est', 'imated', 'Number', 'Unique', 'Values', 'All', 'owing', 'For', 'Coll', 'isions', 'AST#argument_list#Left', '(', 'AST#array_access#Left', 'usable', 'Bit', 'Set', 'S', 'izes', '[', 'i', ']', 'AST#array_access#Right', ',', 'num', 'Set', 'B', 'its', 'At', 'Des', 'ired', 'S', 'aturation', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'est', 'imated', 'Num', 'Unique', 'Values', '>', 'max', 'Number', 'Of', 'Values', 'Ex', 'pected', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#array_access#Left', 'usable', 'Bit', 'Set', 'S', 'izes', '[', 'i', ']', 'AST#array_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Dash', 'board', 'Result', 'desc', 'ribe', 'Dash', 'board', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Dash', 'board', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Dash', 'board', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Seg', 'ment', 'Result', 'create', 'Seg', 'ment', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Seg', 'ment', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Seg', 'ment', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'buffer', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"[', 'D', 'BC', 'ELL', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'row', 'offset', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'int', 'To', 'H', 'ex', 'AST#argument_list#Left', '(', 'field', '_', '1', '_', 'row', '_', 'offset', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'k', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'k', '<', 'AST#field_access#Left', 'field', '_', '2', '_', 'cell', '_', 'offs', 'ets', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'k', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'cell', '_', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'k', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'short', 'To', 'H', 'ex', 'AST#argument_list#Left', '(', 'AST#array_access#Left', 'field', '_', '2', '_', 'cell', '_', 'offs', 'ets', '[', 'k', ']', 'AST#array_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', '[/', 'D', 'BC', 'ELL', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'buffer', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'get', 'Und', 'ele', 'ted', 'List', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'und', 'ele', 'ted', 'List', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', '"[', 'INTER', 'FACE', 'END', '/', ']', '\\', 'n', '"', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Mer', 'ge', 'S', 'ched', 'uler', 'clone', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Pl', 'ain', 'Text', 'D', 'ictionary', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Reader', 'reader', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'in', '=', 'AST#object_creation_expression#Left', 'new', 'Buff', 'ered', 'Reader', 'AST#argument_list#Left', '(', 'reader', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'Builder', 'append', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Char', 'Sequ', 'ence', 'cs', 'q', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'cs', 'q', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'append', 'Null', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'append', '0', 'AST#argument_list#Left', '(', 'cs', 'q', ',', '0', ',', 'AST#method_invocation#Left', 'cs', 'q', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Associated', 'St', 'acks', 'Result', 'list', 'Associated', 'St', 'acks', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Associated', 'St', 'acks', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Associated', 'St', 'acks', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'double', 'aved', 'ev', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'double', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'v', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'double', 'AST#variable_declarator#Left', 'r', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'double', 'AST#variable_declarator#Left', 'm', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'double', 'AST#variable_declarator#Left', 's', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ',', 'AST#variable_declarator#Left', 'i', 'Size', '=', 'AST#field_access#Left', 'v', '.', 'length', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'i', 'Size', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 's', '+=', 'AST#array_access#Left', 'v', '[', 'i', ']', 'AST#array_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'm', '=', 'AST#binary_expression#Left', 's', '/', 'AST#field_access#Left', 'v', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 's', '=', '0', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ',', 'AST#variable_declarator#Left', 'i', 'Size', '=', 'AST#field_access#Left', 'v', '.', 'length', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'i', 'Size', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 's', '+=', 'AST#method_invocation#Left', 'Math', '.', 'abs', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#array_access#Left', 'v', '[', 'i', ']', 'AST#array_access#Right', '-', 'm', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'r', '=', 'AST#binary_expression#Left', 's', '/', 'AST#field_access#Left', 'v', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'r', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'By', 'o', 'ip', 'C', 'id', 'rs', 'Result', 'desc', 'ribe', 'By', 'o', 'ip', 'C', 'id', 'rs', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'By', 'o', 'ip', 'C', 'id', 'rs', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'By', 'o', 'ip', 'C', 'id', 'rs', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Disk', 'Result', 'get', 'Disk', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Disk', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Disk', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'DB', 'Cl', 'uster', 'Parameter', 'Group', 'create', 'DB', 'Cl', 'uster', 'Parameter', 'Group', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'DB', 'Cl', 'uster', 'Parameter', 'Group', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'DB', 'Cl', 'uster', 'Parameter', 'Group', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'Char', 'Buffer', 'wrap', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'array', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'start', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'char', 'Count', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Ar', 'rays', '.', 'check', 'Offset', 'And', 'Count', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'array', '.', 'length', 'AST#field_access#Right', ',', 'start', ',', 'char', 'Count', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'Char', 'Buffer', 'AST#variable_declarator#Left', 'buf', '=', 'AST#object_creation_expression#Left', 'new', 'Read', 'Write', 'Char', 'Array', 'Buffer', 'AST#argument_list#Left', '(', 'array', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'buf', '.', 'position', 'AST#field_access#Right', '=', 'start', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'buf', '.', 'limit', 'AST#field_access#Right', '=', 'AST#binary_expression#Left', 'start', '+', 'char', 'Count', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'buf', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Sub', 'module', 'Status', 'Type', 'get', 'Type', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'type', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Game', 'Server', 'Group', 'Result', 'desc', 'ribe', 'Game', 'Server', 'Group', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Game', 'Server', 'Group', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Game', 'Server', 'Group', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Pattern', 'pattern', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'pattern', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'V', 'set', 'Value', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'V', 'object', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Un', 'supported', 'Operation', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'Builder', 'stem', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Char', 'Sequ', 'ence', 'word', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Char', 'Sequ', 'ence', 'AST#variable_declarator#Left', 'cmd', '=', 'AST#method_invocation#Left', 'stem', 'mer', '.', 'get', 'Last', 'On', 'Path', 'AST#argument_list#Left', '(', 'word', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'cmd', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'null', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'set', 'Length', 'AST#argument_list#Left', '(', '0', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', 'word', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Diff', '.', 'apply', 'AST#argument_list#Left', '(', 'buffer', ',', 'cmd', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'buffer', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '>', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'buffer', ';', 'AST#return_statement#Right', 'else', 'AST#return_statement#Left', 'return', 'null', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'R', 'ename', 'Face', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'Cloud', 'Photo', '"', ',', '"', '2017', '-', '07', '-', '11', '"', ',', '"', 'R', 'ename', 'Face', '"', ',', '"', 'cloud', 'photo', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Prot', 'ocol', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Prot', 'ocol', 'Type', '.', 'HT', 'TPS', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'char', 'require', 'Char', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'Map', 'AST#type_arguments#Left', '<', 'String', ',', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'args', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'require', 'AST#argument_list#Left', '(', 'args', ',', 'name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'char', 'At', 'AST#argument_list#Left', '(', '0', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'String', 'to', 'String', 'Tree', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Tree', 't', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'to', 'String', 'Tree', 'AST#argument_list#Left', '(', 't', ',', 'AST#cast_expression#Left', '(', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', ')', 'null', 'AST#cast_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', '"', '<', 'de', 'leted', '/>', '"', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Rep', 'o', 'Web', 'hook', 'Log', 'List', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'cr', '"', ',', '"', '2016', '-', '06', '-', '07', '"', ',', '"', 'Get', 'Rep', 'o', 'Web', 'hook', 'Log', 'List', '"', ',', '"', 'cr', '"', ')', ';', 'AST#ERROR#Right', 'set', 'U', 'ri', 'Pattern', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', '"', '/', 're', 'pos', '/', '[', 'Rep', 'o', 'Names', 'pace', ']', '/', '[', 'Rep', 'o', 'Name', ']', '/', 'web', 'hook', 's', '/', '[', 'Web', 'hook', 'Id', ']', '/', 'log', 's', '"', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Method', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Method', 'Type', '.', 'GET', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Job', 'Un', 'lock', 'Code', 'Result', 'get', 'Job', 'Un', 'lock', 'Code', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Job', 'Un', 'lock', 'Code', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Job', 'Un', 'lock', 'Code', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Remove', 'Tags', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'resource', 'Id', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Resource', 'Id', 'AST#argument_list#Left', '(', 'resource', 'Id', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'short', 'get', 'GB', '23', '12', 'Id', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'char', 'ch', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'buffer', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'Character', '.', 'to', 'String', 'AST#argument_list#Left', '(', 'ch', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Bytes', 'AST#argument_list#Left', '(', '"', 'GB', '23', '12', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'buffer', '.', 'length', 'AST#field_access#Right', '!', '=', '2', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'b', '0', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#array_access#Left', 'buffer', '[', '0', ']', 'AST#array_access#Right', '&', '0', 'x', '0', 'FF', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '-', '161', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'b', '1', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#array_access#Left', 'buffer', '[', '1', ']', 'AST#array_access#Right', '&', '0', 'x', '0', 'FF', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '-', '161', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#cast_expression#Left', '(', 'short', ')', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'b', '0', '*', '94', 'AST#binary_expression#Right', '+', 'b', '1', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#cast_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'Un', 'supported', 'Enc', 'oding', 'Exception', 'e', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Runtime', 'Exception', 'AST#argument_list#Left', '(', 'e', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'B', 'atch', 'Ref', 'Update', 'add', 'Command', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'Collection', 'AST#type_arguments#Left', '<', 'Re', 'ceive', 'Command', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'cmd', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'comm', 'ands', '.', 'add', 'All', 'AST#argument_list#Left', '(', 'cmd', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'short', 'check', 'Ex', 'tern', 'She', 'et', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'sheet', 'Number', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#cast_expression#Left', '(', 'short', ')', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Or', 'Create', 'Link', 'Table', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'check', 'Ex', 'tern', 'She', 'et', 'AST#argument_list#Left', '(', 'sheet', 'Number', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'AST#marker_annotation#Left', '@', 'Override', 'AST#marker_annotation#Right', 'public', 'AST#modifiers#Right', 'bo', 'olean', 'equ', 'als', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'object', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'c', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'object', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Boo', 'lean', 'Query', 'build', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Query', 'Node', 'query', 'Node', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'Query', 'Node', 'Exception', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Any', 'Query', 'Node', 'AST#variable_declarator#Left', 'and', 'Node', '=', 'AST#cast_expression#Left', '(', 'Any', 'Query', 'Node', ')', 'query', 'Node', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'AST#scoped_type_identifier#Left', 'Boo', 'lean', 'Query', '.', 'Builder', 'AST#scoped_type_identifier#Right', 'AST#variable_declarator#Left', 'b', 'Query', '=', 'AST#object_creation_expression#Left', 'new', 'AST#scoped_type_identifier#Left', 'Boo', 'lean', 'Query', '.', 'Builder', 'AST#scoped_type_identifier#Right', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'Query', 'Node', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'children', '=', 'AST#method_invocation#Left', 'and', 'Node', '.', 'get', 'Children', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'children', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#enhanced_for_statement#Left', 'for', '(', 'Query', 'Node', 'child', ':', 'children', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Object', 'AST#variable_declarator#Left', 'obj', '=', 'AST#method_invocation#Left', 'child', '.', 'get', 'Tag', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Query', 'Tree', 'Builder', '.', 'QU', 'ERY', '_', 'T', 'REE', '_', 'BU', 'IL', 'DER', '_', 'TAG', 'ID', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'obj', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Query', 'AST#variable_declarator#Left', 'query', '=', 'AST#cast_expression#Left', '(', 'Query', ')', 'obj', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'b', 'Query', '.', 'add', 'AST#argument_list#Left', '(', 'query', ',', 'AST#field_access#Left', 'AST#field_access#Left', 'Boo', 'lean', 'Cl', 'ause', '.', 'Occ', 'ur', 'AST#field_access#Right', '.', 'SH', 'OULD', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'Too', 'Many', 'Cla', 'uses', 'ex', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Query', 'Node', 'Exception', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Message', 'Impl', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Query', 'Parser', 'Mess', 'ages', '.', 'EMP', 'TY', '_', 'M', 'ES', 'SA', 'GE', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ',', 'ex', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'b', 'Query', '.', 'set', 'Minimum', 'Number', 'Should', 'Match', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'and', 'Node', '.', 'get', 'Minimum', 'M', 'atching', 'E', 'lements', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'b', 'Query', '.', 'build', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Stream', 'Process', 'or', 'Result', 'desc', 'ribe', 'Stream', 'Process', 'or', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Stream', 'Process', 'or', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Stream', 'Process', 'or', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Dash', 'board', 'Per', 'missions', 'Result', 'desc', 'ribe', 'Dash', 'board', 'Per', 'missions', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Dash', 'board', 'Per', 'missions', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Dash', 'board', 'Per', 'missions', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Ref', 'pe', 'el', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Ref', 'ref', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Ref', 'Database', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'pe', 'el', 'AST#argument_list#Left', '(', 'ref', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'IO', 'Exception', 'e', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'ref', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'long', 'ram', 'Bytes', 'Used', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'Ram', 'Usage', 'Est', 'im', 'ator', '.', 'align', 'Object', 'Size', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#field_access#Left', 'Ram', 'Usage', 'Est', 'im', 'ator', '.', 'NUM', '_', 'BY', 'T', 'ES', '_', 'OB', 'JECT', '_', 'HEAD', 'ER', 'AST#field_access#Right', '+', 'AST#binary_expression#Left', '2', '*', 'AST#field_access#Left', 'Integer', '.', 'BY', 'T', 'ES', 'AST#field_access#Right', 'AST#binary_expression#Right', 'AST#binary_expression#Right', '+', 'AST#field_access#Left', 'Ram', 'Usage', 'Est', 'im', 'ator', '.', 'NUM', '_', 'BY', 'T', 'ES', '_', 'OB', 'JECT', '_', 'REF', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '+', 'AST#method_invocation#Left', 'Ram', 'Usage', 'Est', 'im', 'ator', '.', 'size', 'Of', 'AST#argument_list#Left', '(', 'blocks', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Domain', 'Suggest', 'ions', 'Result', 'get', 'Domain', 'Suggest', 'ions', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Domain', 'Suggest', 'ions', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Domain', 'Suggest', 'ions', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Stack', 'Events', 'Result', 'desc', 'ribe', 'Stack', 'Events', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Stack', 'Events', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Stack', 'Events', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Rule', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'id', 'x', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Cond', 'itional', 'Format', 'ting', 'Rule', 'cf', 'Rule', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Rule', 'AST#argument_list#Left', '(', 'id', 'x', ',', 'AST#cast_expression#Left', '(', 'H', 'SS', 'FC', 'ond', 'itional', 'Format', 'ting', 'Rule', ')', 'cf', 'Rule', 'AST#cast_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Res', 'olver', 'Rule', 'Result', 'create', 'Res', 'olver', 'Rule', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Res', 'olver', 'Rule', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Res', 'olver', 'Rule', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Series', 'Index', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Input', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '1', '_', 'index', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Sty', 'les', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'l', 'ub', 'an', 'cloud', '"', ',', '"', '2018', '-', '05', '-', '09', '"', ',', '"', 'Get', 'Sty', 'les', '"', ',', '"', 'l', 'ub', 'an', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Method', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Method', 'Type', '.', 'POST', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'serial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Output', 'out', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'field', '_', '1', '_', 'gr', 'ids', 'et', '_', 'flag', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'equ', 'als', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'obj', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'this', '==', 'obj', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'obj', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', 'AST#method_invocation#Left', 'obj', '.', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'T', 'offs', 'AST#variable_declarator#Left', 'other', '=', 'AST#cast_expression#Left', '(', 'T', 'offs', ')', 'obj', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'get', 'Start', 'Offset', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', 'AST#method_invocation#Left', 'other', '.', 'get', 'Start', 'Offset', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'get', 'End', 'Offset', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', 'AST#method_invocation#Left', 'other', '.', 'get', 'End', 'Offset', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Gate', 'way', 'Group', 'Result', 'create', 'Gate', 'way', 'Group', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Gate', 'way', 'Group', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Gate', 'way', 'Group', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Particip', 'ant', 'Connection', 'Result', 'create', 'Particip', 'ant', 'Connection', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Particip', 'ant', 'Connection', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Particip', 'ant', 'Connection', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'double', 'ir', 'r', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'double', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'income', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'ir', 'r', 'AST#argument_list#Left', '(', 'income', ',', '0', '.', '1', 'd', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Register', 'Works', 'pace', 'Directory', 'Result', 'register', 'Works', 'pace', 'Directory', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Register', 'Works', 'pace', 'Directory', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Register', 'Works', 'pace', 'Directory', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'R', 'ever', 't', 'Command', 'include', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Any', 'Object', 'Id', 'commit', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'include', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'commit', '.', 'get', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'commit', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Value', 'E', 'val', 'evaluate', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'src', 'Row', 'Index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'src', 'Column', 'Index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Value', 'E', 'val', 'in', 'umber', 'VE', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Value', 'E', 'val', 've', 'Text', '1', ';', 'AST#local_variable_declaration#Right', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 've', 'Text', '1', '=', 'AST#method_invocation#Left', 'Oper', 'and', 'Res', 'olver', '.', 'get', 'Single', 'Value', 'AST#argument_list#Left', '(', 'in', 'umber', 'VE', ',', 'src', 'Row', 'Index', ',', 'src', 'Column', 'Index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'E', 'val', 'uation', 'Exception', 'e', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'e', '.', 'get', 'Error', 'E', 'val', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 'i', 'Number', '=', 'AST#method_invocation#Left', 'Oper', 'and', 'Res', 'olver', '.', 'co', 'er', 'ce', 'Value', 'To', 'String', 'AST#argument_list#Left', '(', 've', 'Text', '1', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Mat', 'cher', 'AST#variable_declarator#Left', 'm', '=', 'AST#method_invocation#Left', 'COMPLE', 'X', '_', 'NUM', 'BER', '_', 'P', 'AT', 'TERN', '.', 'mat', 'cher', 'AST#argument_list#Left', '(', 'i', 'Number', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'bo', 'olean', 'AST#variable_declarator#Left', 'result', '=', 'AST#method_invocation#Left', 'm', '.', 'mat', 'ches', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 'imag', 'inary', '=', '""', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'result', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 'imag', 'inary', 'Group', '=', 'AST#method_invocation#Left', 'm', '.', 'group', 'AST#argument_list#Left', '(', '5', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'bo', 'olean', 'AST#variable_declarator#Left', 'has', 'Im', 'ag', 'inary', 'Part', '=', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'imag', 'inary', 'Group', '.', 'equ', 'als', 'AST#argument_list#Left', '(', '"', 'i', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '||', 'AST#method_invocation#Left', 'imag', 'inary', 'Group', '.', 'equ', 'als', 'AST#argument_list#Left', '(', '"', 'j', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'imag', 'inary', 'Group', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'String', 'E', 'val', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'String', '.', 'value', 'Of', 'AST#argument_list#Left', '(', '0', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'has', 'Im', 'ag', 'inary', 'Part', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 'sign', '=', '""', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 'imag', 'inary', 'Sign', '=', 'AST#method_invocation#Left', 'm', '.', 'group', 'AST#argument_list#Left', '(', 'GROUP', '3', '_', 'IM', 'AG', 'IN', 'ARY', '_', 'SIGN', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'imag', 'inary', 'Sign', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', '0', 'AST#binary_expression#Right', '&&', 'AST#unary_expression#Left', '!', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'imag', 'inary', 'Sign', '.', 'equ', 'als', 'AST#argument_list#Left', '(', '"', '+', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#unary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'sign', '=', 'imag', 'inary', 'Sign', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 'group', 'Im', 'ag', 'inary', 'Number', '=', 'AST#method_invocation#Left', 'm', '.', 'group', 'AST#argument_list#Left', '(', 'GROUP', '4', '_', 'IM', 'AG', 'IN', 'ARY', '_', 'INT', 'EG', 'ER', '_', 'OR', '_', 'D', 'OU', 'BLE', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'group', 'Im', 'ag', 'inary', 'Number', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'imag', 'inary', '=', 'AST#binary_expression#Left', 'sign', '+', 'group', 'Im', 'ag', 'inary', 'Number', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'imag', 'inary', '=', 'AST#binary_expression#Left', 'sign', '+', '"', '1', '"', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Error', 'E', 'val', '.', 'NUM', '_', 'ERROR', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'String', 'E', 'val', 'AST#argument_list#Left', '(', 'imag', 'inary', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'E', 'poll', 'Last', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'AST#scoped_type_identifier#Left', 'Map', '.', 'Entry', 'AST#scoped_type_identifier#Right', 'AST#type_arguments#Left', '<', 'E', ',', 'Object', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'entry', '=', 'AST#method_invocation#Left', 'back', 'ing', 'Map', '.', 'poll', 'Last', 'Entry', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#ternary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'entry', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '?', 'null', ':', 'AST#method_invocation#Left', 'entry', '.', 'get', 'Key', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#ternary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'read', 'U', 'Short', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'ch', '1', '=', 'AST#method_invocation#Left', 'read', 'U', 'Byte', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'ch', '2', '=', 'AST#method_invocation#Left', 'read', 'U', 'Byte', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'ch', '2', '<<', '8', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '+', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'ch', '1', '<<', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Mod', 'ify', 'Snap', 'shot', 'Attribute', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'snap', 'shot', 'Id', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Snap', 'shot', 'Attribute', 'Name', 'attribute', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Operation', 'Type', 'operation', 'Type', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Snap', 'shot', 'Id', 'AST#argument_list#Left', '(', 'snap', 'shot', 'Id', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Attribute', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'attribute', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Operation', 'Type', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'operation', 'Type', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Bonus', 'Pay', 'ments', 'Result', 'list', 'Bonus', 'Pay', 'ments', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Bonus', 'Pay', 'ments', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Bonus', 'Pay', 'ments', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'V', 'get', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Char', 'Sequ', 'ence', 'cs', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'cs', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Null', 'Po', 'inter', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'null', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Token', 'Filter', 'create', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Token', 'Stream', 'input', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Common', 'G', 'rams', 'Filter', 'AST#variable_declarator#Left', 'common', 'G', 'rams', '=', 'AST#cast_expression#Left', '(', 'Common', 'G', 'rams', 'Filter', ')', 'AST#method_invocation#Left', 'super', '.', 'create', 'AST#argument_list#Left', '(', 'input', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Common', 'G', 'rams', 'Query', 'Filter', 'AST#argument_list#Left', '(', 'common', 'G', 'rams', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'get', 'Path', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'path', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'In', 'iti', 'ate', 'Mult', 'ip', 'art', 'Upload', 'Result', 'in', 'iti', 'ate', 'Mult', 'ip', 'art', 'Upload', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'In', 'iti', 'ate', 'Mult', 'ip', 'art', 'Upload', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'In', 'iti', 'ate', 'Mult', 'ip', 'art', 'Upload', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'Builder', 'insert', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'i', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'insert', '0', 'AST#argument_list#Left', '(', 'offset', ',', 'AST#method_invocation#Left', 'Integer', '.', 'to', 'String', 'AST#argument_list#Left', '(', 'i', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'dec', 'ode', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'long', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'blocks', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'blocks', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'int', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'values', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'values', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'iter', 'ations', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'iter', 'ations', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', '++', 'i', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'long', 'AST#variable_declarator#Left', 'block', '=', 'AST#array_access#Left', 'blocks', '[', 'AST#update_expression#Left', 'blocks', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'shift', '=', '62', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'shift', '>', '=', '0', 'AST#binary_expression#Right', ';', 'AST#assignment_expression#Left', 'shift', '-', '=', '2', 'AST#assignment_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#cast_expression#Left', '(', 'int', ')', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'block', '>>>', 'shift', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '&', '3', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#cast_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Token', 'Stream', 'create', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Token', 'Stream', 'input', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'El', 'ision', 'Filter', 'AST#argument_list#Left', '(', 'input', ',', 'articles', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'eat', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Row', 'in', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'rem', 'ap', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'sum', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'Iterator', 'AST#type_arguments#Left', '<', 'Cell', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'i', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#field_access#Left', 'in', '.', 'cells', 'AST#field_access#Right', '.', 'values', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'iterator', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#method_invocation#Left', 'i', '.', 'has', 'Next', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Cell', 'AST#variable_declarator#Left', 'c', '=', 'AST#method_invocation#Left', 'i', '.', 'next', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'sum', '+=', 'AST#field_access#Left', 'c', '.', 'c', 'nt', 'AST#field_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'c', '.', 'ref', 'AST#field_access#Right', '>', '=', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#array_access#Left', 'rem', 'ap', '[', 'AST#field_access#Left', 'c', '.', 'ref', 'AST#field_access#Right', ']', 'AST#array_access#Right', '==', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'c', '.', 'ref', 'AST#field_access#Right', '=', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'frame', '=', 'AST#binary_expression#Left', 'sum', '/', '10', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'bo', 'olean', 'AST#variable_declarator#Left', 'live', '=', 'false', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'Iterator', 'AST#type_arguments#Left', '<', 'Cell', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'i', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#field_access#Left', 'in', '.', 'cells', 'AST#field_access#Right', '.', 'values', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'iterator', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#method_invocation#Left', 'i', '.', 'has', 'Next', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Cell', 'AST#variable_declarator#Left', 'c', '=', 'AST#method_invocation#Left', 'i', '.', 'next', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#field_access#Left', 'c', '.', 'c', 'nt', 'AST#field_access#Right', '<', 'frame', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'AST#field_access#Left', 'c', '.', 'cmd', 'AST#field_access#Right', '>', '=', '0', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'c', '.', 'c', 'nt', 'AST#field_access#Right', '=', '0', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'c', '.', 'cmd', 'AST#field_access#Right', '=', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#field_access#Left', 'c', '.', 'cmd', 'AST#field_access#Right', '>', '=', '0', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'AST#field_access#Left', 'c', '.', 'ref', 'AST#field_access#Right', '>', '=', '0', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'live', '|', '=', 'true', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 'AST#unary_expression#Left', '!', 'live', 'AST#unary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'final', 'public', 'AST#modifiers#Right', 'Token', 'get', 'Token', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Token', 'AST#variable_declarator#Left', 't', '=', 'AST#ternary_expression#Left', 'jj', '_', 'looking', 'A', 'head', '?', 'jj', '_', 'scan', 'pos', ':', 'token', 'AST#ternary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'index', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 't', '.', 'next', 'AST#field_access#Right', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 't', '=', 'AST#field_access#Left', 't', '.', 'next', 'AST#field_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'else', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 't', '=', 'AST#assignment_expression#Left', 'AST#field_access#Left', 't', '.', 'next', 'AST#field_access#Right', '=', 'AST#method_invocation#Left', 'token', '_', 'source', '.', 'get', 'Next', 'Token', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 't', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'sb', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ[', 'AR', 'RAY', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġrange', '="', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Range', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġoptions', '="', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'short', 'To', 'H', 'ex', 'AST#argument_list#Left', '(', '_', 'options', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġnot', 'Used', '="', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'int', 'To', 'H', 'ex', 'AST#argument_list#Left', '(', '_', 'field', '3', 'not', 'Used', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġformula', ':"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'P', 'tg', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'pt', 'gs', '=', 'AST#method_invocation#Left', '_', 'form', 'ula', '.', 'get', 'Tokens', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#field_access#Left', 'pt', 'gs', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'P', 'tg', 'AST#variable_declarator#Left', 'pt', 'g', '=', 'AST#array_access#Left', 'pt', 'gs', '[', 'i', ']', 'AST#array_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', 'pt', 'g', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'pt', 'g', '.', 'get', 'R', 'V', 'AT', 'ype', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"]', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'sb', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Folder', 'Result', 'get', 'Folder', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Folder', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Folder', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'AST#marker_annotation#Left', '@', 'Override', 'AST#marker_annotation#Right', 'public', 'AST#modifiers#Right', 'void', 'add', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'location', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'E', 'object', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Un', 'supported', 'Operation', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Pos', 'itive', 'Sc', 'ores', 'Only', 'Collect', 'or', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Collect', 'or', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'in', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Rep', 'o', 'Build', 'Rule', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'cr', '"', ',', '"', '2016', '-', '06', '-', '07', '"', ',', '"', 'Create', 'Rep', 'o', 'Build', 'Rule', '"', ',', '"', 'cr', '"', ')', ';', 'AST#ERROR#Right', 'set', 'U', 'ri', 'Pattern', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', '"', '/', 're', 'pos', '/', '[', 'Rep', 'o', 'Names', 'pace', ']', '/', '[', 'Rep', 'o', 'Name', ']', '/', 'rules', '"', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Method', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Method', 'Type', '.', 'PUT', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Base', 'Ref', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Area', 'E', 'val', 'ae', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'ref', 'E', 'val', '=', 'null', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'area', 'E', 'val', '=', 'ae', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'first', 'Row', 'Index', '=', 'AST#method_invocation#Left', 'ae', '.', 'get', 'First', 'Row', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'first', 'Column', 'Index', '=', 'AST#method_invocation#Left', 'ae', '.', 'get', 'First', 'Column', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'height', '=', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'ae', '.', 'get', 'Last', 'Row', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '-', 'AST#method_invocation#Left', 'ae', '.', 'get', 'First', 'Row', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'width', '=', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'ae', '.', 'get', 'Last', 'Column', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '-', 'AST#method_invocation#Left', 'ae', '.', 'get', 'First', 'Column', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Draw', 'ing', 'Manager', '2', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Esc', 'her', 'D', 'gg', 'Record', 'd', 'gg', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'd', 'gg', 'AST#field_access#Right', '=', 'd', 'gg', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'reset', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'first', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'reset', 'AST#argument_list#Left', '(', 'raw', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'Ch', 'ars', 'et', 'Dec', 'oder', 'reset', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'status', '=', 'IN', 'IT', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'impl', 'Res', 'et', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Buff', 'ered', 'Reader', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Reader', 'in', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'size', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'in', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'size', '<', '=', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', '"', 'size', 'Ġ<=', 'Ġ0', '"', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'in', 'AST#field_access#Right', '=', 'in', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'buf', '=', 'AST#array_creation_expression#Left', 'new', 'char', 'AST#dimensions_expr#Left', '[', 'size', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Code', 'Rep', 'ository', 'Result', 'desc', 'ribe', 'Code', 'Rep', 'ository', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Code', 'Rep', 'ository', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Code', 'Rep', 'ository', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'D', 'BS', 'ub', 'net', 'Group', 'create', 'D', 'BS', 'ub', 'net', 'Group', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'D', 'BS', 'ub', 'net', 'Group', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'D', 'BS', 'ub', 'net', 'Group', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'R', 'ename', 'B', 'ranch', 'Command', 'set', 'Old', 'Name', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'old', 'Name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'check', 'Call', 'able', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'old', 'Name', 'AST#field_access#Right', '=', 'old', 'Name', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'B', 'ranch', 'Command', 'set', 'Force', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'bo', 'olean', 'force', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'check', 'Call', 'able', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'force', 'AST#field_access#Right', '=', 'force', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Stop', 'Comp', 'ilation', 'Job', 'Result', 'stop', 'Comp', 'ilation', 'Job', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Stop', 'Comp', 'ilation', 'Job', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Stop', 'Comp', 'ilation', 'Job', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'syn', 'chron', 'ized', 'final', 'AST#modifiers#Right', 'void', 'incre', 'ment', 'Second', 'ary', 'Progress', 'By', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'diff', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Second', 'ary', 'Progress', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'm', 'Second', 'ary', 'Progress', '+', 'diff', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#array_type#Left', 'int', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'clear', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#assignment_expression#Left', 'bytes', 'Start', '=', 'null', 'AST#assignment_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'get', 'Raw', 'Path', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'path', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'User', 'Source', 'Account', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'cr', '"', ',', '"', '2016', '-', '06', '-', '07', '"', ',', '"', 'Get', 'User', 'Source', 'Account', '"', ',', '"', 'cr', '"', ')', ';', 'AST#ERROR#Right', 'set', 'U', 'ri', 'Pattern', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', '"', '/', 'users', '/', 'source', 'Account', '"', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Method', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Method', 'Type', '.', 'GET', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Export', 'Job', 'Result', 'create', 'Export', 'Job', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Export', 'Job', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Export', 'Job', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'D', 'ed', 'icated', 'I', 'p', 'Pool', 'Result', 'create', 'D', 'ed', 'icated', 'I', 'p', 'Pool', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'D', 'ed', 'icated', 'I', 'p', 'Pool', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'D', 'ed', 'icated', 'I', 'p', 'Pool', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'equ', 'als', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'obj', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'this', '==', 'obj', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'obj', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'obj', 'instance', 'of', 'H', 'SS', 'FC', 'ell', 'Style', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'H', 'SS', 'FC', 'ell', 'Style', 'AST#variable_declarator#Left', 'other', '=', 'AST#cast_expression#Left', '(', 'H', 'SS', 'FC', 'ell', 'Style', ')', 'obj', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', '_', 'format', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'other', '.', '_', 'format', 'AST#field_access#Right', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'else', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', '_', 'format', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'other', '.', '_', 'format', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', '_', 'index', '!', '=', 'AST#field_access#Left', 'other', '.', '_', 'index', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Release', 'Host', 's', 'Result', 'release', 'Host', 's', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Release', 'Host', 's', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Release', 'Host', 's', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'equ', 'als', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'object', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'this', '==', 'object', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'object', 'instance', 'of', 'Set', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'Set', 'AST#type_arguments#Left', '<', '?', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 's', '=', 'AST#cast_expression#Left', '(', 'AST#generic_type#Left', 'Set', 'AST#type_arguments#Left', '<', '?', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', ')', 'object', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', 'AST#method_invocation#Left', 's', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '&&', 'AST#method_invocation#Left', 'cont', 'ains', 'All', 'AST#argument_list#Left', '(', 's', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'Null', 'Po', 'inter', 'Exception', 'ign', 'ored', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'Class', 'Cast', 'Exception', 'ign', 'ored', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Ref', 'Log', 'Message', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'msg', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'bo', 'olean', 'append', 'Status', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'custom', 'Ref', 'Log', '=', 'true', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'msg', '==', 'null', 'AST#binary_expression#Right', '&&', 'AST#unary_expression#Left', '!', 'append', 'Status', 'AST#unary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'disable', 'Ref', 'Log', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'msg', '==', 'null', 'AST#binary_expression#Right', '&&', 'append', 'Status', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ref', 'Log', 'Message', '=', '""', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ref', 'Log', 'In', 'clude', 'Result', '=', 'true', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ref', 'Log', 'Message', '=', 'msg', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ref', 'Log', 'In', 'clude', 'Result', '=', 'append', 'Status', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Stream', 'ID', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Input', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'id', 'st', 'm', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Rec', 'ogn', 'ize', 'Car', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'vision', 'ai', '-', 'p', 'oc', '"', ',', '"', '2020', '-', '04', '-', '08', '"', ',', '"', 'Rec', 'ogn', 'ize', 'Car', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Method', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Method', 'Type', '.', 'POST', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'Byte', 'Order', 'order', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Byte', 'Order', '.', 'native', 'Order', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'get', 'A', 'head', 'Count', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'ahead', 'Count', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'is', 'New', 'Frag', 'ment', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Cloud', 'Front', 'Origin', 'Access', 'Id', 'entity', 'Config', 'Result', 'get', 'Cloud', 'Front', 'Origin', 'Access', 'Id', 'entity', 'Config', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Cloud', 'Front', 'Origin', 'Access', 'Id', 'entity', 'Config', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Cloud', 'Front', 'Origin', 'Access', 'Id', 'entity', 'Config', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'mat', 'ches', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'sy', 'mbol', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'min', 'V', 'oc', 'ab', 'Sy', 'mbol', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'max', 'V', 'oc', 'ab', 'Sy', 'mbol', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'label', '==', 'sy', 'mbol', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Trans', 'it', 'Gate', 'way', 'Result', 'delete', 'Trans', 'it', 'Gate', 'way', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Trans', 'it', 'Gate', 'way', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Trans', 'it', 'Gate', 'way', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'grow', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'array', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'min', 'Size', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#assert_statement#Left', 'assert', 'AST#binary_expression#Left', 'min', 'Size', '>', '=', '0', 'AST#binary_expression#Right', ':', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'size', 'Ġmust', 'Ġbe', 'Ġpositive', 'Ġ(', 'got', 'Ġ"', '+', 'min', 'Size', 'AST#binary_expression#Right', '+', '"', '):', 'Ġlikely', 'Ġinteger', 'Ġoverflow', '?"', 'AST#binary_expression#Right', ';', 'AST#assert_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'array', '.', 'length', 'AST#field_access#Right', '<', 'min', 'Size', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'grow', 'Ex', 'act', 'AST#argument_list#Left', '(', 'array', ',', 'AST#method_invocation#Left', 'overs', 'ize', 'AST#argument_list#Left', '(', 'min', 'Size', ',', 'AST#field_access#Left', 'Byte', '.', 'BY', 'T', 'ES', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#return_statement#Left', 'return', 'array', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Transaction', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'Cloud', 'Photo', '"', ',', '"', '2017', '-', '07', '-', '11', '"', ',', '"', 'Create', 'Transaction', '"', ',', '"', 'cloud', 'photo', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Prot', 'ocol', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Prot', 'ocol', 'Type', '.', 'HT', 'TPS', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'B', 'atch', 'Ref', 'Update', 'set', 'Ref', 'Log', 'Ident', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Person', 'Ident', 'pi', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ref', 'Log', 'Ident', '=', 'pi', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Launch', 'Template', 'Data', 'Result', 'get', 'Launch', 'Template', 'Data', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Launch', 'Template', 'Data', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Launch', 'Template', 'Data', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Par', 'se', 'Info', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Prof', 'iling', 'AT', 'NS', 'im', 'ulator', 'at', 'n', 'Sim', 'ulator', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'at', 'n', 'Sim', 'ulator', 'AST#field_access#Right', '=', 'at', 'n', 'Sim', 'ulator', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Simple', 'Q', 'Q', 'Parser', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'qq', 'Names', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'index', 'Field', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'qq', 'Names', 'AST#field_access#Right', '=', 'qq', 'Names', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'index', 'Field', 'AST#field_access#Right', '=', 'index', 'Field', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'DB', 'Cl', 'uster', 'prom', 'ote', 'Read', 'Repl', 'ica', 'DB', 'Cl', 'uster', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Prom', 'ote', 'Read', 'Repl', 'ica', 'DB', 'Cl', 'uster', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Prom', 'ote', 'Read', 'Repl', 'ica', 'DB', 'Cl', 'uster', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Cap', 'acity', 'Res', 'erv', 'ations', 'Result', 'desc', 'ribe', 'Cap', 'acity', 'Res', 'erv', 'ations', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Cap', 'acity', 'Res', 'erv', 'ations', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Cap', 'acity', 'Res', 'erv', 'ations', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'Index', 'S', 'earcher', '("', '+', 'reader', 'AST#binary_expression#Right', '+', '";', 'Ġexecut', 'or', '="', 'AST#binary_expression#Right', '+', 'exec', 'utor', 'AST#binary_expression#Right', '+', '";', 'Ġslice', 'Exec', 'ution', 'Control', 'Pl', 'ane', 'Ġ"', 'AST#binary_expression#Right', '+', 'slice', 'Exec', 'utor', 'AST#binary_expression#Right', '+', '")', '"', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'bo', 'olean', 'incre', 'ment', 'Token', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'serial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Output', 'out', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'main', '+', '1', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'sub', 'From', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'sub', 'To', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'dec', 'ode', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'blocks', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'blocks', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'int', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'values', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'values', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'iter', 'ations', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'bits', 'Per', 'Value', '>', '32', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Un', 'supported', 'Operation', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'C', 'annot', 'Ġdecode', 'Ġ"', '+', 'bits', 'Per', 'Value', 'AST#binary_expression#Right', '+', '"-', 'bits', 'Ġvalues', 'Ġinto', 'Ġan', 'Ġint', '[]', '"', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'iter', 'ations', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', '++', 'i', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'long', 'AST#variable_declarator#Left', 'block', '=', 'AST#method_invocation#Left', 'read', 'Long', 'AST#argument_list#Left', '(', 'blocks', ',', 'blocks', 'Offset', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'blocks', 'Offset', '+=', '8', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'values', 'Offset', '=', 'AST#method_invocation#Left', 'dec', 'ode', 'AST#argument_list#Left', '(', 'block', ',', 'values', ',', 'values', 'Offset', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'is', 'Ex', 'pected', 'Token', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'sy', 'mbol', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AT', 'N', 'AST#variable_declarator#Left', 'at', 'n', '=', 'AST#field_access#Left', 'AST#method_invocation#Left', 'get', 'Inter', 'pre', 'ter', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'at', 'n', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Parser', 'Rule', 'Context', 'AST#variable_declarator#Left', 'ctx', '=', '_', 'ctx', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'AT', 'N', 'State', 'AST#variable_declarator#Left', 's', '=', 'AST#method_invocation#Left', 'AST#field_access#Left', 'at', 'n', '.', 'states', 'AST#field_access#Right', '.', 'get', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'State', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Inter', 'val', 'Set', 'AST#variable_declarator#Left', 'follow', 'ing', '=', 'AST#method_invocation#Left', 'at', 'n', '.', 'next', 'Tokens', 'AST#argument_list#Left', '(', 's', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'follow', 'ing', '.', 'cont', 'ains', 'AST#argument_list#Left', '(', 'sy', 'mbol', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'follow', 'ing', '.', 'cont', 'ains', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Token', '.', 'E', 'PS', 'IL', 'ON', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#while_statement#Left', 'while', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'ctx', '!', '=', 'null', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'AST#field_access#Left', 'ctx', '.', 'inv', 'oking', 'State', 'AST#field_access#Right', '>', '=', '0', 'AST#binary_expression#Right', 'AST#binary_expression#Right', '&&', 'AST#method_invocation#Left', 'follow', 'ing', '.', 'cont', 'ains', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Token', '.', 'E', 'PS', 'IL', 'ON', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AT', 'N', 'State', 'AST#variable_declarator#Left', 'inv', 'oking', 'State', '=', 'AST#method_invocation#Left', 'AST#field_access#Left', 'at', 'n', '.', 'states', 'AST#field_access#Right', '.', 'get', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'ctx', '.', 'inv', 'oking', 'State', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Rule', 'Trans', 'ition', 'AST#variable_declarator#Left', 'rt', '=', 'AST#cast_expression#Left', '(', 'Rule', 'Trans', 'ition', ')', 'AST#method_invocation#Left', 'inv', 'oking', 'State', '.', 'trans', 'ition', 'AST#argument_list#Left', '(', '0', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'follow', 'ing', '=', 'AST#method_invocation#Left', 'at', 'n', '.', 'next', 'Tokens', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'rt', '.', 'follow', 'State', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'follow', 'ing', '.', 'cont', 'ains', 'AST#argument_list#Left', '(', 'sy', 'mbol', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ctx', '=', 'AST#cast_expression#Left', '(', 'Parser', 'Rule', 'Context', ')', 'AST#field_access#Left', 'ctx', '.', 'parent', 'AST#field_access#Right', 'AST#cast_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#while_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'follow', 'ing', '.', 'cont', 'ains', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Token', '.', 'E', 'PS', 'IL', 'ON', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '&&', 'AST#binary_expression#Left', 'sy', 'mbol', '==', 'AST#field_access#Left', 'Token', '.', 'EO', 'F', 'AST#field_access#Right', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Stream', 'Result', 'update', 'Stream', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Stream', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Stream', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Value', 'E', 'val', 'evaluate', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'src', 'Row', 'Index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'src', 'Column', 'Index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Value', 'E', 'val', 'arg', '0', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Oper', 'and', 'Res', 'olver', '.', 'get', 'Single', 'Value', 'AST#argument_list#Left', '(', 'arg', '0', ',', 'src', 'Row', 'Index', ',', 'src', 'Column', 'Index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Error', 'E', 'val', '.', 'NA', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'E', 'val', 'uation', 'Exception', 'e', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'result', '=', 'AST#method_invocation#Left', 'trans', 'late', 'Error', 'Code', 'To', 'Error', 'Type', 'Value', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'e', '.', 'get', 'Error', 'E', 'val', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Error', 'Code', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Number', 'E', 'val', 'AST#argument_list#Left', '(', 'result', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '+', '"', 'Ġ["', 'AST#binary_expression#Right', '+', '_', 'index', 'AST#binary_expression#Right', '+', '"', 'Ġ"', 'AST#binary_expression#Right', '+', '_', 'name', 'AST#binary_expression#Right', '+', '"]', '"', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Ass', 'ign', 'ments', 'For', 'H', 'IT', 'Result', 'list', 'Ass', 'ign', 'ments', 'For', 'H', 'IT', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Ass', 'ign', 'ments', 'For', 'H', 'IT', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Ass', 'ign', 'ments', 'For', 'H', 'IT', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Access', 'Control', 'Rule', 'Result', 'delete', 'Access', 'Control', 'Rule', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Access', 'Control', 'Rule', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Access', 'Control', 'Rule', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#generic_type#Left', 'Arc', 'AST#type_arguments#Left', '<', 'Long', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'get', 'First', 'Arc', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#field_access#Left', 'F', 'ST', '.', 'Arc', 'AST#field_access#Right', '<', 'Long', 'AST#binary_expression#Right', '>', 'arc', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'f', 'st', '.', 'get', 'First', 'Arc', 'AST#argument_list#Left', '(', 'arc', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'dec', 'ode', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'long', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'blocks', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'blocks', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'int', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'values', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'values', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'iter', 'ations', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'iter', 'ations', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', '++', 'i', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'long', 'AST#variable_declarator#Left', 'block', '=', 'AST#array_access#Left', 'blocks', '[', 'AST#update_expression#Left', 'blocks', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'shift', '=', '48', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'shift', '>', '=', '0', 'AST#binary_expression#Right', ';', 'AST#assignment_expression#Left', 'shift', '-', '=', '16', 'AST#assignment_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#cast_expression#Left', '(', 'int', ')', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'block', '>>>', 'shift', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '&', '655', '35', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#cast_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'long', 'skip', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'long', 'char', 'Count', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'char', 'Count', '<', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'char', 'Count', 'Ġ<', 'Ġ0', ':', 'Ġ"', '+', 'char', 'Count', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#synchronized_statement#Left', 'syn', 'chron', 'ized', 'AST#parenthesized_expression#Left', '(', 'lock', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'check', 'Not', 'Cl', 'osed', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'char', 'Count', '==', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', '0', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'long', 'in', 'Sk', 'ipped', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'available', 'From', 'Buffer', '=', 'AST#binary_expression#Left', 'AST#field_access#Left', 'buf', '.', 'length', 'AST#field_access#Right', '-', 'pos', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'available', 'From', 'Buffer', '>', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'long', 'AST#variable_declarator#Left', 'required', 'From', 'In', '=', 'AST#binary_expression#Left', 'char', 'Count', '-', 'available', 'From', 'Buffer', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'required', 'From', 'In', '<', '=', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'pos', '+=', 'char', 'Count', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'char', 'Count', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'pos', '+=', 'available', 'From', 'Buffer', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'in', 'Sk', 'ipped', '=', 'AST#method_invocation#Left', 'in', '.', 'skip', 'AST#argument_list#Left', '(', 'required', 'From', 'In', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'in', 'Sk', 'ipped', '=', 'AST#method_invocation#Left', 'in', '.', 'skip', 'AST#argument_list#Left', '(', 'char', 'Count', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'in', 'Sk', 'ipped', '+', 'available', 'From', 'Buffer', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#synchronized_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#generic_type#Left', 'Map', 'AST#type_arguments#Left', '<', 'String', ',', 'Ref', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'get', 'Ref', 's', 'Map', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'advert', 'ised', 'Ref', 's', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'A', 'pi', 'Key', 'Result', 'update', 'A', 'pi', 'Key', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'A', 'pi', 'Key', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'A', 'pi', 'Key', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Object', 'Stream', 'open', 'Stream', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'AST#ERROR#Right', 'AST#local_variable_declaration#Left', 'Missing', 'Object', 'Exception', ',', 'IO', 'Exception', 'AST#local_variable_declaration#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Pack', 'Input', 'Stream', 'pack', 'In', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'AST#annotation#Left', '@', 'Supp', 'ress', 'W', 'arn', 'ings', 'AST#annotation_argument_list#Left', '(', '"', 'resource', '"', ')', 'AST#annotation_argument_list#Right', 'AST#annotation#Right', 'D', 'fs', 'Reader', 'AST#variable_declarator#Left', 'ctx', '=', 'AST#method_invocation#Left', 'db', '.', 'new', 'Reader', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'pack', 'In', '=', 'AST#object_creation_expression#Left', 'new', 'Pack', 'Input', 'Stream', 'AST#argument_list#Left', '(', 'pack', ',', 'AST#binary_expression#Left', 'object', 'Offset', '+', 'header', 'Length', 'AST#binary_expression#Right', ',', 'ctx', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ctx', '=', 'null', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'IO', 'Exception', 'pack', 'G', 'one', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Object', 'Id', 'AST#variable_declarator#Left', 'obj', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'pack', '.', 'get', 'R', 'ever', 'se', 'Id', 'x', 'AST#argument_list#Left', '(', 'ctx', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'find', 'Object', 'AST#argument_list#Left', '(', 'object', 'Offset', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'ctx', '.', 'open', 'AST#argument_list#Left', '(', 'obj', ',', 'type', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'open', 'Stream', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', '}', 'AST#block#Right', 'AST#finally_clause#Left', 'f', 'inally', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'ctx', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'ctx', '.', 'close', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#finally_clause#Right', 'AST#try_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'buf', 's', 'z', '=', '8', '192', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Input', 'Stream', 'AST#variable_declarator#Left', 'in', '=', 'AST#object_creation_expression#Left', 'new', 'Buff', 'ered', 'Input', 'Stream', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'In', 'fl', 'ater', 'Input', 'Stream', 'AST#argument_list#Left', '(', 'pack', 'In', ',', 'AST#method_invocation#Left', 'AST#field_access#Left', 'pack', 'In', '.', 'ctx', 'AST#field_access#Right', '.', 'in', 'fl', 'ater', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'buf', 's', 'z', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ',', 'buf', 's', 'z', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'AST#scoped_type_identifier#Left', 'Object', 'Stream', '.', 'Filter', 'AST#scoped_type_identifier#Right', 'AST#argument_list#Left', '(', 'type', ',', 'size', ',', 'in', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Array', 'List', 'AST#ERROR#Left', '(', ')', '{', 'AST#ERROR#Right', 'AST#variable_declarator#Left', 'array', '=', 'AST#field_access#Left', 'Empty', 'Array', '.', 'OB', 'JECT', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Det', 'ector', 'Version', 'Result', 'update', 'Det', 'ector', 'Version', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Det', 'ector', 'Version', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Det', 'ector', 'Version', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'res', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'res', 'ize', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Double', '.', 'MAX', '_', 'VALUE', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Rev', 'Flag', 'Set', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'Collection', 'AST#type_arguments#Left', '<', 'Rev', 'Flag', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 's', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#ERROR#Left', 'this', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', ';', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'All', 'AST#argument_list#Left', '(', 's', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'size', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'size', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'long', 'get', 'Long', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'new', 'Position', '=', 'AST#binary_expression#Left', 'position', '+', 'AST#field_access#Left', 'Size', 'Of', '.', 'L', 'ONG', 'AST#field_access#Right', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'new', 'Position', '>', 'limit', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Buffer', 'Under', 'flow', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'long', 'AST#variable_declarator#Left', 'result', '=', 'AST#method_invocation#Left', 'Memory', '.', 'pe', 'ek', 'Long', 'AST#argument_list#Left', '(', 'back', 'ing', 'Array', ',', 'AST#binary_expression#Left', 'offset', '+', 'position', 'AST#binary_expression#Right', ',', 'order', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'position', '=', 'new', 'Position', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'result', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'Builder', 'insert', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'long', 'l', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'insert', '0', 'AST#argument_list#Left', '(', 'offset', ',', 'AST#method_invocation#Left', 'Long', '.', 'to', 'String', 'AST#argument_list#Left', '(', 'l', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Turkish', 'Lower', 'Case', 'Filter', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Token', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'in', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Par', 'se', 'Tree', 'Match', 'match', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Par', 'se', 'Tree', 'tree', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Par', 'se', 'Tree', 'Pattern', 'pattern', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'Multi', 'Map', 'AST#type_arguments#Left', '<', 'String', ',', 'Par', 'se', 'Tree', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'lab', 'els', '=', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Multi', 'Map', 'AST#type_arguments#Left', '<', 'String', ',', 'Par', 'se', 'Tree', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Par', 'se', 'Tree', 'AST#variable_declarator#Left', 'm', 'ism', 'atched', 'Node', '=', 'AST#method_invocation#Left', 'match', 'Impl', 'AST#argument_list#Left', '(', 'tree', ',', 'AST#method_invocation#Left', 'pattern', '.', 'get', 'Pattern', 'Tree', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'lab', 'els', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Par', 'se', 'Tree', 'Match', 'AST#argument_list#Left', '(', 'tree', ',', 'pattern', ',', 'lab', 'els', ',', 'm', 'ism', 'atched', 'Node', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'add', 'If', 'No', 'Over', 'lap', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Weight', 'ed', 'Ph', 'rase', 'Info', 'w', 'pi', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#enhanced_for_statement#Left', 'for', '(', 'Weight', 'ed', 'Ph', 'rase', 'Info', 'exist', 'W', 'pi', ':', 'AST#method_invocation#Left', 'get', 'Ph', 'rase', 'List', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'exist', 'W', 'pi', '.', 'is', 'Offset', 'Over', 'lap', 'AST#argument_list#Left', '(', 'w', 'pi', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'exist', 'W', 'pi', '.', 'get', 'Ter', 'ms', 'Inf', 'os', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'add', 'All', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'w', 'pi', '.', 'get', 'Ter', 'ms', 'Inf', 'os', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Ph', 'rase', 'List', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'add', 'AST#argument_list#Left', '(', 'w', 'pi', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Three', 'Way', 'Mer', 'ger', 'new', 'Mer', 'ger', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Rep', 'ository', 'db', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'In', 'Core', 'Mer', 'ger', 'AST#argument_list#Left', '(', 'db', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'float', 'doc', 'Score', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'doc', 'Id', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'field', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'num', 'Pay', 'loads', 'Se', 'en', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'float', 'pay', 'load', 'Score', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#ternary_expression#Left', 'AST#binary_expression#Left', 'num', 'Pay', 'loads', 'Se', 'en', '>', '0', 'AST#binary_expression#Right', '?', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'pay', 'load', 'Score', '/', 'num', 'Pay', 'loads', 'Se', 'en', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', ':', '1', 'AST#ternary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#generic_type#Left', 'Collection', 'AST#type_arguments#Left', '<', 'Par', 'se', 'Tree', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'evaluate', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Par', 'se', 'Tree', 't', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'T', 'rees', '.', 'find', 'All', 'Rule', 'N', 'odes', 'AST#argument_list#Left', '(', 't', ',', 'rule', 'Index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'buffer', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"[', 'C', 'FR', 'ULE', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'condition', '_', 'type', 'Ġ', 'Ġ', 'Ġ=', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Condition', 'Type', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'ĠOPT', 'ION', 'ĠFL', 'AG', 'S', '=', '0', 'x', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Integer', '.', 'to', 'H', 'ex', 'String', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Options', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'cont', 'ains', 'Font', 'Format', 'ting', 'Block', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '_', 'font', 'Format', 'ting', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'cont', 'ains', 'Border', 'Format', 'ting', 'Block', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '_', 'border', 'Format', 'ting', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'cont', 'ains', 'Pattern', 'Format', 'ting', 'Block', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '_', 'pattern', 'Format', 'ting', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'ĠFormula', 'Ġ1', 'Ġ=', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Ar', 'rays', '.', 'to', 'String', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Form', 'ula', '1', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Tokens', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'ĠFormula', 'Ġ2', 'Ġ=', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Ar', 'rays', '.', 'to', 'String', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Form', 'ula', '2', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Tokens', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', '[/', 'C', 'FR', 'ULE', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'buffer', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Service', 'Up', 'dates', 'Result', 'desc', 'ribe', 'Service', 'Up', 'dates', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Service', 'Up', 'dates', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Service', 'Up', 'dates', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'get', 'Name', 'Name', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Name', 'At', 'AST#argument_list#Left', '(', 'index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Name', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'L', 'ocations', 'Result', 'desc', 'ribe', 'L', 'ocations', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'desc', 'ribe', 'L', 'ocations', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Desc', 'ribe', 'L', 'ocations', 'Request', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', '<', 'ph', 'r', 'ases', 'l', 'op', 'Ġvalue', "='", '"', '+', 'AST#method_invocation#Left', 'get', 'Value', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '"\'', '>"', 'AST#binary_expression#Right', '+', '"', '\\', 'n', '"', 'AST#binary_expression#Right', '+', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Child', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '"', '\\', 'n', '</', 'ph', 'r', 'ases', 'l', 'op', '>"', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Dir', 'Cache', 'Entry', 'get', 'Dir', 'Cache', 'Entry', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#ternary_expression#Left', 'AST#binary_expression#Left', 'current', 'Sub', 'tree', '==', 'null', 'AST#binary_expression#Right', '?', 'current', 'Entry', ':', 'null', 'AST#ternary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Int', 'Buffer', 'put', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'int', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'src', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'src', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'int', 'Count', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Ar', 'rays', '.', 'check', 'Offset', 'And', 'Count', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'src', '.', 'length', 'AST#field_access#Right', ',', 'src', 'Offset', ',', 'int', 'Count', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'int', 'Count', '>', 'AST#method_invocation#Left', 'rem', 'aining', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Buffer', 'Over', 'flow', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', 'src', 'Offset', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#binary_expression#Left', 'src', 'Offset', '+', 'int', 'Count', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', '++', 'i', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'put', 'AST#argument_list#Left', '(', 'AST#array_access#Left', 'src', '[', 'i', ']', 'AST#array_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'tr', 'im', 'To', 'Size', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 's', '=', 'size', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 's', '==', 'AST#field_access#Left', 'array', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 's', '==', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'array', '=', 'AST#field_access#Left', 'Empty', 'Array', '.', 'OB', 'JECT', 'AST#field_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'Object', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'new', 'Array', '=', 'AST#array_creation_expression#Left', 'new', 'Object', 'AST#dimensions_expr#Left', '[', 's', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'System', '.', 'array', 'copy', 'AST#argument_list#Left', '(', 'array', ',', '0', ',', 'new', 'Array', ',', '0', ',', 's', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'array', '=', 'new', 'Array', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'mod', 'Count', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Local', 'Gate', 'way', 'Virtual', 'Inter', 'faces', 'Result', 'desc', 'ribe', 'Local', 'Gate', 'way', 'Virtual', 'Inter', 'faces', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Local', 'Gate', 'way', 'Virtual', 'Inter', 'faces', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Local', 'Gate', 'way', 'Virtual', 'Inter', 'faces', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Token', 'Stream', 'create', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Token', 'Stream', 'input', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Russian', 'Light', 'St', 'em', 'Filter', 'AST#argument_list#Left', '(', 'input', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#array_type#Left', 'int', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'to', 'Array', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'final', 'AST#array_type#Left', 'int', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'a', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'int', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'r', 'val', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'a', '.', 'length', 'AST#field_access#Right', '==', '_', 'limit', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'System', '.', 'array', 'copy', 'AST#argument_list#Left', '(', '_', 'array', ',', '0', ',', 'a', ',', '0', ',', '_', 'limit', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'r', 'val', '=', 'a', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'r', 'val', '=', 'AST#method_invocation#Left', 'to', 'Array', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'r', 'val', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Basic', 'Session', 'C', 'red', 'entials', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'access', 'Key', 'Id', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'access', 'Key', 'Secret', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'session', 'Token', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'long', 'role', 'Session', 'Duration', 'Second', 's', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'access', 'Key', 'Id', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', '"', 'Access', 'Ġkey', 'ĠID', 'Ġcannot', 'Ġbe', 'Ġnull', '."', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'access', 'Key', 'Secret', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', '"', 'Access', 'Ġkey', 'Ġsecret', 'Ġcannot', 'Ġbe', 'Ġnull', '."', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'access', 'Key', 'Id', 'AST#field_access#Right', '=', 'access', 'Key', 'Id', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'access', 'Key', 'Secret', 'AST#field_access#Right', '=', 'access', 'Key', 'Secret', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'session', 'Token', 'AST#field_access#Right', '=', 'session', 'Token', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'role', 'Session', 'Duration', 'Second', 's', 'AST#field_access#Right', '=', 'role', 'Session', 'Duration', 'Second', 's', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'session', 'Start', 'ed', 'Time', 'In', 'Mill', 'i', 'Second', 's', 'AST#field_access#Right', '=', 'AST#method_invocation#Left', 'System', '.', 'current', 'Time', 'Mill', 'is', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'Short', 'Buffer', 'get', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'short', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'd', 'st', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'd', 'st', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'short', 'Count', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'short', 'Count', '>', 'AST#method_invocation#Left', 'rem', 'aining', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Buffer', 'Under', 'flow', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'System', '.', 'array', 'copy', 'AST#argument_list#Left', '(', 'back', 'ing', 'Array', ',', 'AST#binary_expression#Left', 'offset', '+', 'position', 'AST#binary_expression#Right', ',', 'd', 'st', ',', 'd', 'st', 'Offset', ',', 'short', 'Count', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'position', '+=', 'short', 'Count', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Activ', 'ate', 'Event', 'Source', 'Result', 'activate', 'Event', 'Source', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Activ', 'ate', 'Event', 'Source', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Activ', 'ate', 'Event', 'Source', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Re', 'ce', 'ipt', 'Rule', 'Set', 'Result', 'desc', 'ribe', 'Re', 'ce', 'ipt', 'Rule', 'Set', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Re', 'ce', 'ipt', 'Rule', 'Set', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Re', 'ce', 'ipt', 'Rule', 'Set', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Filter', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Name', 'AST#argument_list#Left', '(', 'name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Double', 'Buffer', 'put', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'double', 'c', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Read', 'Only', 'Buffer', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Tra', 'ffic', 'Policy', 'Instance', 'Result', 'create', 'Tra', 'ffic', 'Policy', 'Instance', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Tra', 'ffic', 'Policy', 'Instance', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Tra', 'ffic', 'Policy', 'Instance', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Japanese', 'Iter', 'ation', 'Mark', 'Char', 'Filter', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Reader', 'input', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'bo', 'olean', 'normal', 'ize', 'K', 'an', 'ji', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'bo', 'olean', 'normal', 'ize', 'K', 'ana', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'input', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'normal', 'ize', 'K', 'an', 'ji', 'AST#field_access#Right', '=', 'normal', 'ize', 'K', 'an', 'ji', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'normal', 'ize', 'K', 'ana', 'AST#field_access#Right', '=', 'normal', 'ize', 'K', 'ana', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'reset', 'AST#argument_list#Left', '(', 'input', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'write', 'Long', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'long', 'v', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'write', 'Int', 'AST#argument_list#Left', '(', 'AST#cast_expression#Left', '(', 'int', ')', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'v', '>>', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#cast_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'write', 'Int', 'AST#argument_list#Left', '(', 'AST#cast_expression#Left', '(', 'int', ')', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'v', '>>', '32', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#cast_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'File', 'Res', 'olver', 'AST#ERROR#Left', '(', ')', '{', 'ex', 'ports', '=', 'new', 'AST#ERROR#Right', 'Con', 'current', 'Hash', 'Map', 'AST#ERROR#Left', '<', '>', '(', ')', 'AST#ERROR#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'export', 'Base', '=', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Copy', 'On', 'Write', 'Array', 'List', 'AST#type_arguments#Left', '<', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Value', 'E', 'val', 'get', 'Ref', '3', 'DE', 'val', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Ref', '3', 'DP', 'x', 'g', 'r', 'pt', 'g', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'She', 'et', 'Range', 'E', 'val', 'u', 'ator', 'AST#variable_declarator#Left', 's', 're', '=', 'AST#method_invocation#Left', 'create', 'Ex', 'tern', 'She', 'et', 'Ref', 'E', 'val', 'u', 'ator', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'r', 'pt', 'g', '.', 'get', 'She', 'et', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#method_invocation#Left', 'r', 'pt', 'g', '.', 'get', 'Last', 'She', 'et', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#method_invocation#Left', 'r', 'pt', 'g', '.', 'get', 'External', 'Work', 'book', 'Number', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'L', 'azy', 'Ref', 'E', 'val', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'r', 'pt', 'g', '.', 'get', 'Row', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#method_invocation#Left', 'r', 'pt', 'g', '.', 'get', 'Column', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 's', 're', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Dat', 'as', 'et', 'Result', 'delete', 'Dat', 'as', 'et', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Dat', 'as', 'et', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Dat', 'as', 'et', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Start', 'Rel', 'ational', 'Database', 'Result', 'start', 'Rel', 'ational', 'Database', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Start', 'Rel', 'ational', 'Database', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Start', 'Rel', 'ational', 'Database', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Res', 'erved', 'Cache', 'N', 'odes', 'Off', 'er', 'ings', 'Result', 'desc', 'ribe', 'Res', 'erved', 'Cache', 'N', 'odes', 'Off', 'er', 'ings', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'desc', 'ribe', 'Res', 'erved', 'Cache', 'N', 'odes', 'Off', 'er', 'ings', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Desc', 'ribe', 'Res', 'erved', 'Cache', 'N', 'odes', 'Off', 'er', 'ings', 'Request', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'static', 'public', 'AST#modifiers#Right', 'double', 'pm', 't', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'double', 'r', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'n', 'per', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'double', 'p', 'v', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'double', 'f', 'v', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'type', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#unary_expression#Left', '-', 'r', 'AST#unary_expression#Right', '*', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'p', 'v', '*', 'AST#method_invocation#Left', 'Math', '.', 'p', 'ow', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '1', '+', 'r', 'AST#binary_expression#Right', ',', 'n', 'per', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', 'f', 'v', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', '/', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', '1', '+', 'AST#binary_expression#Left', 'r', '*', 'type', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '*', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'Math', '.', 'p', 'ow', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '1', '+', 'r', 'AST#binary_expression#Right', ',', 'n', 'per', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '-', '1', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Document', 'Versions', 'Result', 'desc', 'ribe', 'Document', 'Versions', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Document', 'Versions', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Document', 'Versions', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Pub', 'lishing', 'Dest', 'inations', 'Result', 'list', 'Pub', 'lishing', 'Dest', 'inations', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Pub', 'lishing', 'Dest', 'inations', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Pub', 'lishing', 'Dest', 'inations', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Delete', 'Account', 'Alias', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'account', 'Alias', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Account', 'Alias', 'AST#argument_list#Left', '(', 'account', 'Alias', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'AST#array_type#Left', 'long', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'grow', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'long', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'array', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'grow', 'AST#argument_list#Left', '(', 'array', ',', 'AST#binary_expression#Left', '1', '+', 'AST#field_access#Left', 'array', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'output', 'To', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'output', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'output', 'instance', 'of', 'List', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'output', 's', '.', 'output', 'To', 'String', 'AST#argument_list#Left', '(', 'AST#cast_expression#Left', '(', 'T', ')', 'output', 'AST#cast_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'T', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'output', 'List', '=', 'AST#cast_expression#Left', '(', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'T', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', ')', 'output', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'b', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'b', '.', 'append', 'AST#argument_list#Left', '(', "'", "['", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#method_invocation#Left', 'output', 'List', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'i', '>', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'b', '.', 'append', 'AST#argument_list#Left', '(', '",', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'b', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'output', 's', '.', 'output', 'To', 'String', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'output', 'List', '.', 'get', 'AST#argument_list#Left', '(', 'i', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'b', '.', 'append', 'AST#argument_list#Left', '(', "']", "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'b', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'not', 'ify', 'Delete', 'Cell', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Cell', 'cell', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', '_', 'book', 'E', 'val', 'u', 'ator', '.', 'not', 'ify', 'Delete', 'Cell', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'H', 'SS', 'FE', 'val', 'uation', 'Cell', 'AST#argument_list#Left', '(', 'AST#cast_expression#Left', '(', 'H', 'SS', 'FC', 'ell', ')', 'cell', 'AST#cast_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'Builder', 'replace', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'start', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'end', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'str', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'replace', '0', 'AST#argument_list#Left', '(', 'start', ',', 'end', ',', 'str', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Set', 'Id', 'entity', 'Pool', 'Configuration', 'Result', 'set', 'Id', 'entity', 'Pool', 'Configuration', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Set', 'Id', 'entity', 'Pool', 'Configuration', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Set', 'Id', 'entity', 'Pool', 'Configuration', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'double', 'k', 'th', 'Small', 'est', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'double', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'v', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'k', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'double', 'AST#variable_declarator#Left', 'r', '=', 'AST#field_access#Left', 'Double', '.', 'Na', 'N', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'index', '=', 'AST#binary_expression#Left', 'k', '-', '1', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'v', '!', '=', 'null', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'AST#field_access#Left', 'v', '.', 'length', 'AST#field_access#Right', '>', 'index', 'AST#binary_expression#Right', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'index', '>', '=', '0', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Ar', 'rays', '.', 'sort', 'AST#argument_list#Left', '(', 'v', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'r', '=', 'AST#array_access#Left', 'v', '[', 'index', ']', 'AST#array_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'r', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'long', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'o', '=', 'AST#binary_expression#Left', 'index', '>>>', '5', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'b', '=', 'AST#binary_expression#Left', 'index', '&', '31', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'shift', '=', 'AST#binary_expression#Left', 'b', '<<', '1', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'o', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'o', ']', 'AST#array_access#Right', '&', 'AST#unary_expression#Left', '~', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', '3', 'L', '<<', 'shift', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#unary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '|', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'value', '<<', 'shift', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'get', 'Children', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', 'null', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Children', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', '0', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', '"', '<', 'bo', 'olean', 'Ġoperation', "='", 'and', "'", '/>', '"', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'sb', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', '<', 'bo', 'olean', 'Ġoperation', "='", 'and', "'", '>"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'Query', 'Node', 'child', ':', 'AST#method_invocation#Left', 'get', 'Children', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'child', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '</', 'bo', 'olean', '>"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'sb', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'sum', 'Token', 'S', 'izes', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'from', 'I', 'x', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'to', 'I', 'x', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'result', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', 'from', 'I', 'x', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'to', 'I', 'x', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'result', '+=', 'AST#method_invocation#Left', 'AST#array_access#Left', '_', 'pt', 'gs', '[', 'i', ']', 'AST#array_access#Right', '.', 'get', 'Size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 'result', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Read', 'only', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'bo', 'olean', 'read', 'only', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'this', '.', 'read', 'only', 'AST#field_access#Right', '&&', 'AST#unary_expression#Left', '!', 'read', 'only', 'AST#unary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'State', 'Exception', 'AST#argument_list#Left', '(', '"', 'can', "'t", 'Ġalter', 'Ġread', 'only', 'ĠInter', 'val', 'Set', '"', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'read', 'only', 'AST#field_access#Right', '=', 'read', 'only', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'void', 'clear', 'Cons', 'uming', 'Cell', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Form', 'ula', 'Cell', 'Cache', 'Entry', 'c', 'ce', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', '_', 'consuming', 'C', 'ells', '.', 'remove', 'AST#argument_list#Left', '(', 'c', 'ce', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'State', 'Exception', 'AST#argument_list#Left', '(', '"', 'Spec', 'ified', 'Ġformula', 'Ġcell', 'Ġis', 'Ġnot', 'Ġconsumed', 'Ġby', 'Ġthis', 'Ġcell', '"', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'AST#marker_annotation#Left', '@', 'Override', 'AST#marker_annotation#Right', 'public', 'AST#modifiers#Right', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'E', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'sub', 'List', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'start', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'end', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#synchronized_statement#Left', 'syn', 'chron', 'ized', 'AST#parenthesized_expression#Left', '(', 'mut', 'ex', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'S', 'ynchron', 'ized', 'Random', 'Access', 'List', 'AST#type_arguments#Left', '<', 'E', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'list', '.', 'sub', 'List', 'AST#argument_list#Left', '(', 'start', ',', 'end', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'mut', 'ex', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#synchronized_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'File', 'Header', 'get', 'File', 'Header', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'file', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Attach', 'Load', 'Bal', 'ancers', 'Result', 'attach', 'Load', 'Bal', 'ancers', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Attach', 'Load', 'Bal', 'ancers', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Attach', 'Load', 'Bal', 'ancers', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'In', 'iti', 'ate', 'Job', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'account', 'Id', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'v', 'ault', 'Name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Job', 'Parameters', 'job', 'Parameters', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Account', 'Id', 'AST#argument_list#Left', '(', 'account', 'Id', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'V', 'ault', 'Name', 'AST#argument_list#Left', '(', 'v', 'ault', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Job', 'Parameters', 'AST#argument_list#Left', '(', 'job', 'Parameters', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', '"', 'SP', 'L', '"', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Re', 'place', 'able', 'Attribute', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'value', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Boo', 'lean', 'replace', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Name', 'AST#argument_list#Left', '(', 'name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Value', 'AST#argument_list#Left', '(', 'value', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Re', 'place', 'AST#argument_list#Left', '(', 'replace', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'void', 'add', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Index', 'able', 'Field', 'field', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'fields', '.', 'add', 'AST#argument_list#Left', '(', 'field', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Stack', 'Set', 'Result', 'delete', 'Stack', 'Set', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Stack', 'Set', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Stack', 'Set', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Rep', 'o', 'Build', 'Rule', 'List', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'cr', '"', ',', '"', '2016', '-', '06', '-', '07', '"', ',', '"', 'Get', 'Rep', 'o', 'Build', 'Rule', 'List', '"', ',', '"', 'cr', '"', ')', ';', 'AST#ERROR#Right', 'set', 'U', 'ri', 'Pattern', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', '"', '/', 're', 'pos', '/', '[', 'Rep', 'o', 'Names', 'pace', ']', '/', '[', 'Rep', 'o', 'Name', ']', '/', 'rules', '"', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Method', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Method', 'Type', '.', 'GET', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'S', 'parse', 'Array', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'initial', 'Cap', 'acity', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'initial', 'Cap', 'acity', '=', 'AST#method_invocation#Left', 'Array', 'Ut', 'ils', '.', 'ide', 'al', 'Int', 'Array', 'Size', 'AST#argument_list#Left', '(', 'initial', 'Cap', 'acity', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'm', 'Keys', '=', 'AST#array_creation_expression#Left', 'new', 'int', 'AST#dimensions_expr#Left', '[', 'initial', 'Cap', 'acity', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'm', 'Values', '=', 'AST#array_creation_expression#Left', 'new', 'Object', 'AST#dimensions_expr#Left', '[', 'initial', 'Cap', 'acity', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'm', 'Size', '=', '0', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Inv', 'oke', 'Service', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'indust', 'ry', '-', 'brain', '"', ',', '"', '2018', '-', '07', '-', '12', '"', ',', '"', 'Inv', 'oke', 'Service', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Method', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Method', 'Type', '.', 'POST', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Al', 'bum', 'Photos', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'Cloud', 'Photo', '"', ',', '"', '2017', '-', '07', '-', '11', '"', ',', '"', 'List', 'Al', 'bum', 'Photos', '"', ',', '"', 'cloud', 'photo', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Prot', 'ocol', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Prot', 'ocol', 'Type', '.', 'HT', 'TPS', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'has', 'Previous', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'link', '!', '=', 'AST#field_access#Left', 'list', '.', 'void', 'Link', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'H', 'sm', 'Configuration', 'Result', 'delete', 'H', 'sm', 'Configuration', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'H', 'sm', 'Configuration', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'H', 'sm', 'Configuration', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Create', 'Load', 'Bal', 'ancer', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'load', 'Bal', 'ancer', 'Name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Load', 'Bal', 'ancer', 'Name', 'AST#argument_list#Left', '(', 'load', 'Bal', 'ancer', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'get', 'User', 'Info', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'dec', 'ode', 'AST#argument_list#Left', '(', 'user', 'Info', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Tag', 'Att', 'end', 'ee', 'Result', 'tag', 'Att', 'end', 'ee', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Tag', 'Att', 'end', 'ee', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Tag', 'Att', 'end', 'ee', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'get', 'Ref', 'Name', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'name', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Sp', 'an', 'Near', 'Query', 'build', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Sp', 'an', 'Near', 'Query', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'cl', 'a', 'uses', '.', 'to', 'Array', 'AST#argument_list#Left', '(', 'AST#array_creation_expression#Left', 'new', 'Sp', 'an', 'Query', 'AST#dimensions_expr#Left', '[', 'AST#method_invocation#Left', 'cl', 'a', 'uses', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'sl', 'op', ',', 'ordered', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'is', 'Sub', 'Total', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'row', 'Index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'column', 'Index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'DB', 'Pro', 'x', 'ies', 'Result', 'desc', 'ribe', 'DB', 'Pro', 'x', 'ies', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'DB', 'Pro', 'x', 'ies', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'DB', 'Pro', 'x', 'ies', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Voice', 'Connector', 'Proxy', 'Result', 'get', 'Voice', 'Connector', 'Proxy', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Voice', 'Connector', 'Proxy', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Voice', 'Connector', 'Proxy', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Window', 'Cache', 'Config', 'from', 'Config', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Config', 'rc', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'P', 'acked', 'G', 'it', 'Use', 'Strong', 'Ref', 's', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'rc', '.', 'get', 'Boo', 'lean', 'AST#argument_list#Left', '(', 'CON', 'FIG', '_', 'C', 'ORE', '_', 'S', 'ECTION', ',', 'CON', 'FIG', '_', 'KEY', '_', 'P', 'ACK', 'ED', '_', 'G', 'IT', '_', 'USE', '_', 'STR', 'ONG', 'RE', 'FS', ',', 'AST#method_invocation#Left', 'is', 'P', 'acked', 'G', 'it', 'Use', 'Strong', 'Ref', 's', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'P', 'acked', 'G', 'it', 'Open', 'Files', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'rc', '.', 'get', 'Int', 'AST#argument_list#Left', '(', 'CON', 'FIG', '_', 'C', 'ORE', '_', 'S', 'ECTION', ',', 'null', ',', 'CON', 'FIG', '_', 'KEY', '_', 'P', 'ACK', 'ED', '_', 'G', 'IT', '_', 'OP', 'EN', 'FIL', 'ES', ',', 'AST#method_invocation#Left', 'get', 'P', 'acked', 'G', 'it', 'Open', 'Files', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'P', 'acked', 'G', 'it', 'Limit', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'rc', '.', 'get', 'Long', 'AST#argument_list#Left', '(', 'CON', 'FIG', '_', 'C', 'ORE', '_', 'S', 'ECTION', ',', 'null', ',', 'CON', 'FIG', '_', 'KEY', '_', 'P', 'ACK', 'ED', '_', 'G', 'IT', '_', 'L', 'IM', 'IT', ',', 'AST#method_invocation#Left', 'get', 'P', 'acked', 'G', 'it', 'Limit', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'P', 'acked', 'G', 'it', 'Window', 'Size', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'rc', '.', 'get', 'Int', 'AST#argument_list#Left', '(', 'CON', 'FIG', '_', 'C', 'ORE', '_', 'S', 'ECTION', ',', 'null', ',', 'CON', 'FIG', '_', 'KEY', '_', 'P', 'ACK', 'ED', '_', 'G', 'IT', '_', 'WIND', 'OW', 'SIZE', ',', 'AST#method_invocation#Left', 'get', 'P', 'acked', 'G', 'it', 'Window', 'Size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'P', 'acked', 'G', 'it', 'MM', 'AP', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'rc', '.', 'get', 'Boo', 'lean', 'AST#argument_list#Left', '(', 'CON', 'FIG', '_', 'C', 'ORE', '_', 'S', 'ECTION', ',', 'null', ',', 'CON', 'FIG', '_', 'KEY', '_', 'P', 'ACK', 'ED', '_', 'G', 'IT', '_', 'MM', 'AP', ',', 'AST#method_invocation#Left', 'is', 'P', 'acked', 'G', 'it', 'MM', 'AP', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Delta', 'Base', 'Cache', 'Limit', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'rc', '.', 'get', 'Int', 'AST#argument_list#Left', '(', 'CON', 'FIG', '_', 'C', 'ORE', '_', 'S', 'ECTION', ',', 'null', ',', 'CON', 'FIG', '_', 'KEY', '_', 'D', 'EL', 'TA', '_', 'B', 'ASE', '_', 'C', 'AC', 'HE', '_', 'L', 'IM', 'IT', ',', 'AST#method_invocation#Left', 'get', 'Delta', 'Base', 'Cache', 'Limit', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'long', 'AST#variable_declarator#Left', 'max', 'Mem', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'Runtime', '.', 'get', 'Runtime', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'max', 'Memory', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'long', 'AST#variable_declarator#Left', 's', 'ft', '=', 'AST#method_invocation#Left', 'rc', '.', 'get', 'Long', 'AST#argument_list#Left', '(', 'CON', 'FIG', '_', 'C', 'ORE', '_', 'S', 'ECTION', ',', 'null', ',', 'CON', 'FIG', '_', 'KEY', '_', 'ST', 'REAM', '_', 'FILE', '_', 'TR', 'ESH', 'OLD', ',', 'AST#method_invocation#Left', 'get', 'Stream', 'File', 'Th', 'reshold', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 's', 'ft', '=', 'AST#method_invocation#Left', 'Math', '.', 'min', 'AST#argument_list#Left', '(', 's', 'ft', ',', 'AST#binary_expression#Left', 'max', 'Mem', '/', '4', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 's', 'ft', '=', 'AST#method_invocation#Left', 'Math', '.', 'min', 'AST#argument_list#Left', '(', 's', 'ft', ',', 'AST#field_access#Left', 'Integer', '.', 'MAX', '_', 'VALUE', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Stream', 'File', 'Th', 'reshold', 'AST#argument_list#Left', '(', 'AST#cast_expression#Left', '(', 'int', ')', 's', 'ft', 'AST#cast_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'Date', 'get', 'Java', 'Date', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'double', 'date', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'get', 'Java', 'Date', 'AST#argument_list#Left', '(', 'date', ',', 'false', ',', 'null', ',', 'false', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Start', 'Person', 'Tr', 'acking', 'Result', 'start', 'Person', 'Tr', 'acking', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Start', 'Person', 'Tr', 'acking', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Start', 'Person', 'Tr', 'acking', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'AST#marker_annotation#Left', '@', 'Override', 'AST#marker_annotation#Right', 'public', 'AST#modifiers#Right', 'int', 'size', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'total', 'Size', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Route', 'Result', 'get', 'Route', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Route', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Route', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Cl', 'uster', 'Result', 'delete', 'Cl', 'uster', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Cl', 'uster', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Cl', 'uster', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'buffer', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"[', 'M', 'MS', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'add', 'Menu', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Integer', '.', 'to', 'H', 'ex', 'String', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Add', 'Menu', 'Count', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'del', 'Menu', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Integer', '.', 'to', 'H', 'ex', 'String', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Del', 'Menu', 'Count', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', '[/', 'M', 'MS', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'buffer', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'File', 'Based', 'Config', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Config', 'base', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'File', 'cfg', 'Location', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'FS', 'fs', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'base', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'config', 'File', '=', 'cfg', 'Location', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'fs', 'AST#field_access#Right', '=', 'fs', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'snap', 'shot', 'AST#field_access#Right', '=', 'AST#field_access#Left', 'File', 'Snap', 'shot', '.', 'DIR', 'TY', 'AST#field_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'hash', 'AST#field_access#Right', '=', 'AST#method_invocation#Left', 'Object', 'Id', '.', 'zero', 'Id', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'follow', 'ing', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'pos', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'pos', '<', 'AST#method_invocation#Left', 'text', '.', 'get', 'Begin', 'Index', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'pos', '>', 'AST#method_invocation#Left', 'text', '.', 'get', 'End', 'Index', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', '"', 'offset', 'Ġout', 'Ġof', 'Ġbounds', '"', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'else', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', '0', '==', 'AST#field_access#Left', 'sent', 'ence', 'St', 'arts', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'text', '.', 'set', 'Index', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'text', '.', 'get', 'Begin', 'Index', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'D', 'ONE', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'pos', '>', '=', 'AST#array_access#Left', 'sent', 'ence', 'St', 'arts', '[', 'AST#binary_expression#Left', 'AST#field_access#Left', 'sent', 'ence', 'St', 'arts', '.', 'length', 'AST#field_access#Right', '-', '1', 'AST#binary_expression#Right', ']', 'AST#array_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'text', '.', 'set', 'Index', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'text', '.', 'get', 'End', 'Index', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'current', 'Sent', 'ence', '=', 'AST#binary_expression#Left', 'AST#field_access#Left', 'sent', 'ence', 'St', 'arts', '.', 'length', 'AST#field_access#Right', '-', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'D', 'ONE', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'current', 'Sent', 'ence', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'sent', 'ence', 'St', 'arts', '.', 'length', 'AST#field_access#Right', '-', '1', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '/', '2', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'move', 'To', 'Sent', 'ence', 'At', 'AST#argument_list#Left', '(', 'pos', ',', '0', ',', 'AST#binary_expression#Left', 'AST#field_access#Left', 'sent', 'ence', 'St', 'arts', '.', 'length', 'AST#field_access#Right', '-', '2', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'text', '.', 'set', 'Index', 'AST#argument_list#Left', '(', 'AST#array_access#Left', 'sent', 'ence', 'St', 'arts', '[', 'AST#update_expression#Left', '++', 'current', 'Sent', 'ence', 'AST#update_expression#Right', ']', 'AST#array_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'current', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Parameter', 'Group', 'Result', 'update', 'Parameter', 'Group', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Parameter', 'Group', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Parameter', 'Group', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Series', 'Chart', 'Group', 'Index', 'Record', 'clone', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'copy', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'double', 'cal', 'c', 'Distance', 'From', 'Er', 'r', 'P', 'ct', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Shape', 'shape', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'double', 'dist', 'Er', 'r', 'P', 'ct', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Sp', 'atial', 'Context', 'ctx', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'dist', 'Er', 'r', 'P', 'ct', '<', '0', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'dist', 'Er', 'r', 'P', 'ct', '>', '0', '.', '5', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'dist', 'Er', 'r', 'P', 'ct', 'Ġ"', '+', 'dist', 'Er', 'r', 'P', 'ct', 'AST#binary_expression#Right', '+', '"', 'Ġmust', 'Ġbe', 'Ġbetween', 'Ġ[', '0', 'Ġto', 'Ġ0', '.', '5', ']"', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'dist', 'Er', 'r', 'P', 'ct', '==', '0', 'AST#binary_expression#Right', '||', 'AST#instanceof_expression#Left', 'shape', 'instance', 'of', 'Point', 'AST#instanceof_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', '0', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'Rect', 'angle', 'AST#variable_declarator#Left', 'b', 'box', '=', 'AST#method_invocation#Left', 'shape', '.', 'get', 'B', 'ounding', 'Box', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Point', 'AST#variable_declarator#Left', 'ctr', '=', 'AST#method_invocation#Left', 'b', 'box', '.', 'get', 'Center', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'double', 'AST#variable_declarator#Left', 'y', '=', 'AST#parenthesized_expression#Left', '(', 'AST#ternary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'ctr', '.', 'get', 'Y', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '>', '=', '0', 'AST#binary_expression#Right', '?', 'AST#method_invocation#Left', 'b', 'box', '.', 'get', 'Max', 'Y', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ':', 'AST#method_invocation#Left', 'b', 'box', '.', 'get', 'Min', 'Y', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#ternary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'double', 'AST#variable_declarator#Left', 'di', 'agonal', 'Dist', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'ctx', '.', 'get', 'Dist', 'Cal', 'c', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'distance', 'AST#argument_list#Left', '(', 'ctr', ',', 'AST#method_invocation#Left', 'b', 'box', '.', 'get', 'Max', 'X', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'y', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'di', 'agonal', 'Dist', '*', 'dist', 'Er', 'r', 'P', 'ct', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'code', 'Point', 'At', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'index', '<', '0', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'index', '>', '=', 'count', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#method_invocation#Left', 'index', 'And', 'Length', 'AST#argument_list#Left', '(', 'index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Character', '.', 'code', 'Point', 'At', 'AST#argument_list#Left', '(', 'value', ',', 'index', ',', 'count', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Password', 'Ver', 'ifier', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'password', 'Ver', 'ifier', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'password', 'Ver', 'ifier', 'AST#field_access#Right', '=', 'password', 'Ver', 'ifier', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'List', 'Vaults', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'account', 'Id', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Account', 'Id', 'AST#argument_list#Left', '(', 'account', 'Id', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Squ', 'ash', 'Message', 'Form', 'atter', 'AST#ERROR#Left', '(', ')', '{', 'AST#ERROR#Right', 'AST#variable_declarator#Left', 'date', 'Form', 'atter', '=', 'AST#object_creation_expression#Left', 'new', 'G', 'it', 'Date', 'Form', 'atter', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Format', '.', 'DE', 'FAULT', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Video', 'Cover', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'Cloud', 'Photo', '"', ',', '"', '2017', '-', '07', '-', '11', '"', ',', '"', 'Get', 'Video', 'Cover', '"', ',', '"', 'cloud', 'photo', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Prot', 'ocol', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Prot', 'ocol', 'Type', '.', 'HT', 'TPS', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'last', 'Index', 'Of', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'object', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'pos', '=', 'size', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'Link', 'AST#type_arguments#Left', '<', 'E', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'link', '=', 'AST#field_access#Left', 'void', 'Link', '.', 'pre', 'vious', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'object', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#while_statement#Left', 'while', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'link', '!', '=', 'void', 'Link', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'pos', '--', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'object', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'link', '.', 'data', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'pos', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'link', '=', 'AST#field_access#Left', 'link', '.', 'pre', 'vious', 'AST#field_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#while_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#while_statement#Left', 'while', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'link', '!', '=', 'void', 'Link', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'pos', '--', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'link', '.', 'data', 'AST#field_access#Right', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'pos', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'link', '=', 'AST#field_access#Left', 'link', '.', 'pre', 'vious', 'AST#field_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#while_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Spot', 'Fle', 'et', 'Requ', 'ests', 'Result', 'desc', 'ribe', 'Spot', 'Fle', 'et', 'Requ', 'ests', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Spot', 'Fle', 'et', 'Requ', 'ests', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Spot', 'Fle', 'et', 'Requ', 'ests', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Index', 'F', 'aces', 'Result', 'index', 'F', 'aces', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Index', 'F', 'aces', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Index', 'F', 'aces', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Rule', 'Based', 'Break', 'Iterator', 'get', 'Break', 'Iterator', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'script', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#switch_expression#Left', 'switch', 'AST#parenthesized_expression#Left', '(', 'script', ')', 'AST#parenthesized_expression#Right', 'AST#switch_block#Left', '{', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'AST#field_access#Left', 'US', 'cript', '.', 'J', 'AP', 'AN', 'ESE', 'AST#field_access#Right', 'AST#switch_label#Right', ':', 'AST#return_statement#Left', 'return', 'AST#cast_expression#Left', '(', 'Rule', 'Based', 'Break', 'Iterator', ')', 'AST#method_invocation#Left', 'c', 'j', 'k', 'Break', 'Iterator', '.', 'clone', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', ';', 'AST#return_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'AST#field_access#Left', 'US', 'cript', '.', 'MY', 'AN', 'MAR', 'AST#field_access#Right', 'AST#switch_label#Right', ':', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'my', 'anmar', 'As', 'Words', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#cast_expression#Left', '(', 'Rule', 'Based', 'Break', 'Iterator', ')', 'AST#method_invocation#Left', 'default', 'Break', 'Iterator', '.', 'clone', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#cast_expression#Left', '(', 'Rule', 'Based', 'Break', 'Iterator', ')', 'AST#method_invocation#Left', 'my', 'anmar', 'Sy', 'll', 'able', 'Iterator', '.', 'clone', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'default', ':', 'AST#return_statement#Left', 'return', 'AST#cast_expression#Left', '(', 'Rule', 'Based', 'Break', 'Iterator', ')', 'AST#method_invocation#Left', 'default', 'Break', 'Iterator', '.', 'clone', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', ';', 'AST#return_statement#Right', 'AST#switch_block_statement_group#Right', '}', 'AST#switch_block#Right', 'AST#switch_expression#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'b', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'b', '.', 'append', 'AST#argument_list#Left', '(', '"[', 'DC', 'ON', 'REF', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'b', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'ref', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'b', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'first', 'row', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'first', 'Row', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'b', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'last', 'row', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'last', 'Row', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'b', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'first', 'col', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'first', 'Col', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'b', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'last', 'col', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'last', 'Col', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'b', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'c', 'ch', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'char', 'Count', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'b', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'st', 'File', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'b', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'h', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'char', 'Type', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'b', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'r', 'gb', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Read', 'able', 'Path', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'b', '.', 'append', 'AST#argument_list#Left', '(', '"', '[/', 'DC', 'ON', 'REF', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'b', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'get', 'P', 'acked', 'G', 'it', 'Open', 'Files', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'packed', 'G', 'it', 'Open', 'Files', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'buffer', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"[', 'FE', 'ATURE', 'ĠHEAD', 'ER', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', '[/', 'FE', 'ATURE', 'ĠHEAD', 'ER', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'buffer', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'get', 'To', 'Un', 'ic', 'ode', 'LE', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'string', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'string', '.', 'get', 'Bytes', 'AST#argument_list#Left', '(', 'UTF', '16', 'LE', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'get', 'Foot', 'er', 'L', 'ines', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'key', 'Name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'get', 'Foot', 'er', 'L', 'ines', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Foot', 'er', 'Key', 'AST#argument_list#Left', '(', 'key', 'Name', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'ref', 'resh', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'super', '.', 'ref', 'resh', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'clear', 'References', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'float', 'get', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'check', 'Index', 'AST#argument_list#Left', '(', 'index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'byte', 'Buffer', '.', 'get', 'Float', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'index', '*', 'AST#field_access#Left', 'Size', 'Of', '.', 'FL', 'O', 'AT', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Det', 'ector', 'Result', 'delete', 'Det', 'ector', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Det', 'ector', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Det', 'ector', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#array_type#Left', 'int', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'grow', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#assert_statement#Left', 'assert', 'AST#binary_expression#Left', 'bytes', 'Start', '!', '=', 'null', 'AST#binary_expression#Right', ';', 'AST#assert_statement#Right', 'AST#return_statement#Left', 'return', 'AST#assignment_expression#Left', 'bytes', 'Start', '=', 'AST#method_invocation#Left', 'Array', 'Ut', 'il', '.', 'grow', 'AST#argument_list#Left', '(', 'bytes', 'Start', ',', 'AST#binary_expression#Left', 'AST#field_access#Left', 'bytes', 'Start', '.', 'length', 'AST#field_access#Right', '+', '1', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Ex', 'clusions', 'Result', 'list', 'Ex', 'clusions', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Ex', 'clusions', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Ex', 'clusions', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'Sp', 'atial', 'Str', 'ategy', 'get', 'Sp', 'atial', 'Str', 'ategy', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'round', 'Number', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Sp', 'atial', 'Str', 'ategy', 'AST#variable_declarator#Left', 'result', '=', 'AST#method_invocation#Left', 'sp', 'atial', 'Str', 'ategy', 'Cache', '.', 'get', 'AST#argument_list#Left', '(', 'round', 'Number', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'result', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'State', 'Exception', 'AST#argument_list#Left', '(', '"', 'Str', 'ategy', 'Ġshould', 'Ġhave', 'Ġbeen', 'Ġinit', "'", 'ed', 'Ġby', 'ĠSp', 'atial', 'Doc', 'Maker', 'Ġby', 'Ġnow', '"', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'result', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'DB', 'Cl', 'uster', 'rest', 'ore', 'DB', 'Cl', 'uster', 'To', 'Point', 'In', 'Time', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Rest', 'ore', 'DB', 'Cl', 'uster', 'To', 'Point', 'In', 'Time', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Rest', 'ore', 'DB', 'Cl', 'uster', 'To', 'Point', 'In', 'Time', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'serial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Output', 'out', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'field', '_', '1', '_', 'category', 'Data', 'Type', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'field', '_', '2', '_', 'values', 'Data', 'Type', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'field', '_', '3', '_', 'num', 'C', 'ategories', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'field', '_', '4', '_', 'num', 'Values', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'field', '_', '5', '_', 'bub', 'ble', 'Series', 'Type', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'field', '_', '6', '_', 'num', 'B', 'ub', 'ble', 'Values', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Post', 'Agent', 'Profile', 'Result', 'post', 'Agent', 'Profile', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Post', 'Agent', 'Profile', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Post', 'Agent', 'Profile', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Par', 'se', 'Tree', 'Pattern', 'comp', 'ile', 'Par', 'se', 'Tree', 'Pattern', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'pattern', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'pattern', 'Rule', 'Index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'get', 'Token', 'Stream', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Token', 'Source', 'AST#variable_declarator#Left', 'token', 'Source', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Token', 'Stream', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Token', 'Source', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'token', 'Source', 'instance', 'of', 'Lex', 'er', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Lex', 'er', 'AST#variable_declarator#Left', 'lex', 'er', '=', 'AST#cast_expression#Left', '(', 'Lex', 'er', ')', 'token', 'Source', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'comp', 'ile', 'Par', 'se', 'Tree', 'Pattern', 'AST#argument_list#Left', '(', 'pattern', ',', 'pattern', 'Rule', 'Index', ',', 'lex', 'er', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Un', 'supported', 'Operation', 'Exception', 'AST#argument_list#Left', '(', '"', 'Parser', 'Ġcan', "'t", 'Ġdiscover', 'Ġa', 'Ġlex', 'er', 'Ġto', 'Ġuse', '"', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Back', 'track', 'DB', 'Cl', 'uster', 'Result', 'back', 'track', 'DB', 'Cl', 'uster', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Back', 'track', 'DB', 'Cl', 'uster', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Back', 'track', 'DB', 'Cl', 'uster', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'get', 'Name', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'str', 'ategy', 'Name', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'copy', 'To', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'b', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'o', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'format', 'H', 'ex', 'Byte', 'AST#argument_list#Left', '(', 'b', ',', 'AST#binary_expression#Left', 'o', '+', '0', 'AST#binary_expression#Right', ',', 'w', '1', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'format', 'H', 'ex', 'Byte', 'AST#argument_list#Left', '(', 'b', ',', 'AST#binary_expression#Left', 'o', '+', '8', 'AST#binary_expression#Right', ',', 'w', '2', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'format', 'H', 'ex', 'Byte', 'AST#argument_list#Left', '(', 'b', ',', 'AST#binary_expression#Left', 'o', '+', '16', 'AST#binary_expression#Right', ',', 'w', '3', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'format', 'H', 'ex', 'Byte', 'AST#argument_list#Left', '(', 'b', ',', 'AST#binary_expression#Left', 'o', '+', '24', 'AST#binary_expression#Right', ',', 'w', '4', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'format', 'H', 'ex', 'Byte', 'AST#argument_list#Left', '(', 'b', ',', 'AST#binary_expression#Left', 'o', '+', '32', 'AST#binary_expression#Right', ',', 'w', '5', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'final', 'AST#modifiers#Right', 'Int', 'List', 'line', 'Map', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'buf', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'ptr', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'end', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Int', 'List', 'AST#variable_declarator#Left', 'map', '=', 'AST#object_creation_expression#Left', 'new', 'Int', 'List', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'end', '-', 'ptr', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '/', '36', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'map', '.', 'fill', 'To', 'AST#argument_list#Left', '(', '1', ',', 'AST#field_access#Left', 'Integer', '.', 'MIN', '_', 'VALUE', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#for_statement#Left', 'for', '(', ';', 'AST#binary_expression#Left', 'ptr', '<', 'end', 'AST#binary_expression#Right', ';', 'AST#assignment_expression#Left', 'ptr', '=', 'AST#method_invocation#Left', 'next', 'L', 'F', 'AST#argument_list#Left', '(', 'buf', ',', 'ptr', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'map', '.', 'add', 'AST#argument_list#Left', '(', 'ptr', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'map', '.', 'add', 'AST#argument_list#Left', '(', 'end', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'map', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#generic_type#Left', 'Set', 'AST#type_arguments#Left', '<', 'Object', 'Id', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'get', 'Additional', 'H', 'aves', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Col', 'lections', '.', 'empty', 'Set', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'syn', 'chron', 'ized', 'AST#modifiers#Right', 'long', 'ram', 'Bytes', 'Used', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'long', 'AST#variable_declarator#Left', 'size', 'In', 'Bytes', '=', 'AST#binary_expression#Left', 'B', 'ASE', '_', 'RAM', '_', 'BY', 'T', 'ES', '_', 'US', 'ED', '+', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'fields', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '*', '2', 'AST#binary_expression#Right', '*', 'AST#field_access#Left', 'Ram', 'Usage', 'Est', 'im', 'ator', '.', 'NUM', '_', 'BY', 'T', 'ES', '_', 'OB', 'JECT', '_', 'REF', 'AST#field_access#Right', 'AST#binary_expression#Right', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'Simple', 'Text', 'Ter', 'ms', 'simple', 'Text', 'Ter', 'ms', ':', 'AST#method_invocation#Left', 'terms', 'Cache', '.', 'values', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'size', 'In', 'Bytes', '+=', 'AST#ternary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'simple', 'Text', 'Ter', 'ms', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '?', 'AST#method_invocation#Left', 'simple', 'Text', 'Ter', 'ms', '.', 'ram', 'Bytes', 'Used', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ':', '0', 'AST#ternary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#return_statement#Left', 'return', 'size', 'In', 'Bytes', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'X', 'ml', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'tab', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'builder', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'builder', '.', 'append', 'AST#argument_list#Left', '(', 'tab', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '<', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Record', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '">', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'Esc', 'her', 'Record', 'es', 'cher', 'Record', ':', 'AST#method_invocation#Left', 'get', 'Esc', 'her', 'Rec', 'ords', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'builder', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'es', 'cher', 'Record', '.', 'to', 'X', 'ml', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'tab', '+', '"', '\\', 't', '"', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'builder', '.', 'append', 'AST#argument_list#Left', '(', 'tab', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '</', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Record', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '">', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'builder', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Token', 'Stream', 'create', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Token', 'Stream', 'input', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Gal', 'ician', 'Min', 'imal', 'St', 'em', 'Filter', 'AST#argument_list#Left', '(', 'input', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'r', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Comm', 'it', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', '"', '=', '{\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', '"', 'tree', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', 'AST#ternary_expression#Left', 'AST#binary_expression#Left', 'tree', 'Id', '!', '=', 'null', 'AST#binary_expression#Right', '?', 'AST#method_invocation#Left', 'tree', 'Id', '.', 'name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ':', '"', 'NOT', '_', 'SET', '"', 'AST#ternary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'Object', 'Id', 'p', ':', 'parent', 'Id', 's', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', '"', 'parent', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'p', '.', 'name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', '"', 'author', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', 'AST#ternary_expression#Left', 'AST#binary_expression#Left', 'author', '!', '=', 'null', 'AST#binary_expression#Right', '?', 'AST#method_invocation#Left', 'author', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ':', '"', 'NOT', '_', 'SET', '"', 'AST#ternary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', '"', 'comm', 'itter', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', 'AST#ternary_expression#Left', 'AST#binary_expression#Left', 'comm', 'itter', '!', '=', 'null', 'AST#binary_expression#Right', '?', 'AST#method_invocation#Left', 'comm', 'itter', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ':', '"', 'NOT', '_', 'SET', '"', 'AST#ternary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', '"', 'g', 'pg', 'Sign', 'ature', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', 'AST#ternary_expression#Left', 'AST#binary_expression#Left', 'g', 'pg', 'Sign', 'ature', '!', '=', 'null', 'AST#binary_expression#Right', '?', 'AST#method_invocation#Left', 'g', 'pg', 'Sign', 'ature', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ':', '"', 'NOT', '_', 'SET', '"', 'AST#ternary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'enc', 'oding', '!', '=', 'null', 'AST#binary_expression#Right', '&&', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'References', '.', 'is', 'Same', 'Object', 'AST#argument_list#Left', '(', 'enc', 'oding', ',', 'UTF', '_', '8', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', '"', 'enc', 'oding', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'enc', 'oding', '.', 'name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', 'AST#ternary_expression#Left', 'AST#binary_expression#Left', 'message', '!', '=', 'null', 'AST#binary_expression#Right', '?', 'message', ':', '""', 'AST#ternary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', '"}', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'r', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Ind', 'ic', 'Normal', 'ization', 'Filter', 'Factory', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'Map', 'AST#type_arguments#Left', '<', 'String', ',', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'args', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'args', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'args', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'Unknown', 'Ġparameters', ':', 'Ġ"', '+', 'args', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Option', 'Group', 'create', 'Option', 'Group', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Option', 'Group', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Option', 'Group', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Ass', 'ociate', 'Member', 'Account', 'Result', 'ass', 'ociate', 'Member', 'Account', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Ass', 'ociate', 'Member', 'Account', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Ass', 'ociate', 'Member', 'Account', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'run', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'do', 'Ref', 'resh', 'Progress', 'AST#argument_list#Left', '(', 'm', 'Id', ',', 'm', 'Progress', ',', 'm', 'From', 'User', ',', 'true', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'm', 'Ref', 'resh', 'Progress', 'Run', 'n', 'able', '=', 'this', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Set', 'Ter', 'mination', 'Prot', 'ection', 'Result', 'set', 'Ter', 'mination', 'Prot', 'ection', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Set', 'Ter', 'mination', 'Prot', 'ection', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Set', 'Ter', 'mination', 'Prot', 'ection', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'get', 'Error', 'Header', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Rec', 'ogn', 'ition', 'Exception', 'e', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'line', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'e', '.', 'get', 'Off', 'ending', 'Token', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Line', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'char', 'Position', 'In', 'Line', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'e', '.', 'get', 'Off', 'ending', 'Token', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Char', 'Position', 'In', 'Line', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'line', 'Ġ"', '+', 'line', 'AST#binary_expression#Right', '+', '":"', 'AST#binary_expression#Right', '+', 'char', 'Position', 'In', 'Line', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Char', 'Buffer', 'as', 'Read', 'Only', 'Buffer', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Char', 'To', 'Byte', 'Buffer', 'Adapter', 'AST#variable_declarator#Left', 'buf', '=', 'AST#object_creation_expression#Left', 'new', 'Char', 'To', 'Byte', 'Buffer', 'Adapter', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'byte', 'Buffer', '.', 'as', 'Read', 'Only', 'Buffer', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'buf', '.', 'limit', 'AST#field_access#Right', '=', 'limit', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'buf', '.', 'position', 'AST#field_access#Right', '=', 'position', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'buf', '.', 'mark', 'AST#field_access#Right', '=', 'mark', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'AST#field_access#Left', 'buf', '.', 'byte', 'Buffer', 'AST#field_access#Right', '.', 'order', 'AST#field_access#Right', '=', 'AST#field_access#Left', 'byte', 'Buffer', '.', 'order', 'AST#field_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'buf', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Stop', 'Sent', 'iment', 'Det', 'ection', 'Job', 'Result', 'stop', 'Sent', 'iment', 'Det', 'ection', 'Job', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Stop', 'Sent', 'iment', 'Det', 'ection', 'Job', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Stop', 'Sent', 'iment', 'Det', 'ection', 'Job', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#generic_type#Left', 'Object', 'Id', 'Sub', 'class', 'Map', 'AST#type_arguments#Left', '<', 'Object', 'Id', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'get', 'New', 'Object', 'Id', 's', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'new', 'Object', 'Id', 's', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'new', 'Object', 'Id', 's', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Object', 'Id', 'Sub', 'class', 'Map', 'AST#type_arguments#Left', '<', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'clear', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'hash', '=', 'AST#method_invocation#Left', 'hash', 'AST#argument_list#Left', '(', 'AST#array_creation_expression#Left', 'new', 'byte', 'AST#dimensions_expr#Left', '[', '0', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'super', '.', 'clear', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'reset', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', '{', 'AST#ERROR#Right', 'AST#synchronized_statement#Left', 'syn', 'chron', 'ized', 'AST#parenthesized_expression#Left', '(', 'lock', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'check', 'Not', 'Cl', 'osed', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'mark', '==', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'IO', 'Exception', 'AST#argument_list#Left', '(', '"', 'Invalid', 'Ġmark', '"', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'pos', '=', 'mark', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#synchronized_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Ref', 'Error', 'P', 'tg', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Input', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '1', '_', 'res', 'erved', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Int', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'S', 'usp', 'end', 'Game', 'Server', 'Group', 'Result', 'susp', 'end', 'Game', 'Server', 'Group', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'S', 'usp', 'end', 'Game', 'Server', 'Group', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'S', 'usp', 'end', 'Game', 'Server', 'Group', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'Value', 'E', 'val', 'evaluate', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'Value', 'E', 'val', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'args', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'src', 'Row', 'Index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'src', 'Column', 'Index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'args', '.', 'length', 'AST#field_access#Right', '!', '=', '3', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Error', 'E', 'val', '.', 'VALUE', '_', 'IN', 'VAL', 'ID', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'evaluate', 'AST#argument_list#Left', '(', 'src', 'Row', 'Index', ',', 'src', 'Column', 'Index', ',', 'AST#array_access#Left', 'args', '[', '0', ']', 'AST#array_access#Right', ',', 'AST#array_access#Left', 'args', '[', '1', ']', 'AST#array_access#Right', ',', 'AST#array_access#Left', 'args', '[', '2', ']', 'AST#array_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Rep', 'o', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'cr', '"', ',', '"', '2016', '-', '06', '-', '07', '"', ',', '"', 'Get', 'Rep', 'o', '"', ',', '"', 'cr', '"', ')', ';', 'AST#ERROR#Right', 'set', 'U', 'ri', 'Pattern', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', '"', '/', 're', 'pos', '/', '[', 'Rep', 'o', 'Names', 'pace', ']', '/', '[', 'Rep', 'o', 'Name', ']"', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Method', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Method', 'Type', '.', 'GET', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Date', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Date', 'date', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'date', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Date', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Date', 'Tools', '.', 'date', 'To', 'String', 'AST#argument_list#Left', '(', 'date', ',', 'AST#field_access#Left', 'AST#field_access#Left', 'Date', 'Tools', '.', 'Res', 'olution', 'AST#field_access#Right', '.', 'SEC', 'OND', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'date', 'AST#field_access#Right', '=', 'null', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Token', 'Stream', 'create', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Token', 'Stream', 'input', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'German', 'Min', 'imal', 'St', 'em', 'Filter', 'AST#argument_list#Left', '(', 'input', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#array_type#Left', 'Object', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'to', 'Array', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'a', '.', 'clone', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'write', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'buffer', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'len', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Ar', 'rays', '.', 'check', 'Offset', 'And', 'Count', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'buffer', '.', 'length', 'AST#field_access#Right', ',', 'offset', ',', 'len', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#synchronized_statement#Left', 'syn', 'chron', 'ized', 'AST#parenthesized_expression#Left', '(', 'lock', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'exp', 'and', 'AST#argument_list#Left', '(', 'len', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'System', '.', 'array', 'copy', 'AST#argument_list#Left', '(', 'buffer', ',', 'offset', ',', 'AST#field_access#Left', 'this', '.', 'buf', 'AST#field_access#Right', ',', 'AST#field_access#Left', 'this', '.', 'count', 'AST#field_access#Right', ',', 'len', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'count', 'AST#field_access#Right', '+=', 'len', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#synchronized_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'final', 'AST#modifiers#Right', 'Rev', 'Filter', 'after', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Date', 'ts', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'after', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'ts', '.', 'get', 'Time', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Delete', 'Group', 'Policy', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'group', 'Name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'policy', 'Name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Group', 'Name', 'AST#argument_list#Left', '(', 'group', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Policy', 'Name', 'AST#argument_list#Left', '(', 'policy', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'D', 'ere', 'g', 'ister', 'Trans', 'it', 'Gate', 'way', 'Mult', 'ic', 'ast', 'Group', 'Members', 'Result', 'd', 'ere', 'g', 'ister', 'Trans', 'it', 'Gate', 'way', 'Mult', 'ic', 'ast', 'Group', 'Members', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'D', 'ere', 'g', 'ister', 'Trans', 'it', 'Gate', 'way', 'Mult', 'ic', 'ast', 'Group', 'Members', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'D', 'ere', 'g', 'ister', 'Trans', 'it', 'Gate', 'way', 'Mult', 'ic', 'ast', 'Group', 'Members', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'B', 'atch', 'Delete', 'S', 'ched', 'uled', 'Action', 'Result', 'batch', 'Delete', 'S', 'ched', 'uled', 'Action', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'B', 'atch', 'Delete', 'S', 'ched', 'uled', 'Action', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'B', 'atch', 'Delete', 'S', 'ched', 'uled', 'Action', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Al', 'gorithm', 'Result', 'create', 'Al', 'gorithm', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Al', 'gorithm', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Al', 'gorithm', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'read', 'U', 'Byte', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'read', 'Byte', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '&', '0', 'x', '00', 'FF', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Length', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 's', 'z', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'NB', '.', 'en', 'code', 'Int', '32', 'AST#argument_list#Left', '(', 'info', ',', 'AST#binary_expression#Left', 'info', 'Offset', '+', 'P', '_', 'SIZE', 'AST#binary_expression#Right', ',', 's', 'z', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Sc', 'aling', 'Process', 'Types', 'Result', 'desc', 'ribe', 'Sc', 'aling', 'Process', 'Types', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'desc', 'ribe', 'Sc', 'aling', 'Process', 'Types', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Desc', 'ribe', 'Sc', 'aling', 'Process', 'Types', 'Request', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Resource', 'Record', 'S', 'ets', 'Result', 'list', 'Resource', 'Record', 'S', 'ets', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Resource', 'Record', 'S', 'ets', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Resource', 'Record', 'S', 'ets', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Token', 're', 'cover', 'In', 'line', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Parser', 'recogn', 'izer', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'AST#ERROR#Right', 'AST#expression_statement#Left', 'Rec', 'ogn', 'ition', 'Exception', 'AST#expression_statement#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Input', 'M', 'ism', 'atch', 'Exception', 'AST#variable_declarator#Left', 'e', '=', 'AST#object_creation_expression#Left', 'new', 'Input', 'M', 'ism', 'atch', 'Exception', 'AST#argument_list#Left', '(', 'recogn', 'izer', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'Parser', 'Rule', 'Context', 'AST#variable_declarator#Left', 'context', '=', 'AST#method_invocation#Left', 'recogn', 'izer', '.', 'get', 'Context', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'context', '!', '=', 'null', 'AST#binary_expression#Right', ';', 'AST#assignment_expression#Left', 'context', '=', 'AST#method_invocation#Left', 'context', '.', 'get', 'Parent', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'context', '.', 'ex', 'ception', 'AST#field_access#Right', '=', 'e', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Par', 'se', 'C', 'ance', 'll', 'ation', 'Exception', 'AST#argument_list#Left', '(', 'e', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Set', 'Tags', 'For', 'Resource', 'Result', 'set', 'Tags', 'For', 'Resource', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Set', 'Tags', 'For', 'Resource', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Set', 'Tags', 'For', 'Resource', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#ERROR#Left', 'public', 'Mod', 'ify', 'Str', 'ategy', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'Cloud', 'Call', 'Center', '"', 'AST#ERROR#Right', ',', '"', '2017', '-', '07', '-', '05', '"', ',', '"', 'Mod', 'ify', 'Str', 'ategy', '"', ',', '"', 'Cloud', 'Call', 'Center', '"', ',', '"', 'inner', 'API', '"', ')', ';', '}', 'AST#ERROR#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'V', 'pc', 'End', 'point', 'Services', 'Result', 'desc', 'ribe', 'V', 'pc', 'End', 'point', 'Services', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'V', 'pc', 'End', 'point', 'Services', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'V', 'pc', 'End', 'point', 'Services', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Enable', 'Log', 'ging', 'Result', 'enable', 'Log', 'ging', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Enable', 'Log', 'ging', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Enable', 'Log', 'ging', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'cont', 'ains', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'o', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#field_access#Left', 'Con', 'current', 'Hash', 'Map', '.', 'this', 'AST#field_access#Right', '.', 'cont', 'ains', 'Value', 'AST#argument_list#Left', '(', 'o', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'She', 'et', 'Range', 'Ident', 'ifier', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'book', 'Name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Name', 'Ident', 'ifier', 'first', 'She', 'et', 'Ident', 'ifier', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Name', 'Ident', 'ifier', 'last', 'She', 'et', 'Ident', 'ifier', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#ERROR#Left', 'super', 'AST#inferred_parameters#Left', '(', 'book', 'Name', ',', 'first', 'She', 'et', 'Ident', 'ifier', ')', 'AST#inferred_parameters#Right', 'AST#ERROR#Right', ';', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'last', 'She', 'et', 'Ident', 'ifier', '=', 'last', 'She', 'et', 'Ident', 'ifier', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Domain', 'Met', 'adata', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'domain', 'Name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Domain', 'Name', 'AST#argument_list#Left', '(', 'domain', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Par', 'se', 'Exception', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Token', 'current', 'Token', 'Val', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'int', 'AST#dimensions#Left', '[', ']', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'expected', 'Token', 'Sequ', 'ences', 'Val', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'String', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'token', 'Image', 'Val', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Message', 'Impl', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Query', 'Parser', 'Mess', 'ages', '.', 'IN', 'VAL', 'ID', '_', 'SY', 'N', 'TA', 'X', 'AST#field_access#Right', ',', 'AST#method_invocation#Left', 'initial', 'ise', 'AST#argument_list#Left', '(', 'current', 'Token', 'Val', ',', 'expected', 'Token', 'Sequ', 'ences', 'Val', ',', 'token', 'Image', 'Val', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'current', 'Token', 'AST#field_access#Right', '=', 'current', 'Token', 'Val', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'expected', 'Token', 'Sequ', 'ences', 'AST#field_access#Right', '=', 'expected', 'Token', 'Sequ', 'ences', 'Val', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'token', 'Image', 'AST#field_access#Right', '=', 'token', 'Image', 'Val', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'F', 'etch', 'Photos', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'Cloud', 'Photo', '"', ',', '"', '2017', '-', '07', '-', '11', '"', ',', '"', 'F', 'etch', 'Photos', '"', ',', '"', 'cloud', 'photo', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Prot', 'ocol', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Prot', 'ocol', 'Type', '.', 'HT', 'TPS', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Print', 'Writer', 'writer', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'writer', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'NG', 'ram', 'Token', 'izer', 'Factory', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'Map', 'AST#type_arguments#Left', '<', 'String', ',', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'args', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'args', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'min', 'G', 'ram', 'Size', '=', 'AST#method_invocation#Left', 'get', 'Int', 'AST#argument_list#Left', '(', 'args', ',', '"', 'min', 'G', 'ram', 'Size', '"', ',', 'AST#field_access#Left', 'NG', 'ram', 'Token', 'izer', '.', 'DE', 'FAULT', '_', 'MIN', '_', 'NG', 'RAM', '_', 'SIZE', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'max', 'G', 'ram', 'Size', '=', 'AST#method_invocation#Left', 'get', 'Int', 'AST#argument_list#Left', '(', 'args', ',', '"', 'max', 'G', 'ram', 'Size', '"', ',', 'AST#field_access#Left', 'NG', 'ram', 'Token', 'izer', '.', 'DE', 'FAULT', '_', 'MAX', '_', 'NG', 'RAM', '_', 'SIZE', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'args', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'Unknown', 'Ġparameters', ':', 'Ġ"', '+', 'args', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'is', 'Directory', 'File', 'Conf', 'lict', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'df', 'Conf', 'lict', '!', '=', 'null', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Ind', 'ones', 'ian', 'St', 'em', 'Filter', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Token', 'Stream', 'input', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'bo', 'olean', 'stem', 'Der', 'iv', 'ational', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'input', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'stem', 'Der', 'iv', 'ational', 'AST#field_access#Right', '=', 'stem', 'Der', 'iv', 'ational', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Tra', 'ffic', 'Policy', 'Result', 'create', 'Tra', 'ffic', 'Policy', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Tra', 'ffic', 'Policy', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Tra', 'ffic', 'Policy', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'serial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Output', 'out', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Int', 'AST#argument_list#Left', '(', 'f', 'SD', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Int', 'AST#argument_list#Left', '(', 'password', 'Ver', 'ifier', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'String', 'Ut', 'il', '.', 'write', 'Un', 'ic', 'ode', 'String', 'AST#argument_list#Left', '(', 'out', ',', 'title', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'AST#argument_list#Left', '(', 'security', 'Desc', 'ript', 'or', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'double', 'floor', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'double', 'n', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'double', 's', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 's', '==', '0', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'n', '!', '=', '0', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Double', '.', 'Na', 'N', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#ternary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'n', '==', '0', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 's', '==', '0', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '?', '0', ':', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'Math', '.', 'floor', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'n', '/', 's', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '*', 's', 'AST#binary_expression#Right', 'AST#ternary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Byte', 'Array', 'Data', 'Output', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'bytes', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'len', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'reset', 'AST#argument_list#Left', '(', 'bytes', ',', 'offset', ',', 'len', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'Tree', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'get', 'Children', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Tree', 't', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'Tree', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'kids', '=', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Array', 'List', 'AST#type_arguments#Left', '<', 'Tree', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#method_invocation#Left', 't', '.', 'get', 'Child', 'Count', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'kids', '.', 'add', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 't', '.', 'get', 'Child', 'AST#argument_list#Left', '(', 'i', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 'kids', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'clear', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#field_access#Left', 'Hash', 'table', '.', 'this', 'AST#field_access#Right', '.', 'clear', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Ref', 'resh', 'All', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'bo', 'olean', 'ref', 'resh', 'All', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'this', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', '0', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Ref', 'resh', 'All', 'AST#argument_list#Left', '(', 'ref', 'resh', 'All', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'N', 'amed', 'Query', 'Result', 'delete', 'N', 'amed', 'Query', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'N', 'amed', 'Query', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'N', 'amed', 'Query', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Graph', 'v', 'iz', 'Form', 'atter', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Connection', 'Cost', 's', 'cost', 's', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'cost', 's', 'AST#field_access#Right', '=', 'cost', 's', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'best', 'Path', 'Map', 'AST#field_access#Right', '=', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Hash', 'Map', 'AST#type_arguments#Left', '<', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'format', 'Header', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġinit', 'Ġ[', 'style', '=', 'in', 'vis', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'Ġ', 'Ġinit', 'Ġ->', 'Ġ0', '.', '0', 'Ġ[', 'label', '=\\"', '"', '+', 'B', 'OS', '_', 'LAB', 'EL', 'AST#binary_expression#Right', '+', '"', '\\"', ']', '\\', 'n', '"', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Check', 'Multi', 'agent', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'vision', 'ai', '-', 'p', 'oc', '"', ',', '"', '2020', '-', '04', '-', '08', '"', ',', '"', 'Check', 'Multi', 'agent', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Method', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Method', 'Type', '.', 'POST', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'User', 'Prof', 'iles', 'Result', 'list', 'User', 'Prof', 'iles', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'User', 'Prof', 'iles', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'User', 'Prof', 'iles', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Rel', 'ational', 'Database', 'From', 'Snap', 'shot', 'Result', 'create', 'Rel', 'ational', 'Database', 'From', 'Snap', 'shot', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Rel', 'ational', 'Database', 'From', 'Snap', 'shot', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Rel', 'ational', 'Database', 'From', 'Snap', 'shot', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Start', 'Task', 'Result', 'start', 'Task', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Start', 'Task', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Start', 'Task', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#generic_type#Left', 'Set', 'AST#type_arguments#Left', '<', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'get', 'Ign', 'ored', 'Path', 's', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'ign', 'ored', 'Path', 's', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'F', 'eat', 'Smart', 'Tag', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Input', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'data', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Rem', 'ain', 'der', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Change', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Change', 'Action', 'action', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Resource', 'Record', 'Set', 'resource', 'Record', 'Set', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Action', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'action', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Resource', 'Record', 'Set', 'AST#argument_list#Left', '(', 'resource', 'Record', 'Set', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Image', 'Result', 'delete', 'Image', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Image', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Image', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Configuration', 'Set', 'Result', 'create', 'Configuration', 'Set', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Configuration', 'Set', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Configuration', 'Set', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#generic_type#Left', 'Iterator', 'AST#type_arguments#Left', '<', 'E', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'iterator', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'Object', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'snap', 'shot', '=', 'e', 'lements', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Cow', 'Iterator', 'AST#type_arguments#Left', '<', 'E', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', 'snap', 'shot', ',', '0', ',', 'AST#field_access#Left', 'snap', 'shot', '.', 'length', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'vis', 'it', 'Cont', 'ained', 'Rec', 'ords', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Vis', 'itor', 'r', 'v', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', '_', 're', 'cs', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', 'v', '.', 'vis', 'it', 'Record', 'AST#argument_list#Left', '(', '_', 'b', 'of', 'Rec', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#method_invocation#Left', '_', 're', 'cs', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Record', 'Base', 'AST#variable_declarator#Left', 'rb', '=', 'AST#method_invocation#Left', '_', 're', 'cs', '.', 'get', 'AST#argument_list#Left', '(', 'i', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'rb', 'instance', 'of', 'Record', 'Agg', 'regate', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#parenthesized_expression#Left', '(', 'AST#cast_expression#Left', '(', 'Record', 'Agg', 'regate', ')', 'rb', 'AST#cast_expression#Right', ')', 'AST#parenthesized_expression#Right', '.', 'vis', 'it', 'Cont', 'ained', 'Rec', 'ords', 'AST#argument_list#Left', '(', 'r', 'v', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', 'v', '.', 'vis', 'it', 'Record', 'AST#argument_list#Left', '(', 'AST#cast_expression#Left', '(', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'org', '.', 'apache', 'AST#scoped_type_identifier#Right', '.', 'po', 'i', 'AST#scoped_type_identifier#Right', '.', 'h', 'ss', 'f', 'AST#scoped_type_identifier#Right', '.', 'record', 'AST#scoped_type_identifier#Right', '.', 'Record', 'AST#scoped_type_identifier#Right', ')', 'rb', 'AST#cast_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', 'v', '.', 'vis', 'it', 'Record', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'EO', 'F', 'Record', '.', 'instance', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'buffer', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"[', 'F', 't', 'C', 'bl', 's', 'Ġ]', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġsize', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Data', 'Size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġreserved', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'to', 'H', 'ex', 'AST#argument_list#Left', '(', 'res', 'erved', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', '[/', 'F', 't', 'C', 'bl', 's', 'Ġ]', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'buffer', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'BAT', 'Block', 'create', 'Empty', 'BAT', 'Block', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'final', 'PO', 'IF', 'S', 'Big', 'Block', 'Size', 'big', 'Block', 'Size', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'bo', 'olean', 'is', 'X', 'BAT', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'BAT', 'Block', 'AST#variable_declarator#Left', 'block', '=', 'AST#object_creation_expression#Left', 'new', 'BAT', 'Block', 'AST#argument_list#Left', '(', 'big', 'Block', 'Size', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'is', 'X', 'BAT', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', '_', 'ent', 'ries', '_', 'per', '_', 'x', 'bat', '_', 'block', '=', 'AST#method_invocation#Left', 'big', 'Block', 'Size', '.', 'get', 'X', 'B', 'ATE', 'nt', 'ries', 'Per', 'Block', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'AST#field_access#Left', 'block', '.', '_', 'values', 'AST#field_access#Right', '[', '_', 'ent', 'ries', '_', 'per', '_', 'x', 'bat', '_', 'block', ']', 'AST#array_access#Right', '=', 'AST#field_access#Left', 'PO', 'IF', 'S', 'Const', 'ants', '.', 'END', '_', 'OF', '_', 'CH', 'AIN', 'AST#field_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'block', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Tag', 'Resource', 'Result', 'tag', 'Resource', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Tag', 'Resource', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Tag', 'Resource', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Mail', 'box', 'Per', 'missions', 'Result', 'delete', 'Mail', 'box', 'Per', 'missions', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Mail', 'box', 'Per', 'missions', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Mail', 'box', 'Per', 'missions', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Dat', 'as', 'et', 'G', 'roups', 'Result', 'list', 'Dat', 'as', 'et', 'G', 'roups', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Dat', 'as', 'et', 'G', 'roups', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Dat', 'as', 'et', 'G', 'roups', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Res', 'ume', 'Process', 'es', 'Result', 'res', 'ume', 'Process', 'es', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Res', 'ume', 'Process', 'es', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Res', 'ume', 'Process', 'es', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Person', 'Tr', 'acking', 'Result', 'get', 'Person', 'Tr', 'acking', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Person', 'Tr', 'acking', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Person', 'Tr', 'acking', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'Form', 'ula', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'String', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'oper', 'ands', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'space', '.', 'is', 'Set', 'AST#argument_list#Left', '(', '_', 'options', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#array_access#Left', 'oper', 'ands', '[', '0', ']', 'AST#array_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'opt', 'i', 'If', '.', 'is', 'Set', 'AST#argument_list#Left', '(', '_', 'options', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'to', 'Form', 'ula', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '+', '"', '("', 'AST#binary_expression#Right', '+', 'AST#array_access#Left', 'oper', 'ands', '[', '0', ']', 'AST#array_access#Right', 'AST#binary_expression#Right', '+', '")', '"', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'opt', 'i', 'Skip', '.', 'is', 'Set', 'AST#argument_list#Left', '(', '_', 'options', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'to', 'Form', 'ula', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '+', 'AST#array_access#Left', 'oper', 'ands', '[', '0', ']', 'AST#array_access#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'to', 'Form', 'ula', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '+', '"', '("', 'AST#binary_expression#Right', '+', 'AST#array_access#Left', 'oper', 'ands', '[', '0', ']', 'AST#array_access#Right', 'AST#binary_expression#Right', '+', '")', '"', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'T', 'mer', 'ge', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'T', 'first', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'T', 'second', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Un', 'supported', 'Operation', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'AST#field_access#Left', 'this', '.', 'message', 'AST#field_access#Right', '.', 'get', 'Key', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '+', '":', 'Ġ"', 'AST#binary_expression#Right', '+', 'AST#method_invocation#Left', 'get', 'Local', 'ized', 'Message', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'X', 'Path', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Parser', 'parser', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'path', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'parser', 'AST#field_access#Right', '=', 'parser', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'path', 'AST#field_access#Right', '=', 'path', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'e', 'lements', '=', 'AST#method_invocation#Left', 'split', 'AST#argument_list#Left', '(', 'path', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Create', 'Account', 'Alias', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'account', 'Alias', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Account', 'Alias', 'AST#argument_list#Left', '(', 'account', 'Alias', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'dec', 'ode', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'blocks', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'blocks', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'long', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'values', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'values', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'iter', 'ations', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'j', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'j', '<', 'iter', 'ations', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', '++', 'j', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'byte', 'AST#variable_declarator#Left', 'block', '=', 'AST#array_access#Left', 'blocks', '[', 'AST#update_expression#Left', 'blocks', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'block', '>>>', '7', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '&', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'block', '>>>', '6', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '&', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'block', '>>>', '5', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '&', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'block', '>>>', '4', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '&', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'block', '>>>', '3', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '&', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'block', '>>>', '2', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '&', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'block', '>>>', '1', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '&', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'block', '&', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Push', 'Connection', 'open', 'Push', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'Trans', 'port', 'Exception', '{', 'AST#ERROR#Right', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'T', 'cp', 'Push', 'Connection', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'void', 'str', 'c', 'py', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'd', 'st', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'di', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'src', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'si', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#while_statement#Left', 'while', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#array_access#Left', 'src', '[', 'si', ']', 'AST#array_access#Right', '!', '=', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'd', 'st', '[', 'AST#update_expression#Left', 'di', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#array_access#Left', 'src', '[', 'AST#update_expression#Left', 'si', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#while_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'd', 'st', '[', 'di', ']', 'AST#array_access#Right', '=', '0', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'AST#marker_annotation#Left', '@', 'Override', 'AST#marker_annotation#Right', 'public', 'AST#modifiers#Right', 'K', 'get', 'Key', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'map', 'Entry', '.', 'get', 'Key', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'int', 'num', 'Non', 'null', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'Object', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'data', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'n', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'data', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'n', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'Object', 'o', ':', 'data', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'o', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'n', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#return_statement#Left', 'return', 'n', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'add', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'location', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'E', 'object', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'location', '>', '=', '0', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'location', '<', '=', 'size', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'Link', 'AST#type_arguments#Left', '<', 'E', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'link', '=', 'void', 'Link', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'location', '<', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'size', '/', '2', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', '=', 'location', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'link', '=', 'AST#field_access#Left', 'link', '.', 'next', 'AST#field_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', 'size', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '>', 'location', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '--', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'link', '=', 'AST#field_access#Left', 'link', '.', 'pre', 'vious', 'AST#field_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'Link', 'AST#type_arguments#Left', '<', 'E', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'pre', 'vious', '=', 'AST#field_access#Left', 'link', '.', 'pre', 'vious', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'Link', 'AST#type_arguments#Left', '<', 'E', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'new', 'Link', '=', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Link', 'AST#type_arguments#Left', '<', 'E', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', 'object', ',', 'pre', 'vious', ',', 'link', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'pre', 'vious', '.', 'next', 'AST#field_access#Right', '=', 'new', 'Link', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'link', '.', 'pre', 'vious', 'AST#field_access#Right', '=', 'new', 'Link', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'size', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'mod', 'Count', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Index', 'Out', 'Of', 'B', 'ounds', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Domain', 'Result', 'desc', 'ribe', 'Domain', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Domain', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Domain', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'flush', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', '{', 'AST#ERROR#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'super', '.', 'flush', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Pers', 'ian', 'Char', 'Filter', 'Factory', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'Map', 'AST#type_arguments#Left', '<', 'String', ',', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'args', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'args', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'args', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'Unknown', 'Ġparameters', ':', 'Ġ"', '+', 'args', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'incre', 'ment', 'Token', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'used', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'clear', 'Attributes', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'term', 'Attribute', '.', 'append', 'AST#argument_list#Left', '(', 'value', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'offset', 'Attribute', '.', 'set', 'Offset', 'AST#argument_list#Left', '(', '0', ',', 'length', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'used', '=', 'true', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'Float', 'Buffer', 'all', 'ocate', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'capacity', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'capacity', '<', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Read', 'Write', 'Float', 'Array', 'Buffer', 'AST#argument_list#Left', '(', 'capacity', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'Edit', 'after', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Edit', 'cut', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Edit', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'cut', '.', 'end', 'A', 'AST#field_access#Right', ',', 'end', 'A', ',', 'AST#field_access#Left', 'cut', '.', 'end', 'B', 'AST#field_access#Right', ',', 'end', 'B', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Rule', 'Version', 'Result', 'update', 'Rule', 'Version', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Rule', 'Version', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Rule', 'Version', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Voice', 'Connector', 'Ter', 'mination', 'C', 'red', 'entials', 'Result', 'list', 'Voice', 'Connector', 'Ter', 'mination', 'C', 'red', 'entials', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Voice', 'Connector', 'Ter', 'mination', 'C', 'red', 'entials', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Voice', 'Connector', 'Ter', 'mination', 'C', 'red', 'entials', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Deploy', 'ment', 'Target', 'Result', 'get', 'Deploy', 'ment', 'Target', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Deploy', 'ment', 'Target', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Deploy', 'ment', 'Target', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'No', 'Child', 'Report', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'let', 'Child', 'Report', '=', 'false', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'final', 'Per', 'f', 'Task', 'task', ':', 't', 'asks', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'task', 'instance', 'of', 'Task', 'Sequ', 'ence', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#parenthesized_expression#Left', '(', 'AST#cast_expression#Left', '(', 'Task', 'Sequ', 'ence', ')', 'task', 'AST#cast_expression#Right', ')', 'AST#parenthesized_expression#Right', '.', 'set', 'No', 'Child', 'Report', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'E', 'get', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'location', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#array_access#Left', 'a', '[', 'location', ']', 'AST#array_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'Array', 'Index', 'Out', 'Of', 'B', 'ounds', 'Exception', 'e', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#method_invocation#Left', 'AST#field_access#Left', 'AST#field_access#Left', 'java', '.', 'util', 'AST#field_access#Right', '.', 'Array', 'List', 'AST#field_access#Right', '.', 'throw', 'Index', 'Out', 'Of', 'B', 'ounds', 'Exception', 'AST#argument_list#Left', '(', 'location', ',', 'AST#field_access#Left', 'a', '.', 'length', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Data', 'Set', 'Result', 'desc', 'ribe', 'Data', 'Set', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Data', 'Set', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Data', 'Set', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Skip', 'Work', 'Tree', 'Filter', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'tree', 'Id', 'x', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'tree', 'Id', 'x', 'AST#field_access#Right', '=', 'tree', 'Id', 'x', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Network', 'Inter', 'faces', 'Result', 'desc', 'ribe', 'Network', 'Inter', 'faces', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'desc', 'ribe', 'Network', 'Inter', 'faces', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Desc', 'ribe', 'Network', 'Inter', 'faces', 'Request', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'bo', 'olean', 'cont', 'ains', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'row', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'col', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '_', 'first', 'Row', '<', '=', 'row', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', '_', 'last', 'Row', '>', '=', 'row', 'AST#binary_expression#Right', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', '_', 'first', 'Column', '<', '=', 'col', 'AST#binary_expression#Right', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', '_', 'last', 'Column', '>', '=', 'col', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'String', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'this', '.', 'ch', 'ars', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Patch', 'Type', 'get', 'Patch', 'Type', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'patch', 'Type', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#generic_type#Left', 'Iterator', 'AST#type_arguments#Left', '<', 'K', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'iterator', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Key', 'Iterator', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Script', 'Result', 'create', 'Script', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Script', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Script', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Bytes', 'Ref', 'next', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'term', 'U', 'pt', 'o', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'term', 'U', 'pt', 'o', '>', '=', 'AST#method_invocation#Left', 'AST#field_access#Left', 'info', '.', 'terms', 'AST#field_access#Right', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'null', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#field_access#Left', 'info', '.', 'terms', 'AST#field_access#Right', '.', 'get', 'AST#argument_list#Left', '(', 'AST#array_access#Left', 'AST#field_access#Left', 'info', '.', 's', 'orted', 'Ter', 'ms', 'AST#field_access#Right', '[', 'term', 'U', 'pt', 'o', ']', 'AST#array_access#Right', ',', 'br', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'br', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'output', 'To', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Ch', 'ars', 'Ref', 'output', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'output', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Ass', 'ociate', 'Website', 'Author', 'ization', 'Provider', 'Result', 'ass', 'ociate', 'Website', 'Author', 'ization', 'Provider', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Ass', 'ociate', 'Website', 'Author', 'ization', 'Provider', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Ass', 'ociate', 'Website', 'Author', 'ization', 'Provider', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'un', 'pop', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Rev', 'Comm', 'it', 'c', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Block', 'AST#variable_declarator#Left', 'b', '=', 'head', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'b', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'b', '=', 'AST#method_invocation#Left', 'free', '.', 'new', 'Block', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'b', '.', 'reset', 'To', 'Middle', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'b', '.', 'add', 'AST#argument_list#Left', '(', 'c', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'head', '=', 'b', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'tail', '=', 'b', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'b', '.', 'can', 'Un', 'pop', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'b', '.', 'un', 'pop', 'AST#argument_list#Left', '(', 'c', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'b', '=', 'AST#method_invocation#Left', 'free', '.', 'new', 'Block', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'b', '.', 'reset', 'To', 'End', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'b', '.', 'un', 'pop', 'AST#argument_list#Left', '(', 'c', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'b', '.', 'next', 'AST#field_access#Right', '=', 'head', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'head', '=', 'b', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Edge', 'NG', 'ram', 'Token', 'izer', 'Factory', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'Map', 'AST#type_arguments#Left', '<', 'String', ',', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'args', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'args', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'min', 'G', 'ram', 'Size', '=', 'AST#method_invocation#Left', 'get', 'Int', 'AST#argument_list#Left', '(', 'args', ',', '"', 'min', 'G', 'ram', 'Size', '"', ',', 'AST#field_access#Left', 'Edge', 'NG', 'ram', 'Token', 'izer', '.', 'DE', 'FAULT', '_', 'MIN', '_', 'GR', 'AM', '_', 'SIZE', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'max', 'G', 'ram', 'Size', '=', 'AST#method_invocation#Left', 'get', 'Int', 'AST#argument_list#Left', '(', 'args', ',', '"', 'max', 'G', 'ram', 'Size', '"', ',', 'AST#field_access#Left', 'Edge', 'NG', 'ram', 'Token', 'izer', '.', 'DE', 'FAULT', '_', 'MAX', '_', 'GR', 'AM', '_', 'SIZE', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'args', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'Unknown', 'Ġparameters', ':', 'Ġ"', '+', 'args', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Mod', 'ify', 'DB', 'Parameter', 'Group', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'dB', 'Parameter', 'Group', 'Name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'java', '.', 'util', 'AST#scoped_type_identifier#Right', '.', 'List', 'AST#scoped_type_identifier#Right', 'AST#type_arguments#Left', '<', 'Parameter', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'param', 'eters', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'DB', 'Parameter', 'Group', 'Name', 'AST#argument_list#Left', '(', 'dB', 'Parameter', 'Group', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Parameters', 'AST#argument_list#Left', '(', 'param', 'eters', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Host', 'ed', 'Zone', 'Limit', 'Result', 'get', 'Host', 'ed', 'Zone', 'Limit', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Host', 'ed', 'Zone', 'Limit', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Host', 'ed', 'Zone', 'Limit', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'long', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'o', '=', 'AST#binary_expression#Left', 'index', '>>>', '6', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'b', '=', 'AST#binary_expression#Left', 'index', '&', '63', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'shift', '=', 'AST#binary_expression#Left', 'b', '<<', '0', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'o', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'o', ']', 'AST#array_access#Right', '&', 'AST#unary_expression#Left', '~', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', '1', 'L', '<<', 'shift', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#unary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '|', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'value', '<<', 'shift', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Rev', 'Filter', 'clone', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Pattern', 'Search', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'pattern', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'sp', 'ans', '("', '+', 'AST#method_invocation#Left', 'term', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '")', '@', '"', 'AST#binary_expression#Right', '+', 'AST#parenthesized_expression#Left', '(', 'AST#ternary_expression#Left', 'AST#binary_expression#Left', 'doc', '==', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', 'AST#binary_expression#Right', '?', '"', 'ST', 'ART', '"', ':', 'AST#ternary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'doc', '==', 'NO', '_', 'MORE', '_', 'DOC', 'S', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '?', '"', 'END', 'DOC', '"', ':', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'doc', '+', '"', 'Ġ-', 'Ġ"', 'AST#binary_expression#Right', '+', 'AST#parenthesized_expression#Left', '(', 'AST#ternary_expression#Left', 'AST#binary_expression#Left', 'position', '==', 'NO', '_', 'MORE', '_', 'POS', 'IT', 'IONS', 'AST#binary_expression#Right', '?', '"', 'EN', 'DP', 'OS', '"', ':', 'position', 'AST#ternary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', 'AST#ternary_expression#Right', 'AST#ternary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'can', 'App', 'end', 'Match', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#enhanced_for_statement#Left', 'for', '(', 'Head', 'head', ':', 'heads', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'head', '!', '=', 'AST#field_access#Left', 'Last', 'Head', '.', 'INST', 'ANCE', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'syn', 'chron', 'ized', 'AST#modifiers#Right', 'int', 'last', 'Index', 'Of', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'sub', 'String', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'start', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'super', '.', 'last', 'Index', 'Of', 'AST#argument_list#Left', '(', 'sub', 'String', ',', 'start', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Network', 'A', 'cl', 'Entry', 'Result', 'delete', 'Network', 'A', 'cl', 'Entry', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Network', 'A', 'cl', 'Entry', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Network', 'A', 'cl', 'Entry', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Ass', 'ociate', 'Member', 'To', 'Group', 'Result', 'ass', 'ociate', 'Member', 'To', 'Group', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Ass', 'ociate', 'Member', 'To', 'Group', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Ass', 'ociate', 'Member', 'To', 'Group', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'final', 'AST#modifiers#Right', 'int', 'comm', 'itter', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'b', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'ptr', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 's', 'z', '=', 'AST#field_access#Left', 'b', '.', 'length', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'ptr', '==', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ptr', '+=', '46', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#while_statement#Left', 'while', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'ptr', '<', 's', 'z', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'AST#array_access#Left', 'b', '[', 'ptr', ']', 'AST#array_access#Right', '==', "'", 'p', "'", 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ptr', '+=', '48', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#while_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'ptr', '<', 's', 'z', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'AST#array_access#Left', 'b', '[', 'ptr', ']', 'AST#array_access#Right', '==', "'", 'a', "'", 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ptr', '=', 'AST#method_invocation#Left', 'next', 'L', 'F', 'AST#argument_list#Left', '(', 'b', ',', 'ptr', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'match', 'AST#argument_list#Left', '(', 'b', ',', 'ptr', ',', 'comm', 'itter', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'get', 'Line', 'Number', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'row', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Sub', 'module', 'Update', 'Command', 'add', 'Path', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'path', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'path', 's', '.', 'add', 'AST#argument_list#Left', '(', 'path', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Push', 'Template', 'Result', 'get', 'Push', 'Template', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Push', 'Template', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Push', 'Template', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'V', 'ault', 'Result', 'desc', 'ribe', 'V', 'ault', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'V', 'ault', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'V', 'ault', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'V', 'pc', 'Pe', 'ering', 'Connect', 'ions', 'Result', 'desc', 'ribe', 'V', 'pc', 'Pe', 'ering', 'Connect', 'ions', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'desc', 'ribe', 'V', 'pc', 'Pe', 'ering', 'Connect', 'ions', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Desc', 'ribe', 'V', 'pc', 'Pe', 'ering', 'Connect', 'ions', 'Request', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Byte', 'Buffer', 'put', 'Long', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'long', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Read', 'Only', 'Buffer', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Register', 'Device', 'Result', 'register', 'Device', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Register', 'Device', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Register', 'Device', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'Format', 'by', 'Id', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'id', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#enhanced_for_statement#Left', 'for', '(', 'Format', 'format', ':', 'AST#method_invocation#Left', 'Format', '.', 'values', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'format', '.', 'get', 'Id', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', 'id', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'format', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'Unknown', 'Ġformat', 'Ġid', ':', 'Ġ"', '+', 'id', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'App', 'Result', 'delete', 'App', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'App', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'App', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'B', 'aid', 'u', 'Channel', 'Result', 'get', 'B', 'aid', 'u', 'Channel', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'B', 'aid', 'u', 'Channel', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'B', 'aid', 'u', 'Channel', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#scoped_type_identifier#Left', 'F', 'ST', '.', 'Bytes', 'Reader', 'AST#scoped_type_identifier#Right', 'get', 'Bytes', 'Reader', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'f', 'st', '.', 'get', 'Bytes', 'Reader', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'bo', 'olean', 'is', 'Valid', 'Sche', 'me', 'Char', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'char', 'c', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'c', '>', '=', "'", 'a', "'", 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'c', '<', '=', "'", 'z', "'", 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '||', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'c', '>', '=', "'", 'A', "'", 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'c', '<', '=', "'", 'Z', "'", 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'index', '>', '0', 'AST#binary_expression#Right', '&&', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'c', '>', '=', "'", '0', "'", 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'c', '<', '=', "'", '9', "'", 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '||', 'AST#binary_expression#Left', 'c', '==', "'", '+', "'", 'AST#binary_expression#Right', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'c', '==', "'", "-'", 'AST#binary_expression#Right', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'c', '==', "'", ".'", 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'App', 'lied', 'Sche', 'ma', 'Ar', 'ns', 'Result', 'list', 'App', 'lied', 'Sche', 'ma', 'Ar', 'ns', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'App', 'lied', 'Sche', 'ma', 'Ar', 'ns', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'App', 'lied', 'Sche', 'ma', 'Ar', 'ns', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'name', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'this', '.', 'name', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Value', 'E', 'val', 'evaluate', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'Value', 'E', 'val', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'args', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Operation', 'E', 'val', 'uation', 'Context', 'ec', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'args', '.', 'length', 'AST#field_access#Right', '<', '1', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Error', 'E', 'val', '.', 'VALUE', '_', 'IN', 'VAL', 'ID', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'bo', 'olean', 'is', 'A', '1', 'style', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'String', 'text', ';', 'AST#local_variable_declaration#Right', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Value', 'E', 'val', 'AST#variable_declarator#Left', 've', '=', 'AST#method_invocation#Left', 'Oper', 'and', 'Res', 'olver', '.', 'get', 'Single', 'Value', 'AST#argument_list#Left', '(', 'AST#array_access#Left', 'args', '[', '0', ']', 'AST#array_access#Right', ',', 'AST#method_invocation#Left', 'ec', '.', 'get', 'Row', 'Index', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#method_invocation#Left', 'ec', '.', 'get', 'Column', 'Index', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'text', '=', 'AST#method_invocation#Left', 'Oper', 'and', 'Res', 'olver', '.', 'co', 'er', 'ce', 'Value', 'To', 'String', 'AST#argument_list#Left', '(', 've', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#switch_expression#Left', 'switch', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'args', '.', 'length', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', 'AST#switch_block#Left', '{', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', '1', 'AST#switch_label#Right', ':', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'is', 'A', '1', 'style', '=', 'true', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', '2', 'AST#switch_label#Right', ':', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'is', 'A', '1', 'style', '=', 'AST#method_invocation#Left', 'evaluate', 'Boo', 'lean', 'Arg', 'AST#argument_list#Left', '(', 'AST#array_access#Left', 'args', '[', '1', ']', 'AST#array_access#Right', ',', 'ec', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'default', ':', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Error', 'E', 'val', '.', 'VALUE', '_', 'IN', 'VAL', 'ID', 'AST#field_access#Right', ';', 'AST#return_statement#Right', 'AST#switch_block_statement_group#Right', '}', 'AST#switch_block#Right', 'AST#switch_expression#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'E', 'val', 'uation', 'Exception', 'e', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'e', '.', 'get', 'Error', 'E', 'val', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'evaluate', 'Ind', 'irect', 'AST#argument_list#Left', '(', 'ec', ',', 'text', ',', 'is', 'A', '1', 'style', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'int', 'comp', 'are', 'To', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'int', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'bs', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'p', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'cmp', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'cmp', '=', 'AST#method_invocation#Left', 'NB', '.', 'comp', 'are', 'U', 'Int', '32', 'AST#argument_list#Left', '(', 'w', '1', ',', 'AST#array_access#Left', 'bs', '[', 'p', ']', 'AST#array_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'cmp', '!', '=', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'cmp', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'cmp', '=', 'AST#method_invocation#Left', 'NB', '.', 'comp', 'are', 'U', 'Int', '32', 'AST#argument_list#Left', '(', 'w', '2', ',', 'AST#array_access#Left', 'bs', '[', 'AST#binary_expression#Left', 'p', '+', '1', 'AST#binary_expression#Right', ']', 'AST#array_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'cmp', '!', '=', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'cmp', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'cmp', '=', 'AST#method_invocation#Left', 'NB', '.', 'comp', 'are', 'U', 'Int', '32', 'AST#argument_list#Left', '(', 'w', '3', ',', 'AST#array_access#Left', 'bs', '[', 'AST#binary_expression#Left', 'p', '+', '2', 'AST#binary_expression#Right', ']', 'AST#array_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'cmp', '!', '=', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'cmp', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'cmp', '=', 'AST#method_invocation#Left', 'NB', '.', 'comp', 'are', 'U', 'Int', '32', 'AST#argument_list#Left', '(', 'w', '4', ',', 'AST#array_access#Left', 'bs', '[', 'AST#binary_expression#Left', 'p', '+', '3', 'AST#binary_expression#Right', ']', 'AST#array_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'cmp', '!', '=', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'cmp', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'NB', '.', 'comp', 'are', 'U', 'Int', '32', 'AST#argument_list#Left', '(', 'w', '5', ',', 'AST#array_access#Left', 'bs', '[', 'AST#binary_expression#Left', 'p', '+', '4', 'AST#binary_expression#Right', ']', 'AST#array_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'remove', 'Name', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'names', '.', 'remove', 'AST#argument_list#Left', '(', 'index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'work', 'book', '.', 'remove', 'Name', 'AST#argument_list#Left', '(', 'index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Get', 'Queue', 'Attributes', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'queue', 'Url', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'java', '.', 'util', 'AST#scoped_type_identifier#Right', '.', 'List', 'AST#scoped_type_identifier#Right', 'AST#type_arguments#Left', '<', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'attribute', 'Names', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Queue', 'Url', 'AST#argument_list#Left', '(', 'queue', 'Url', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Attribute', 'Names', 'AST#argument_list#Left', '(', 'attribute', 'Names', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'AST#array_type#Left', 'bo', 'olean', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'copy', 'Of', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'bo', 'olean', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'original', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'new', 'Length', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'new', 'Length', '<', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Neg', 'ative', 'Array', 'Size', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'copy', 'Of', 'Range', 'AST#argument_list#Left', '(', 'original', ',', '0', ',', 'new', 'Length', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'void', 'set', 'Enabled', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'bo', 'olean', 'enabled', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'EN', 'AB', 'LED', '=', 'enabled', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Log', 'Pattern', 'Result', 'delete', 'Log', 'Pattern', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Log', 'Pattern', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Log', 'Pattern', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'cont', 'ains', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'text', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'off', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'len', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'map', '.', 'cont', 'ains', 'Key', 'AST#argument_list#Left', '(', 'text', ',', 'off', ',', 'len', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'get', 'First', 'She', 'et', 'Index', 'From', 'Ex', 'tern', 'She', 'et', 'Index', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'ex', 'tern', 'She', 'et', 'Number', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'link', 'Table', '.', 'get', 'First', 'Internal', 'She', 'et', 'Index', 'For', 'Ext', 'Index', 'AST#argument_list#Left', '(', 'ex', 'tern', 'She', 'et', 'Number', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'hand', 'les', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'command', 'Line', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'command', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '+', '1', 'AST#binary_expression#Right', '<', 'AST#method_invocation#Left', 'command', 'Line', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'command', 'Line', '.', 'char', 'At', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'command', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', "'", "Ġ'", 'AST#binary_expression#Right', 'AST#binary_expression#Right', '&&', 'AST#method_invocation#Left', 'command', 'Line', '.', 'st', 'arts', 'With', 'AST#argument_list#Left', '(', 'command', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'void', 'register', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Mer', 'ge', 'Str', 'ategy', 'imp', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'register', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'imp', '.', 'get', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'imp', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'long', 'ram', 'Bytes', 'Used', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'B', 'ASE', '_', 'RAM', '_', 'BY', 'T', 'ES', '_', 'US', 'ED', '+', 'AST#parenthesized_expression#Left', '(', 'AST#ternary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'index', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '?', 'AST#method_invocation#Left', 'index', '.', 'ram', 'Bytes', 'Used', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ':', '0', 'AST#ternary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Host', 'ed', 'Zone', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'id', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'call', 'er', 'Reference', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Id', 'AST#argument_list#Left', '(', 'id', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Name', 'AST#argument_list#Left', '(', 'name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Call', 'er', 'Reference', 'AST#argument_list#Left', '(', 'call', 'er', 'Reference', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Find', 'ings', 'Result', 'get', 'Find', 'ings', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Find', 'ings', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Find', 'ings', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Topics', 'Det', 'ection', 'Job', 'Result', 'desc', 'ribe', 'Topics', 'Det', 'ection', 'Job', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Topics', 'Det', 'ection', 'Job', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Topics', 'Det', 'ection', 'Job', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'process', 'Match', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Value', 'E', 'val', 'eval', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'eval', 'instance', 'of', 'N', 'umeric', 'Value', 'E', 'val', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'minimum', 'Value', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'minimum', 'Value', '=', 'eval', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'double', 'AST#variable_declarator#Left', 'current', 'Value', '=', 'AST#method_invocation#Left', 'AST#parenthesized_expression#Left', '(', 'AST#cast_expression#Left', '(', 'N', 'umeric', 'Value', 'E', 'val', ')', 'eval', 'AST#cast_expression#Right', ')', 'AST#parenthesized_expression#Right', '.', 'get', 'Number', 'Value', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'double', 'AST#variable_declarator#Left', 'old', 'Value', '=', 'AST#method_invocation#Left', 'AST#parenthesized_expression#Left', '(', 'AST#cast_expression#Left', '(', 'N', 'umeric', 'Value', 'E', 'val', ')', 'minimum', 'Value', 'AST#cast_expression#Right', ')', 'AST#parenthesized_expression#Right', '.', 'get', 'Number', 'Value', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'current', 'Value', '<', 'old', 'Value', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'minimum', 'Value', '=', 'eval', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'write', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Output', 'out', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Byte', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'sid', '+', 'AST#method_invocation#Left', 'get', 'P', 'tg', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'field', '_', '1', '_', 'len', '_', 'ref', '_', 'sub', 'expression', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'void', 'main', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'String', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'args', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'bo', 'olean', 'AST#variable_declarator#Left', 'print', 'Tree', '=', 'false', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 'path', '=', 'null', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#field_access#Left', 'args', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'AST#array_access#Left', 'args', '[', 'i', ']', 'AST#array_access#Right', '.', 'equ', 'als', 'AST#argument_list#Left', '(', '"-', 'print', 'Tree', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'print', 'Tree', '=', 'true', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'path', '=', 'AST#array_access#Left', 'args', '[', 'i', ']', 'AST#array_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'args', '.', 'length', 'AST#field_access#Right', '!', '=', 'AST#parenthesized_expression#Left', '(', 'AST#ternary_expression#Left', 'print', 'Tree', '?', '2', ':', '1', 'AST#ternary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#field_access#Left', 'System', '.', 'out', 'AST#field_access#Right', '.', 'println', 'AST#argument_list#Left', '(', '"', '\\', 'n', 'Usage', ':', 'Ġjava', 'Ġ-', 'class', 'path', 'Ġ...', 'Ġorg', '.', 'apache', '.', 'l', 'uc', 'ene', '.', 'f', 'acet', '.', 'util', '.', 'Print', 'Tax', 'onomy', 'Stats', 'Ġ[-', 'print', 'Tree', ']', 'Ġ/', 'path', '/', 'to', '/', 'tax', 'on', 'on', 'my', '/', 'index', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'System', '.', 'exit', 'AST#argument_list#Left', '(', '1', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'Directory', 'AST#variable_declarator#Left', 'dir', '=', 'AST#method_invocation#Left', 'F', 'SD', 'irect', 'ory', '.', 'open', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Path', 's', '.', 'get', 'AST#argument_list#Left', '(', 'path', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Tax', 'onomy', 'Reader', 'AST#variable_declarator#Left', 'r', '=', 'AST#object_creation_expression#Left', 'new', 'Directory', 'Tax', 'onomy', 'Reader', 'AST#argument_list#Left', '(', 'dir', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'print', 'Stats', 'AST#argument_list#Left', '(', 'r', ',', 'AST#field_access#Left', 'System', '.', 'out', 'AST#field_access#Right', ',', 'print', 'Tree', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'close', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'dir', '.', 'close', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Byte', 'Value', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'byte', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'fields', 'Data', 'instance', 'of', 'Byte', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'c', 'annot', 'Ġchange', 'Ġvalue', 'Ġtype', 'Ġfrom', 'Ġ"', '+', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'fields', 'Data', '.', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Simple', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '"', 'Ġto', 'ĠByte', '"', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'fields', 'Data', '=', 'AST#method_invocation#Left', 'Byte', '.', 'value', 'Of', 'AST#argument_list#Left', '(', 'value', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'int', 'initial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'initial', 'ize', 'AST#argument_list#Left', '(', 'DE', 'FAULT', '_', 'SE', 'ED', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'C', 'aching', 'Double', 'Value', 'Source', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Double', 'Values', 'Source', 'source', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'source', 'AST#field_access#Right', '=', 'source', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'cache', '=', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Hash', 'Map', 'AST#type_arguments#Left', '<', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Attribute', 'Definition', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'attribute', 'Name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Sc', 'al', 'ar', 'Attribute', 'Type', 'attribute', 'Type', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Attribute', 'Name', 'AST#argument_list#Left', '(', 'attribute', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Attribute', 'Type', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'attribute', 'Type', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'String', 'join', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'Collection', 'AST#type_arguments#Left', '<', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'parts', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'separ', 'ator', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'String', 'Ut', 'ils', '.', 'join', 'AST#argument_list#Left', '(', 'parts', ',', 'separ', 'ator', ',', 'separ', 'ator', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Task', 'Definition', 'F', 'am', 'ilies', 'Result', 'list', 'Task', 'Definition', 'F', 'am', 'ilies', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Task', 'Definition', 'F', 'am', 'ilies', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Task', 'Definition', 'F', 'am', 'ilies', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Comp', 'onents', 'Result', 'list', 'Comp', 'onents', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Comp', 'onents', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Comp', 'onents', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Activ', 'ate', 'Photos', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'Cloud', 'Photo', '"', ',', '"', '2017', '-', '07', '-', '11', '"', ',', '"', 'Activ', 'ate', 'Photos', '"', ',', '"', 'cloud', 'photo', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Prot', 'ocol', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Prot', 'ocol', 'Type', '.', 'HT', 'TPS', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Match', 'making', 'Rule', 'Set', 'Result', 'create', 'Match', 'making', 'Rule', 'Set', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Match', 'making', 'Rule', 'Set', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Match', 'making', 'Rule', 'Set', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Available', 'Management', 'C', 'id', 'r', 'R', 'anges', 'Result', 'list', 'Available', 'Management', 'C', 'id', 'r', 'R', 'anges', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Available', 'Management', 'C', 'id', 'r', 'R', 'anges', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Available', 'Management', 'C', 'id', 'r', 'R', 'anges', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#generic_type#Left', 'Object', 'Id', 'Sub', 'class', 'Map', 'AST#type_arguments#Left', '<', 'Object', 'Id', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'get', 'Base', 'Object', 'Id', 's', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'base', 'Object', 'Id', 's', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'base', 'Object', 'Id', 's', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Object', 'Id', 'Sub', 'class', 'Map', 'AST#type_arguments#Left', '<', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Push', 'Template', 'Result', 'delete', 'Push', 'Template', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Push', 'Template', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Push', 'Template', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Domain', 'Entry', 'Result', 'create', 'Domain', 'Entry', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Domain', 'Entry', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Domain', 'Entry', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'int', 'get', 'Enc', 'oded', 'Size', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'Object', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'values', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'result', '=', 'AST#binary_expression#Left', 'AST#field_access#Left', 'values', '.', 'length', 'AST#field_access#Right', '*', '1', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'Object', 'value', ':', 'values', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'result', '+=', 'AST#method_invocation#Left', 'get', 'Enc', 'oded', 'Size', 'AST#argument_list#Left', '(', 'value', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#return_statement#Left', 'return', 'result', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Open', 'NL', 'PT', 'oken', 'izer', 'Factory', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'Map', 'AST#type_arguments#Left', '<', 'String', ',', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'args', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'args', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'sent', 'ence', 'Model', 'File', '=', 'AST#method_invocation#Left', 'require', 'AST#argument_list#Left', '(', 'args', ',', 'S', 'ENT', 'ENCE', '_', 'MOD', 'EL', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'token', 'izer', 'Model', 'File', '=', 'AST#method_invocation#Left', 'require', 'AST#argument_list#Left', '(', 'args', ',', 'TO', 'KEN', 'IZ', 'ER', '_', 'MOD', 'EL', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'args', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'Unknown', 'Ġparameters', ':', 'Ġ"', '+', 'args', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'int', 'get', 'Int', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'check', 'Index', 'AST#argument_list#Left', '(', 'index', ',', 'AST#field_access#Left', 'Size', 'Of', '.', 'INT', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Memory', '.', 'pe', 'ek', 'Int', 'AST#argument_list#Left', '(', 'back', 'ing', 'Array', ',', 'AST#binary_expression#Left', 'offset', '+', 'index', 'AST#binary_expression#Right', ',', 'order', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'Head', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'get', 'Next', 'Head', 's', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'char', 'c', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'mat', 'ches', 'AST#argument_list#Left', '(', 'c', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'new', 'Head', 's', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'File', 'Name', 'Mat', 'cher', '.', 'EMP', 'TY', '_', 'HEAD', '_', 'LIST', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Byte', 'Buffer', 'put', 'Short', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'short', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Read', 'Only', 'Buffer', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'write', 'Un', 'shared', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'object', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'write', 'Object', 'AST#argument_list#Left', '(', 'object', ',', 'true', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'offset', 'By', 'Code', 'Points', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'code', 'Point', 'Offset', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Character', '.', 'offset', 'By', 'Code', 'Points', 'AST#argument_list#Left', '(', 'value', ',', '0', ',', 'count', ',', 'index', ',', 'code', 'Point', 'Offset', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'int', 'get', 'Unique', 'Alt', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'Collection', 'AST#type_arguments#Left', '<', 'Bit', 'Set', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'al', 'ts', 'ets', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Bit', 'Set', 'AST#variable_declarator#Left', 'all', '=', 'AST#method_invocation#Left', 'get', 'Al', 'ts', 'AST#argument_list#Left', '(', 'al', 'ts', 'ets', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'all', '.', 'card', 'inal', 'ity', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', '1', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'all', '.', 'next', 'Set', 'Bit', 'AST#argument_list#Left', '(', '0', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'AT', 'N', '.', 'IN', 'VAL', 'ID', '_', 'ALT', '_', 'NUM', 'BER', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Date', 'get', 'When', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Date', 'AST#argument_list#Left', '(', 'when', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Rule', 'Tag', 'Token', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'rule', 'Name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'by', 'pass', 'Token', 'Type', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'label', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'rule', 'Name', '==', 'null', 'AST#binary_expression#Right', '||', 'AST#method_invocation#Left', 'rule', 'Name', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', '"', 'rule', 'Name', 'Ġcannot', 'Ġbe', 'Ġnull', 'Ġor', 'Ġempty', '."', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'rule', 'Name', 'AST#field_access#Right', '=', 'rule', 'Name', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'by', 'pass', 'Token', 'Type', 'AST#field_access#Right', '=', 'by', 'pass', 'Token', 'Type', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'label', 'AST#field_access#Right', '=', 'label', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Disable', 'Organ', 'ization', 'Admin', 'Account', 'Result', 'disable', 'Organ', 'ization', 'Admin', 'Account', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Disable', 'Organ', 'ization', 'Admin', 'Account', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Disable', 'Organ', 'ization', 'Admin', 'Account', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Room', 'Result', 'create', 'Room', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Room', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Room', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Repl', 'ication', 'Group', 'delete', 'Repl', 'ication', 'Group', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Repl', 'ication', 'Group', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Repl', 'ication', 'Group', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'Char', 'Buffer', 'dec', 'ode', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Byte', 'Buffer', 'buffer', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'new', 'Dec', 'oder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'on', 'Mal', 'formed', 'Input', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'C', 'oding', 'Error', 'Action', '.', 'RE', 'PL', 'ACE', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'on', 'Un', 'm', 'app', 'able', 'Character', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'C', 'oding', 'Error', 'Action', '.', 'RE', 'PL', 'ACE', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'dec', 'ode', 'AST#argument_list#Left', '(', 'buffer', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'Character', 'C', 'oding', 'Exception', 'ex', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Error', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'ex', '.', 'get', 'Message', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'ex', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Dist', 'ribution', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'id', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'status', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'domain', 'Name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Id', 'AST#argument_list#Left', '(', 'id', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Status', 'AST#argument_list#Left', '(', 'status', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Domain', 'Name', 'AST#argument_list#Left', '(', 'domain', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'AST#array_type#Left', 'double', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'array', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'protected', 'Array', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Date', 'Window', '19', '04', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Input', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '1', '_', 'window', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Delete', 'D', 'BS', 'n', 'ap', 'shot', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'd', 'BS', 'n', 'ap', 'shot', 'Ident', 'ifier', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'D', 'BS', 'n', 'ap', 'shot', 'Ident', 'ifier', 'AST#argument_list#Left', '(', 'd', 'BS', 'n', 'ap', 'shot', 'Ident', 'ifier', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'Parser', 'Ext', 'ension', 'get', 'Ext', 'ension', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'key', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#field_access#Left', 'this', '.', 'ext', 'ensions', 'AST#field_access#Right', '.', 'get', 'AST#argument_list#Left', '(', 'key', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'in', 'form', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Resource', 'Loader', 'loader', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'ch', 'unker', 'Model', 'File', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Open', 'NL', 'PO', 'ps', 'Factory', '.', 'get', 'Ch', 'unker', 'Model', 'AST#argument_list#Left', '(', 'ch', 'unker', 'Model', 'File', ',', 'loader', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'IO', 'Exception', 'e', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'e', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Complete', 'V', 'ault', 'Lock', 'Result', 'complete', 'V', 'ault', 'Lock', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Complete', 'V', 'ault', 'Lock', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Complete', 'V', 'ault', 'Lock', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'AST#array_type#Left', 'int', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'get', 'Char', 'Inter', 'vals', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'points', '.', 'clone', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'long', 'ram', 'Bytes', 'Used', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'values', '.', 'ram', 'Bytes', 'Used', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '+', 'AST#method_invocation#Left', 'super', '.', 'ram', 'Bytes', 'Used', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', 'AST#field_access#Left', 'Long', '.', 'BY', 'T', 'ES', 'AST#field_access#Right', 'AST#binary_expression#Right', '+', 'AST#field_access#Left', 'Ram', 'Usage', 'Est', 'im', 'ator', '.', 'NUM', '_', 'BY', 'T', 'ES', '_', 'OB', 'JECT', '_', 'REF', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Register', 'Inst', 'ances', 'With', 'Load', 'Bal', 'ancer', 'Result', 'register', 'Inst', 'ances', 'With', 'Load', 'Bal', 'ancer', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Register', 'Inst', 'ances', 'With', 'Load', 'Bal', 'ancer', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Register', 'Inst', 'ances', 'With', 'Load', 'Bal', 'ancer', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Cl', 'uster', 'User', 'K', 'ub', 'ec', 'on', 'fig', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'CS', '"', ',', '"', '2015', '-', '12', '-', '15', '"', ',', '"', 'Desc', 'ribe', 'Cl', 'uster', 'User', 'K', 'ub', 'ec', 'on', 'fig', '"', ',', '"', 'cs', 'k', '"', ')', ';', 'AST#ERROR#Right', 'set', 'U', 'ri', 'Pattern', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', '"', '/', 'k', '8', 's', '/', '[', 'Cl', 'uster', 'Id', ']', '/', 'user', '_', 'config', '"', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Method', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Method', 'Type', '.', 'GET', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Pre', 'cision', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Input', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '1', '_', 'pre', 'cision', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'serial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Output', 'out', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Left', 'Row', 'G', 'utter', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Top', 'Col', 'G', 'utter', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Row', 'Level', 'Max', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Col', 'Level', 'Max', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Virtual', 'Interface', 'Result', 'delete', 'Virtual', 'Interface', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Virtual', 'Interface', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Virtual', 'Interface', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Entry', 'get', 'Entry', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'File', 'Not', 'Found', 'Exception', '{', 'AST#ERROR#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'ex', 'cludes', '.', 'cont', 'ains', 'AST#argument_list#Left', '(', 'name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'File', 'Not', 'Found', 'Exception', 'AST#argument_list#Left', '(', 'name', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'Entry', 'AST#variable_declarator#Left', 'entry', '=', 'AST#method_invocation#Left', 'directory', '.', 'get', 'Entry', 'AST#argument_list#Left', '(', 'name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'wrap', 'Entry', 'AST#argument_list#Left', '(', 'entry', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'buffer', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"[', 'BACK', 'UP', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'back', 'up', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Integer', '.', 'to', 'H', 'ex', 'String', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Back', 'up', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', '[/', 'BACK', 'UP', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'buffer', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Voice', 'Connector', 'Orig', 'ination', 'Result', 'delete', 'Voice', 'Connector', 'Orig', 'ination', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Voice', 'Connector', 'Orig', 'ination', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Voice', 'Connector', 'Orig', 'ination', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'App', 'end', 'able', 'append', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'char', 'c', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'write', 'AST#argument_list#Left', '(', 'c', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'long', 'generation', 'From', 'Seg', 'ments', 'File', 'Name', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'file', 'Name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'file', 'Name', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'OLD', '_', 'SE', 'G', 'MENTS', '_', 'GEN', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', '\\"', '"', '+', 'OLD', '_', 'SE', 'G', 'MENTS', '_', 'GEN', 'AST#binary_expression#Right', '+', '"', '\\"', 'Ġis', 'Ġnot', 'Ġa', 'Ġvalid', 'Ġsegment', 'Ġfile', 'Ġname', 'Ġsince', 'Ġ4', '.', '0', '"', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'else', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'file', 'Name', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Index', 'File', 'Names', '.', 'SE', 'G', 'MENTS', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', '0', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'file', 'Name', '.', 'st', 'arts', 'With', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Index', 'File', 'Names', '.', 'SE', 'G', 'MENTS', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Long', '.', 'parse', 'Long', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'file', 'Name', '.', 'sub', 'string', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '1', '+', 'AST#method_invocation#Left', 'AST#field_access#Left', 'Index', 'File', 'Names', '.', 'SE', 'G', 'MENTS', 'AST#field_access#Right', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#field_access#Left', 'Character', '.', 'MAX', '_', 'R', 'AD', 'IX', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'file', 'Name', 'Ġ\\', '""', '+', 'file', 'Name', 'AST#binary_expression#Right', '+', '"', '\\"', 'Ġis', 'Ġnot', 'Ġa', 'Ġsegments', 'Ġfile', '"', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'Tag', 'Opt', 'from', 'Option', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'o', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'o', '==', 'null', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'o', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', '0', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'AUT', 'O', '_', 'FO', 'LLOW', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'Tag', 'Opt', 'tag', 'opt', ':', 'AST#method_invocation#Left', 'values', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'tag', 'opt', '.', 'option', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'o', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'tag', 'opt', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Message', 'Format', '.', 'format', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'AST#method_invocation#Left', 'J', 'G', 'it', 'Text', '.', 'get', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'in', 'valid', 'Tag', 'Option', 'AST#field_access#Right', ',', 'o', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Start', 'Content', 'Mod', 'er', 'ation', 'Result', 'start', 'Content', 'Mod', 'er', 'ation', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Start', 'Content', 'Mod', 'er', 'ation', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Start', 'Content', 'Mod', 'er', 'ation', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'String', 'quote', 'Repl', 'acement', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 's', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'result', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 's', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#method_invocation#Left', 's', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'char', 'AST#variable_declarator#Left', 'c', '=', 'AST#method_invocation#Left', 's', '.', 'char', 'At', 'AST#argument_list#Left', '(', 'i', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'c', '==', "'", '\\\\', "'", 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'c', '==', "'", '$', "'", 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'result', '.', 'append', 'AST#argument_list#Left', '(', "'", '\\\\', "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'result', '.', 'append', 'AST#argument_list#Left', '(', 'c', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'result', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'void', 'set', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'V', 'new', 'Value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'value', '=', 'new', 'Value', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Query', 'Parser', 'Token', 'Manager', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Char', 'Stream', 'stream', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'input', '_', 'stream', '=', 'stream', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'long', 'value', 'For', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'double', 'el', 'apsed', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'double', 'val', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'mod', 'By', '==', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'val', '=', 'AST#binary_expression#Left', 'el', 'apsed', '/', 'factor', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'else', 'val', '=', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'el', 'apsed', '/', 'factor', 'AST#binary_expression#Right', '%', 'mod', 'By', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'type', '==', "'", '0', "'", 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Math', '.', 'round', 'AST#argument_list#Left', '(', 'val', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', 'else', 'AST#return_statement#Left', 'return', 'AST#cast_expression#Left', '(', 'long', ')', 'val', 'AST#cast_expression#Right', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Long', 'Buffer', 'get', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'long', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'd', 'st', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'd', 'st', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'long', 'Count', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'byte', 'Buffer', '.', 'limit', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'limit', '*', 'AST#field_access#Left', 'Size', 'Of', '.', 'L', 'ONG', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'byte', 'Buffer', '.', 'position', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'position', '*', 'AST#field_access#Left', 'Size', 'Of', '.', 'L', 'ONG', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'byte', 'Buffer', 'instance', 'of', 'Direct', 'Byte', 'Buffer', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#parenthesized_expression#Left', '(', 'AST#cast_expression#Left', '(', 'Direct', 'Byte', 'Buffer', ')', 'byte', 'Buffer', 'AST#cast_expression#Right', ')', 'AST#parenthesized_expression#Right', '.', 'get', 'AST#argument_list#Left', '(', 'd', 'st', ',', 'd', 'st', 'Offset', ',', 'long', 'Count', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#parenthesized_expression#Left', '(', 'AST#cast_expression#Left', '(', 'He', 'ap', 'Byte', 'Buffer', ')', 'byte', 'Buffer', 'AST#cast_expression#Right', ')', 'AST#parenthesized_expression#Right', '.', 'get', 'AST#argument_list#Left', '(', 'd', 'st', ',', 'd', 'st', 'Offset', ',', 'long', 'Count', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'position', 'AST#field_access#Right', '+=', 'long', 'Count', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'remove', 'Error', 'Listen', 'ers', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', '_', 'list', 'eners', '.', 'clear', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Common', 'Token', 'Stream', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Token', 'Source', 'token', 'Source', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'channel', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'this', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'token', 'Source', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'channel', 'AST#field_access#Right', '=', 'channel', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Object', 'P', 'olic', 'ies', 'Result', 'list', 'Object', 'P', 'olic', 'ies', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Object', 'P', 'olic', 'ies', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Object', 'P', 'olic', 'ies', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Object', 'To', 'Pack', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Any', 'Object', 'Id', 'src', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'type', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'src', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'flags', '=', 'AST#binary_expression#Left', 'type', '<<', 'TYPE', '_', 'SH', 'IFT', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'stem', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'char', 's', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'len', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'num', 'V', 'ow', 'els', '=', 'AST#method_invocation#Left', 'num', 'V', 'ow', 'els', 'AST#argument_list#Left', '(', 's', ',', 'len', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#field_access#Left', 'aff', 'ix', 'es', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Aff', 'ix', 'AST#variable_declarator#Left', 'aff', 'ix', '=', 'AST#array_access#Left', 'aff', 'ix', 'es', '[', 'i', ']', 'AST#array_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'num', 'V', 'ow', 'els', '>', 'AST#field_access#Left', 'aff', 'ix', '.', 'vc', 'AST#field_access#Right', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'len', '>', '=', 'AST#binary_expression#Left', 'AST#field_access#Left', 'AST#field_access#Left', 'aff', 'ix', '.', 'aff', 'ix', 'AST#field_access#Right', '.', 'length', 'AST#field_access#Right', '+', '3', 'AST#binary_expression#Right', 'AST#binary_expression#Right', 'AST#binary_expression#Right', '&&', 'AST#method_invocation#Left', 'ends', 'With', 'AST#argument_list#Left', '(', 's', ',', 'len', ',', 'AST#field_access#Left', 'aff', 'ix', '.', 'aff', 'ix', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'len', '-', '=', 'AST#field_access#Left', 'AST#field_access#Left', 'aff', 'ix', '.', 'aff', 'ix', 'AST#field_access#Right', '.', 'length', 'AST#field_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#ternary_expression#Left', 'AST#field_access#Left', 'aff', 'ix', '.', 'pal', 'atal', 'izes', 'AST#field_access#Right', '?', 'AST#method_invocation#Left', 'un', 'pal', 'atal', 'ize', 'AST#argument_list#Left', '(', 's', ',', 'len', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ':', 'len', 'AST#ternary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 'len', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 're', 'cover', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Parser', 'recogn', 'izer', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Rec', 'ogn', 'ition', 'Exception', 'e', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'last', 'Error', 'Index', '==', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'recogn', 'izer', '.', 'get', 'Input', 'Stream', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'index', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'last', 'Error', 'States', '!', '=', 'null', 'AST#binary_expression#Right', 'AST#binary_expression#Right', '&&', 'AST#method_invocation#Left', 'last', 'Error', 'States', '.', 'cont', 'ains', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'recogn', 'izer', '.', 'get', 'State', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'recogn', 'izer', '.', 'cons', 'ume', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'last', 'Error', 'Index', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'recogn', 'izer', '.', 'get', 'Input', 'Stream', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'index', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'last', 'Error', 'States', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'last', 'Error', 'States', '=', 'AST#object_creation_expression#Left', 'new', 'Inter', 'val', 'Set', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'last', 'Error', 'States', '.', 'add', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'recogn', 'izer', '.', 'get', 'State', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'Inter', 'val', 'Set', 'AST#variable_declarator#Left', 'follow', 'Set', '=', 'AST#method_invocation#Left', 'get', 'Error', 'Rec', 'overy', 'Set', 'AST#argument_list#Left', '(', 'recogn', 'izer', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'cons', 'ume', 'Until', 'AST#argument_list#Left', '(', 'recogn', 'izer', ',', 'follow', 'Set', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'Form', 'ula', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 'value', '=', 'field', '_', '3', '_', 'string', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'len', '=', 'AST#method_invocation#Left', 'value', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'sb', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'len', '+', '4', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', 'FORM', 'UL', 'A', '_', 'D', 'EL', 'IM', 'IT', 'ER', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'len', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'char', 'AST#variable_declarator#Left', 'c', '=', 'AST#method_invocation#Left', 'value', '.', 'char', 'At', 'AST#argument_list#Left', '(', 'i', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'c', '==', 'FORM', 'UL', 'A', '_', 'D', 'EL', 'IM', 'IT', 'ER', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', 'FORM', 'UL', 'A', '_', 'D', 'EL', 'IM', 'IT', 'ER', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', 'c', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', 'FORM', 'UL', 'A', '_', 'D', 'EL', 'IM', 'IT', 'ER', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'sb', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Un', 'link', 'Face', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'Link', 'Face', '"', ',', '"', '2018', '-', '07', '-', '20', '"', ',', '"', 'Un', 'link', 'Face', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Prot', 'ocol', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Prot', 'ocol', 'Type', '.', 'HT', 'TPS', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Method', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Method', 'Type', '.', 'POST', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Configuration', 'Option', 'Setting', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'names', 'pace', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'option', 'Name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Names', 'pace', 'AST#argument_list#Left', '(', 'names', 'pace', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Option', 'Name', 'AST#argument_list#Left', '(', 'option', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Value', 'AST#argument_list#Left', '(', 'value', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Char', 'Sequ', 'ence', 'get', 'F', 'ully', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Char', 'Sequ', 'ence', 'key', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'result', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 't', 'ries', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '*', '2', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#method_invocation#Left', 't', 'ries', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Char', 'Sequ', 'ence', 'AST#variable_declarator#Left', 'r', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 't', 'ries', '.', 'get', 'AST#argument_list#Left', '(', 'i', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'F', 'ully', 'AST#argument_list#Left', '(', 'key', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'r', '==', 'null', 'AST#binary_expression#Right', '||', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'r', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', '1', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'r', '.', 'char', 'At', 'AST#argument_list#Left', '(', '0', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', 'E', 'OM', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'result', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'result', '.', 'append', 'AST#argument_list#Left', '(', 'r', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 'result', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Mount', 'Target', 'Security', 'G', 'roups', 'Result', 'desc', 'ribe', 'Mount', 'Target', 'Security', 'G', 'roups', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Mount', 'Target', 'Security', 'G', 'roups', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Mount', 'Target', 'Security', 'G', 'roups', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'A', 'pi', 'M', 'apping', 'Result', 'get', 'A', 'pi', 'M', 'apping', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'A', 'pi', 'M', 'apping', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'A', 'pi', 'M', 'apping', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Http', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'str', 'Url', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'str', 'Url', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Mem', 'F', 'unc', 'P', 'tg', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'sub', 'Ex', 'pr', 'Len', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '1', '_', 'len', '_', 'ref', '_', 'sub', 'expression', '=', 'sub', 'Ex', 'pr', 'Len', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'AST#array_type#Left', 'Term', 'Stats', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'get', 'High', 'Fre', 'q', 'Ter', 'ms', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Index', 'Reader', 'reader', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'num', 'Ter', 'ms', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'field', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'Compar', 'ator', 'AST#type_arguments#Left', '<', 'Term', 'Stats', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'com', 'par', 'ator', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'Exception', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Term', 'Stats', 'Queue', 'AST#variable_declarator#Left', 'ti', 'q', '=', 'null', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'field', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Ter', 'ms', 'AST#variable_declarator#Left', 'terms', '=', 'AST#method_invocation#Left', 'Multi', 'Ter', 'ms', '.', 'get', 'Ter', 'ms', 'AST#argument_list#Left', '(', 'reader', ',', 'field', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'terms', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Runtime', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'field', 'Ġ"', '+', 'field', 'AST#binary_expression#Right', '+', '"', 'Ġnot', 'Ġfound', '"', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'Ter', 'ms', 'En', 'um', 'AST#variable_declarator#Left', 'terms', 'En', 'um', '=', 'AST#method_invocation#Left', 'terms', '.', 'iterator', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ti', 'q', '=', 'AST#object_creation_expression#Left', 'new', 'Term', 'Stats', 'Queue', 'AST#argument_list#Left', '(', 'num', 'Ter', 'ms', ',', 'com', 'par', 'ator', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'ti', 'q', '.', 'fill', 'AST#argument_list#Left', '(', 'field', ',', 'terms', 'En', 'um', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'Collection', 'AST#type_arguments#Left', '<', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'fields', '=', 'AST#method_invocation#Left', 'Field', 'Inf', 'os', '.', 'get', 'Index', 'ed', 'Field', 's', 'AST#argument_list#Left', '(', 'reader', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'fields', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Runtime', 'Exception', 'AST#argument_list#Left', '(', '"', 'no', 'Ġfields', 'Ġfound', 'Ġfor', 'Ġthis', 'Ġindex', '"', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ti', 'q', '=', 'AST#object_creation_expression#Left', 'new', 'Term', 'Stats', 'Queue', 'AST#argument_list#Left', '(', 'num', 'Ter', 'ms', ',', 'com', 'par', 'ator', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'String', 'field', 'Name', ':', 'fields', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Ter', 'ms', 'AST#variable_declarator#Left', 'terms', '=', 'AST#method_invocation#Left', 'Multi', 'Ter', 'ms', '.', 'get', 'Ter', 'ms', 'AST#argument_list#Left', '(', 'reader', ',', 'field', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'terms', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'ti', 'q', '.', 'fill', 'AST#argument_list#Left', '(', 'field', 'Name', ',', 'AST#method_invocation#Left', 'terms', '.', 'iterator', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'Term', 'Stats', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'result', '=', 'AST#array_creation_expression#Left', 'new', 'Term', 'Stats', 'AST#dimensions_expr#Left', '[', 'AST#method_invocation#Left', 'ti', 'q', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'count', '=', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'ti', 'q', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '-', '1', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#while_statement#Left', 'while', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'ti', 'q', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'result', '[', 'count', ']', 'AST#array_access#Right', '=', 'AST#method_invocation#Left', 'ti', 'q', '.', 'pop', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'count', '--', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#while_statement#Right', 'AST#return_statement#Left', 'return', 'result', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Ap', 'ns', 'Vo', 'ip', 'Channel', 'Result', 'delete', 'Ap', 'ns', 'Vo', 'ip', 'Channel', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Ap', 'ns', 'Vo', 'ip', 'Channel', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Ap', 'ns', 'Vo', 'ip', 'Channel', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'F', 'aces', 'Result', 'list', 'F', 'aces', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'F', 'aces', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'F', 'aces', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Shape', 'Field', 'Cache', 'Distance', 'Value', 'Source', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Sp', 'atial', 'Context', 'ctx', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'Shape', 'Field', 'Cache', 'Provider', 'AST#type_arguments#Left', '<', 'Point', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'prov', 'ider', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Point', 'from', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'double', 'multipl', 'ier', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'ctx', 'AST#field_access#Right', '=', 'ctx', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'from', 'AST#field_access#Right', '=', 'from', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'prov', 'ider', 'AST#field_access#Right', '=', 'prov', 'ider', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'multipl', 'ier', 'AST#field_access#Right', '=', 'multipl', 'ier', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'char', 'get', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'check', 'Index', 'AST#argument_list#Left', '(', 'index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'sequence', '.', 'char', 'At', 'AST#argument_list#Left', '(', 'index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Configuration', 'Profile', 'Result', 'update', 'Configuration', 'Profile', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Configuration', 'Profile', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Configuration', 'Profile', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'L', 'if', 'ecycle', 'H', 'ooks', 'Result', 'desc', 'ribe', 'L', 'if', 'ecycle', 'H', 'ooks', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'L', 'if', 'ecycle', 'H', 'ooks', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'L', 'if', 'ecycle', 'H', 'ooks', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Host', 'Res', 'erv', 'ations', 'Result', 'desc', 'ribe', 'Host', 'Res', 'erv', 'ations', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Host', 'Res', 'erv', 'ations', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Host', 'Res', 'erv', 'ations', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'Pred', 'iction', 'Context', 'from', 'Rule', 'Context', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AT', 'N', 'at', 'n', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Rule', 'Context', 'outer', 'Context', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'outer', 'Context', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'outer', 'Context', '=', 'AST#field_access#Left', 'Rule', 'Context', '.', 'EMP', 'TY', 'AST#field_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#field_access#Left', 'outer', 'Context', '.', 'parent', 'AST#field_access#Right', '==', 'null', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'outer', 'Context', '==', 'AST#field_access#Left', 'Rule', 'Context', '.', 'EMP', 'TY', 'AST#field_access#Right', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Pred', 'iction', 'Context', '.', 'EMP', 'TY', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'Pred', 'iction', 'Context', 'AST#variable_declarator#Left', 'parent', '=', 'EMP', 'TY', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'parent', '=', 'AST#method_invocation#Left', 'Pred', 'iction', 'Context', '.', 'from', 'Rule', 'Context', 'AST#argument_list#Left', '(', 'at', 'n', ',', 'AST#field_access#Left', 'outer', 'Context', '.', 'parent', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'AT', 'N', 'State', 'AST#variable_declarator#Left', 'state', '=', 'AST#method_invocation#Left', 'AST#field_access#Left', 'at', 'n', '.', 'states', 'AST#field_access#Right', '.', 'get', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'outer', 'Context', '.', 'inv', 'oking', 'State', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Rule', 'Trans', 'ition', 'AST#variable_declarator#Left', 'trans', 'ition', '=', 'AST#cast_expression#Left', '(', 'Rule', 'Trans', 'ition', ')', 'AST#method_invocation#Left', 'state', '.', 'trans', 'ition', 'AST#argument_list#Left', '(', '0', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Sing', 'leton', 'Pred', 'iction', 'Context', '.', 'create', 'AST#argument_list#Left', '(', 'parent', ',', 'AST#field_access#Left', 'AST#field_access#Left', 'trans', 'ition', '.', 'follow', 'State', 'AST#field_access#Right', '.', 'state', 'Number', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'buffer', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"[', 'S', 'X', 'VD', 'EX', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'gr', 'bit', '1', 'Ġ=', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'int', 'To', 'H', 'ex', 'AST#argument_list#Left', '(', '_', 'gr', 'bit', '1', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'gr', 'bit', '2', 'Ġ=', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'byte', 'To', 'H', 'ex', 'AST#argument_list#Left', '(', '_', 'gr', 'bit', '2', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'cit', 'm', 'Show', 'Ġ=', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'byte', 'To', 'H', 'ex', 'AST#argument_list#Left', '(', '_', 'cit', 'm', 'Show', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'is', 'x', 'di', 'Sort', 'Ġ=', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'short', 'To', 'H', 'ex', 'AST#argument_list#Left', '(', '_', 'is', 'x', 'di', 'Sort', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'is', 'x', 'di', 'Show', 'Ġ=', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'short', 'To', 'H', 'ex', 'AST#argument_list#Left', '(', '_', 'is', 'x', 'di', 'Show', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'sub', 'total', 'Name', 'Ġ=', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '_', 'sub', 'total', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', '[/', 'S', 'X', 'VD', 'EX', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'buffer', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'r', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Bl', 'ame', 'Result', ':', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Result', 'Path', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'r', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Change', 'S', 'ets', 'Result', 'list', 'Change', 'S', 'ets', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Change', 'S', 'ets', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Change', 'S', 'ets', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'is', 'Allow', 'Non', 'Fast', 'For', 'wards', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'allow', 'Non', 'Fast', 'For', 'wards', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'F', 'eat', 'Record', 'AST#ERROR#Left', '(', ')', '{', 'AST#ERROR#Right', 'AST#variable_declarator#Left', 'future', 'Header', '=', 'AST#object_creation_expression#Left', 'new', 'F', 'tr', 'Header', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'future', 'Header', '.', 'set', 'Record', 'Type', 'AST#argument_list#Left', '(', 'sid', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Short', 'Buffer', 'put', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'short', 'c', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Read', 'Only', 'Buffer', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Query', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Char', 'Sequ', 'ence', 'query', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'query', 'AST#field_access#Right', '=', 'query', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'message', 'AST#field_access#Right', '=', 'AST#object_creation_expression#Left', 'new', 'Message', 'Impl', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Query', 'Parser', 'Mess', 'ages', '.', 'IN', 'VAL', 'ID', '_', 'SY', 'N', 'TA', 'X', '_', 'CAN', 'NOT', '_', 'PAR', 'SE', 'AST#field_access#Right', ',', 'query', ',', '""', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'St', 'ash', 'Apply', 'Command', 'st', 'ash', 'Apply', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'St', 'ash', 'Apply', 'Command', 'AST#argument_list#Left', '(', 're', 'po', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#generic_type#Left', 'Set', 'AST#type_arguments#Left', '<', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'name', 'Set', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Col', 'lections', '.', 'un', 'mod', 'ifiable', 'Set', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'd', 'ictionary', '.', 'values', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'int', 'get', 'Effective', 'Port', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'sche', 'me', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'specified', 'Port', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'specified', 'Port', '!', '=', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'specified', 'Port', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', '"', 'http', '"', '.', 'equ', 'als', 'Ign', 'ore', 'Case', 'AST#argument_list#Left', '(', 'sche', 'me', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', '80', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', '"', 'https', '"', '.', 'equ', 'als', 'Ign', 'ore', 'Case', 'AST#argument_list#Left', '(', 'sche', 'me', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', '443', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Ass', 'essment', 'Tem', 'plates', 'Result', 'list', 'Ass', 'essment', 'Tem', 'plates', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Ass', 'essment', 'Tem', 'plates', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Ass', 'essment', 'Tem', 'plates', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Cl', 'uster', 'rest', 'ore', 'From', 'Cl', 'uster', 'Snap', 'shot', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Rest', 'ore', 'From', 'Cl', 'uster', 'Snap', 'shot', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Rest', 'ore', 'From', 'Cl', 'uster', 'Snap', 'shot', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'add', 'Shape', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'H', 'SS', 'F', 'Shape', 'shape', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'shape', '.', 'set', 'Pat', 'ri', 'arch', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'this', '.', 'get', 'Pat', 'ri', 'arch', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'shape', '.', 'set', 'Parent', 'AST#argument_list#Left', '(', 'this', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sh', 'apes', '.', 'add', 'AST#argument_list#Left', '(', 'shape', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'equ', 'als', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'o', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'this', '==', 'o', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'o', '==', 'null', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', 'AST#method_invocation#Left', 'o', '.', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'F', 'acet', 'Entry', 'AST#variable_declarator#Left', 'that', '=', 'AST#cast_expression#Left', '(', 'F', 'acet', 'Entry', ')', 'o', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'count', '!', '=', 'AST#field_access#Left', 'that', '.', 'count', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'value', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'that', '.', 'value', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'final', 'AST#modifiers#Right', 'int', 'prev', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'b', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'ptr', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'char', 'ch', 'r', 'A', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'ptr', '==', 'AST#field_access#Left', 'b', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', '--', 'ptr', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#while_statement#Left', 'while', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'ptr', '>', '=', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#array_access#Left', 'b', '[', 'AST#update_expression#Left', 'ptr', '--', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '==', 'ch', 'r', 'A', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'ptr', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#while_statement#Right', 'AST#return_statement#Left', 'return', 'ptr', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'bo', 'olean', 'is', 'Delta', 'Represent', 'ation', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'd', 'elta', 'Base', '!', '=', 'null', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Token', 'em', 'it', 'EO', 'F', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'c', 'pos', '=', 'AST#method_invocation#Left', 'get', 'Char', 'Position', 'In', 'Line', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'line', '=', 'AST#method_invocation#Left', 'get', 'Line', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Token', 'AST#variable_declarator#Left', 'e', 'of', '=', 'AST#method_invocation#Left', '_', 'f', 'actory', '.', 'create', 'AST#argument_list#Left', '(', '_', 'token', 'Factory', 'Source', 'P', 'air', ',', 'AST#field_access#Left', 'Token', '.', 'EO', 'F', 'AST#field_access#Right', ',', 'null', ',', 'AST#field_access#Left', 'Token', '.', 'DE', 'FAULT', '_', 'CH', 'ANN', 'EL', 'AST#field_access#Right', ',', 'AST#method_invocation#Left', '_', 'input', '.', 'index', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#binary_expression#Left', 'AST#method_invocation#Left', '_', 'input', '.', 'index', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '-', '1', 'AST#binary_expression#Right', ',', 'line', ',', 'c', 'pos', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'em', 'it', 'AST#argument_list#Left', '(', 'e', 'of', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'e', 'of', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Update', 'User', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'user', 'Name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'User', 'Name', 'AST#argument_list#Left', '(', 'user', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Rev', 'Filter', 'ne', 'gate', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Not', 'Rev', 'Filter', '.', 'create', 'AST#argument_list#Left', '(', 'this', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'T', 'agger', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Person', 'Ident', 't', 'agger', 'Ident', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 't', 'agger', '=', 't', 'agger', 'Ident', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'Buffer', 'Size', 'automatic', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Runtime', 'AST#variable_declarator#Left', 'rt', '=', 'AST#method_invocation#Left', 'Runtime', '.', 'get', 'Runtime', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'long', 'AST#variable_declarator#Left', 'max', '=', 'AST#method_invocation#Left', 'rt', '.', 'max', 'Memory', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'long', 'AST#variable_declarator#Left', 'total', '=', 'AST#method_invocation#Left', 'rt', '.', 'total', 'Memory', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'long', 'AST#variable_declarator#Left', 'free', '=', 'AST#method_invocation#Left', 'rt', '.', 'free', 'Memory', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'long', 'AST#variable_declarator#Left', 'total', 'Available', 'Bytes', '=', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'max', '-', 'total', 'AST#binary_expression#Right', '+', 'free', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'long', 'AST#variable_declarator#Left', 'sort', 'Buffer', 'Byte', 'Size', '=', 'AST#binary_expression#Left', 'free', '/', '2', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'long', 'AST#variable_declarator#Left', 'min', 'Buffer', 'Size', 'Bytes', '=', 'AST#binary_expression#Left', 'MIN', '_', 'BU', 'FFER', '_', 'SIZE', '_', 'MB', '*', 'MB', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'sort', 'Buffer', 'Byte', 'Size', '<', 'min', 'Buffer', 'Size', 'Bytes', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'total', 'Available', 'Bytes', '>', 'AST#binary_expression#Left', '10', '*', 'min', 'Buffer', 'Size', 'Bytes', 'AST#binary_expression#Right', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'total', 'Available', 'Bytes', '/', '2', 'AST#binary_expression#Right', '>', 'min', 'Buffer', 'Size', 'Bytes', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'sort', 'Buffer', 'Byte', 'Size', '=', 'AST#binary_expression#Left', 'total', 'Available', 'Bytes', '/', '2', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'sort', 'Buffer', 'Byte', 'Size', '=', 'AST#method_invocation#Left', 'Math', '.', 'max', 'AST#argument_list#Left', '(', 'A', 'BS', 'OL', 'UTE', '_', 'MIN', '_', 'S', 'ORT', '_', 'BU', 'FFER', '_', 'SIZE', ',', 'sort', 'Buffer', 'Byte', 'Size', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Buffer', 'Size', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Math', '.', 'min', 'AST#argument_list#Left', '(', 'AST#cast_expression#Left', '(', 'long', ')', 'AST#field_access#Left', 'Integer', '.', 'MAX', '_', 'VALUE', 'AST#field_access#Right', 'AST#cast_expression#Right', ',', 'sort', 'Buffer', 'Byte', 'Size', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'int', 'tr', 'im', 'Tra', 'iling', 'Wh', 'ites', 'pace', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'raw', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'start', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'end', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'ptr', '=', 'AST#binary_expression#Left', 'end', '-', '1', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#while_statement#Left', 'while', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'start', '<', '=', 'ptr', 'AST#binary_expression#Right', '&&', 'AST#method_invocation#Left', 'is', 'Wh', 'ites', 'pace', 'AST#argument_list#Left', '(', 'AST#array_access#Left', 'raw', '[', 'ptr', ']', 'AST#array_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'ptr', '--', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#while_statement#Right', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'ptr', '+', '1', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Top', 'Marg', 'in', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Input', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '1', '_', 'margin', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Double', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Ret', 'rieve', 'Environment', 'Info', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Environment', 'Info', 'Type', 'info', 'Type', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Info', 'Type', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'info', 'Type', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Player', 'S', 'essions', 'Result', 'create', 'Player', 'S', 'essions', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Player', 'S', 'essions', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Player', 'S', 'essions', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Proxy', 'Session', 'Result', 'create', 'Proxy', 'Session', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Proxy', 'Session', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Proxy', 'Session', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'get', 'Object', 'Type', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'type', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'get', 'Sche', 'me', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'sche', 'me', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'char', 'acters', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'ch', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'start', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'length', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'cont', 'ents', '.', 'append', 'AST#argument_list#Left', '(', 'ch', ',', 'start', ',', 'length', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'F', 'etch', 'Al', 'bum', 'Tag', 'Photos', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'Cloud', 'Photo', '"', ',', '"', '2017', '-', '07', '-', '11', '"', ',', '"', 'F', 'etch', 'Al', 'bum', 'Tag', 'Photos', '"', ',', '"', 'cloud', 'photo', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Prot', 'ocol', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Prot', 'ocol', 'Type', '.', 'HT', 'TPS', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Members', 'Result', 'delete', 'Members', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Members', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Members', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Contact', 'Re', 'ach', 'ability', 'Status', 'Result', 'get', 'Contact', 'Re', 'ach', 'ability', 'Status', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Contact', 'Re', 'ach', 'ability', 'Status', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Contact', 'Re', 'ach', 'ability', 'Status', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'AST#marker_annotation#Left', '@', 'Override', 'AST#marker_annotation#Right', 'public', 'AST#modifiers#Right', 'bo', 'olean', 'remove', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'o', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'AST#field_access#Left', 'Impl', '.', 'this', 'AST#field_access#Right', '.', 'remove', 'AST#argument_list#Left', '(', 'o', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', 'null', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'E', 'last', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'back', 'ing', 'Map', '.', 'last', 'Key', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Stream', 'ing', 'Dist', 'ribution', 'Result', 'create', 'Stream', 'ing', 'Dist', 'ribution', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Stream', 'ing', 'Dist', 'ribution', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Stream', 'ing', 'Dist', 'ribution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'is', 'Abs', 'olute', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'absolute', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Disable', 'Add', 'On', 'Result', 'disable', 'Add', 'On', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Disable', 'Add', 'On', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Disable', 'Add', 'On', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Alias', 'Result', 'desc', 'ribe', 'Alias', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Alias', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Alias', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'next', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'd', 'elta', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#while_statement#Left', 'while', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#update_expression#Left', '--', 'd', 'elta', 'AST#update_expression#Right', '>', '=', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'current', 'Sub', 'tree', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ptr', '+=', 'AST#method_invocation#Left', 'current', 'Sub', 'tree', '.', 'get', 'Entry', 'Sp', 'an', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'else', 'ptr', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'e', 'of', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'parse', 'Entry', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#while_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Rev', 'Filter', 'clone', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'B', 'inary', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'a', '.', 'clone', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#method_invocation#Left', 'b', '.', 'clone', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Reader', 'create', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Reader', 'input', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Pers', 'ian', 'Char', 'Filter', 'AST#argument_list#Left', '(', 'input', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'option', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'option', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'String', 'Builder', 'AST#variable_declarator#Left', 'sb', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', '"', '["', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'Object', 'item', ':', 'this', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'sb', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '>', '1', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '",', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'item', 'instance', 'of', 'AST#array_type#Left', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', 'AST#cast_expression#Left', '(', 'AST#array_type#Left', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', ')', 'item', 'AST#cast_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', 'item', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', "']", "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Sign', 'aling', 'Channel', 'Result', 'desc', 'ribe', 'Sign', 'aling', 'Channel', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Sign', 'aling', 'Channel', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Sign', 'aling', 'Channel', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Attach', 'Static', 'I', 'p', 'Result', 'attach', 'Static', 'I', 'p', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Attach', 'Static', 'I', 'p', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Attach', 'Static', 'I', 'p', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'sb', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', '64', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Cell', 'Reference', 'AST#variable_declarator#Left', 'cr', 'A', '=', 'AST#object_creation_expression#Left', 'new', 'Cell', 'Reference', 'AST#argument_list#Left', '(', '_', 'first', 'Row', 'Index', ',', '_', 'first', 'Column', 'Index', ',', 'false', ',', 'false', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Cell', 'Reference', 'AST#variable_declarator#Left', 'cr', 'B', '=', 'AST#object_creation_expression#Left', 'new', 'Cell', 'Reference', 'AST#argument_list#Left', '(', '_', 'last', 'Row', 'Index', ',', '_', 'last', 'Column', 'Index', ',', 'false', ',', 'false', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ["', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'cr', 'A', '.', 'format', 'As', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', "':", "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'cr', 'B', '.', 'format', 'As', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"]', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'sb', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Bloom', 'Fil', 'tering', 'Post', 'ings', 'Format', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Post', 'ings', 'Format', 'de', 'legate', 'Post', 'ings', 'Format', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Bloom', 'Filter', 'Factory', 'bl', 'oom', 'Filter', 'Factory', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'BL', 'O', 'OM', '_', 'C', 'OD', 'EC', '_', 'NAME', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'de', 'legate', 'Post', 'ings', 'Format', 'AST#field_access#Right', '=', 'de', 'legate', 'Post', 'ings', 'Format', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'bl', 'oom', 'Filter', 'Factory', 'AST#field_access#Right', '=', 'bl', 'oom', 'Filter', 'Factory', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Tem', 'plates', 'Result', 'list', 'Tem', 'plates', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Tem', 'plates', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Tem', 'plates', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Timer', 'Thread', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'long', 'resolution', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Counter', 'counter', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'TH', 'READ', '_', 'NAME', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'resolution', 'AST#field_access#Right', '=', 'resolution', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'counter', 'AST#field_access#Right', '=', 'counter', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'this', '.', 'set', 'Da', 'emon', 'AST#argument_list#Left', '(', 'true', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Draw', 'ing', 'Record', 'AST#ERROR#Left', '(', ')', '{', 'AST#ERROR#Right', 'AST#variable_declarator#Left', 'record', 'Data', '=', 'EMP', 'TY', '_', 'BY', 'TE', '_', 'AR', 'RAY', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Direct', 'ories', 'Result', 'list', 'Direct', 'ories', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Direct', 'ories', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Direct', 'ories', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'dec', 'ode', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'blocks', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'blocks', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'int', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'values', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'values', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'iter', 'ations', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'j', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'j', '<', 'iter', 'ations', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', '++', 'j', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'byte', 'AST#variable_declarator#Left', 'block', '=', 'AST#array_access#Left', 'blocks', '[', 'AST#update_expression#Left', 'blocks', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'block', '>>>', '7', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '&', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'block', '>>>', '6', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '&', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'block', '>>>', '5', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '&', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'block', '>>>', '4', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '&', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'block', '>>>', '3', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '&', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'block', '>>>', '2', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '&', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'block', '>>>', '1', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '&', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'block', '&', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Group', 'ing', 'Search', 'disable', 'C', 'aching', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'max', 'Cache', 'RAM', 'MB', 'AST#field_access#Right', '=', 'null', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'max', 'Doc', 's', 'To', 'Cache', 'AST#field_access#Right', '=', 'null', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'int', 'ide', 'al', 'Byte', 'Array', 'Size', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'need', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '4', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', '32', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'need', '<', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', '1', '<<', 'i', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '-', '12', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', '1', '<<', 'i', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '-', '12', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 'need', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Ass', 'essment', 'Target', 'Result', 'update', 'Ass', 'essment', 'Target', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Ass', 'essment', 'Target', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Ass', 'essment', 'Target', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Mod', 'ify', 'Volume', 'Result', 'mod', 'ify', 'Volume', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Mod', 'ify', 'Volume', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Mod', 'ify', 'Volume', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Cell', 'mer', 'ge', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Cell', 'm', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Cell', 'e', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#field_access#Left', 'm', '.', 'cmd', 'AST#field_access#Right', '==', 'AST#field_access#Left', 'e', '.', 'cmd', 'AST#field_access#Right', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'AST#field_access#Left', 'm', '.', 'ref', 'AST#field_access#Right', '==', 'AST#field_access#Left', 'e', '.', 'ref', 'AST#field_access#Right', 'AST#binary_expression#Right', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'AST#field_access#Left', 'm', '.', 'skip', 'AST#field_access#Right', '==', 'AST#field_access#Left', 'e', '.', 'skip', 'AST#field_access#Right', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Cell', 'AST#variable_declarator#Left', 'c', '=', 'AST#object_creation_expression#Left', 'new', 'Cell', 'AST#argument_list#Left', '(', 'm', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'c', '.', 'c', 'nt', 'AST#field_access#Right', '+=', 'AST#field_access#Left', 'e', '.', 'c', 'nt', 'AST#field_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'c', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'null', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Byte', 'Buffer', 'read', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'length', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'long', 'position', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'position', '>', '=', 'AST#method_invocation#Left', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Index', 'Out', 'Of', 'B', 'ounds', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'Position', 'Ġ"', '+', 'position', 'AST#binary_expression#Right', '+', '"', 'Ġpast', 'Ġthe', 'Ġend', 'Ġof', 'Ġthe', 'Ġfile', '"', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'Byte', 'Buffer', 'd', 'st', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'writ', 'able', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'd', 'st', '=', 'AST#method_invocation#Left', 'channel', '.', 'map', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'AST#field_access#Left', 'File', 'Channel', '.', 'Map', 'Mode', 'AST#field_access#Right', '.', 'READ', '_', 'WR', 'ITE', 'AST#field_access#Right', ',', 'position', ',', 'length', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buff', 'ers', 'To', 'Clean', '.', 'add', 'AST#argument_list#Left', '(', 'd', 'st', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'channel', '.', 'position', 'AST#argument_list#Left', '(', 'position', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'd', 'st', '=', 'AST#method_invocation#Left', 'Byte', 'Buffer', '.', 'all', 'ocate', 'AST#argument_list#Left', '(', 'length', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'worked', '=', 'AST#method_invocation#Left', 'I', 'OU', 't', 'ils', '.', 'read', 'F', 'ully', 'AST#argument_list#Left', '(', 'channel', ',', 'd', 'st', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'worked', '==', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Index', 'Out', 'Of', 'B', 'ounds', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'Position', 'Ġ"', '+', 'position', 'AST#binary_expression#Right', '+', '"', 'Ġpast', 'Ġthe', 'Ġend', 'Ġof', 'Ġthe', 'Ġfile', '"', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'd', 'st', '.', 'position', 'AST#argument_list#Left', '(', '0', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'd', 'st', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'respond', 'Activity', 'Task', 'Completed', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Resp', 'ond', 'Activity', 'Task', 'Completed', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'execute', 'Resp', 'ond', 'Activity', 'Task', 'Completed', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'syn', 'chron', 'ized', 'final', 'AST#modifiers#Right', 'void', 'incre', 'ment', 'Progress', 'By', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'diff', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Progress', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'm', 'Progress', '+', 'diff', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Met', 'adata', 'Diff', 'comp', 'are', 'Met', 'adata', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Dir', 'Cache', 'Entry', 'entry', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'entry', '.', 'is', 'Ass', 'ume', 'Valid', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Met', 'adata', 'Diff', '.', 'E', 'QU', 'AL', 'AST#field_access#Right', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'entry', '.', 'is', 'Update', 'Need', 'ed', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Met', 'adata', 'Diff', '.', 'D', 'IF', 'FER', '_', 'BY', '_', 'MET', 'AD', 'ATA', 'AST#field_access#Right', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'is', 'Mode', 'Different', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'entry', '.', 'get', 'Raw', 'Mode', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Met', 'adata', 'Diff', '.', 'D', 'IF', 'FER', '_', 'BY', '_', 'MET', 'AD', 'ATA', 'AST#field_access#Right', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'type', '=', 'AST#binary_expression#Left', 'mode', '&', 'AST#field_access#Left', 'File', 'Mode', '.', 'TYPE', '_', 'MAS', 'K', 'AST#field_access#Right', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'type', '==', 'AST#field_access#Left', 'File', 'Mode', '.', 'TYPE', '_', 'T', 'REE', 'AST#field_access#Right', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'type', '==', 'AST#field_access#Left', 'File', 'Mode', '.', 'TYPE', '_', 'G', 'IT', 'L', 'INK', 'AST#field_access#Right', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Met', 'adata', 'Diff', '.', 'E', 'QU', 'AL', 'AST#field_access#Right', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'entry', '.', 'is', 'Sm', 'ud', 'ged', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', '&&', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'entry', '.', 'get', 'Length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', 'AST#cast_expression#Left', '(', 'int', ')', 'AST#method_invocation#Left', 'get', 'Entry', 'Length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Met', 'adata', 'Diff', '.', 'D', 'IF', 'FER', '_', 'BY', '_', 'MET', 'AD', 'ATA', 'AST#field_access#Right', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'Instant', 'AST#variable_declarator#Left', 'cache', 'Last', 'Mod', 'ified', '=', 'AST#method_invocation#Left', 'entry', '.', 'get', 'Last', 'Mod', 'ified', 'Instant', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Instant', 'AST#variable_declarator#Left', 'file', 'Last', 'Mod', 'ified', '=', 'AST#method_invocation#Left', 'get', 'Entry', 'Last', 'Mod', 'ified', 'Instant', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'tim', 'estamp', 'Compar', 'ator', '.', 'comp', 'are', 'AST#argument_list#Left', '(', 'cache', 'Last', 'Mod', 'ified', ',', 'file', 'Last', 'Mod', 'ified', ',', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Options', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Check', 'Stat', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', 'AST#field_access#Left', 'Check', 'Stat', '.', 'MIN', 'IM', 'AL', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Met', 'adata', 'Diff', '.', 'D', 'IF', 'FER', '_', 'BY', '_', 'T', 'IM', 'EST', 'AMP', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'entry', '.', 'is', 'Sm', 'ud', 'ged', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Met', 'adata', 'Diff', '.', 'SM', 'UD', 'G', 'ED', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Met', 'adata', 'Diff', '.', 'E', 'QU', 'AL', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'Number', 'Record', 'con', 'vert', 'To', 'Number', 'Record', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'R', 'K', 'Record', 'r', 'k', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Number', 'Record', 'AST#variable_declarator#Left', 'num', '=', 'AST#object_creation_expression#Left', 'new', 'Number', 'Record', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'num', '.', 'set', 'Column', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'r', 'k', '.', 'get', 'Column', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'num', '.', 'set', 'Row', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'r', 'k', '.', 'get', 'Row', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'num', '.', 'set', 'X', 'F', 'Index', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'r', 'k', '.', 'get', 'X', 'F', 'Index', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'num', '.', 'set', 'Value', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'r', 'k', '.', 'get', 'R', 'K', 'Number', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'num', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Char', 'Buffer', 'put', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'src', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'src', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'char', 'Count', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'byte', 'Buffer', '.', 'limit', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'limit', '*', 'AST#field_access#Left', 'Size', 'Of', '.', 'CHAR', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'byte', 'Buffer', '.', 'position', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'position', '*', 'AST#field_access#Left', 'Size', 'Of', '.', 'CHAR', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'byte', 'Buffer', 'instance', 'of', 'Read', 'Write', 'Direct', 'Byte', 'Buffer', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#parenthesized_expression#Left', '(', 'AST#cast_expression#Left', '(', 'Read', 'Write', 'Direct', 'Byte', 'Buffer', ')', 'byte', 'Buffer', 'AST#cast_expression#Right', ')', 'AST#parenthesized_expression#Right', '.', 'put', 'AST#argument_list#Left', '(', 'src', ',', 'src', 'Offset', ',', 'char', 'Count', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#parenthesized_expression#Left', '(', 'AST#cast_expression#Left', '(', 'Read', 'Write', 'He', 'ap', 'Byte', 'Buffer', ')', 'byte', 'Buffer', 'AST#cast_expression#Right', ')', 'AST#parenthesized_expression#Right', '.', 'put', 'AST#argument_list#Left', '(', 'src', ',', 'src', 'Offset', ',', 'char', 'Count', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'position', 'AST#field_access#Right', '+=', 'char', 'Count', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'get', 'C', 'ells', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'Iterator', 'AST#type_arguments#Left', '<', 'Character', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'i', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'cells', '.', 'key', 'Set', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'iterator', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'size', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', ';', 'AST#method_invocation#Left', 'i', '.', 'has', 'Next', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Character', 'AST#variable_declarator#Left', 'c', '=', 'AST#method_invocation#Left', 'i', '.', 'next', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Cell', 'AST#variable_declarator#Left', 'e', '=', 'AST#method_invocation#Left', 'at', 'AST#argument_list#Left', '(', 'c', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#field_access#Left', 'e', '.', 'cmd', 'AST#field_access#Right', '>', '=', '0', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'AST#field_access#Left', 'e', '.', 'ref', 'AST#field_access#Right', '>', '=', '0', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'size', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 'size', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Be', 'ider', 'M', 'orse', 'Filter', 'Factory', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'Map', 'AST#type_arguments#Left', '<', 'String', ',', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'args', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'args', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'Name', 'Type', 'AST#variable_declarator#Left', 'name', 'Type', '=', 'AST#method_invocation#Left', 'Name', 'Type', '.', 'value', 'Of', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'AST#argument_list#Left', '(', 'args', ',', '"', 'name', 'Type', '"', ',', 'AST#method_invocation#Left', 'AST#field_access#Left', 'Name', 'Type', '.', 'GEN', 'ER', 'IC', 'AST#field_access#Right', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Rule', 'Type', 'AST#variable_declarator#Left', 'rule', 'Type', '=', 'AST#method_invocation#Left', 'Rule', 'Type', '.', 'value', 'Of', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'AST#argument_list#Left', '(', 'args', ',', '"', 'rule', 'Type', '"', ',', 'AST#method_invocation#Left', 'AST#field_access#Left', 'Rule', 'Type', '.', 'AP', 'PRO', 'X', 'AST#field_access#Right', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'bo', 'olean', 'AST#variable_declarator#Left', 'con', 'cat', '=', 'AST#method_invocation#Left', 'get', 'Boo', 'lean', 'AST#argument_list#Left', '(', 'args', ',', '"', 'con', 'cat', '"', ',', 'true', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'engine', '=', 'AST#object_creation_expression#Left', 'new', 'Ph', 'on', 'etic', 'Engine', 'AST#argument_list#Left', '(', 'name', 'Type', ',', 'rule', 'Type', ',', 'con', 'cat', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'Set', 'AST#type_arguments#Left', '<', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'lang', 's', '=', 'AST#method_invocation#Left', 'get', 'Set', 'AST#argument_list#Left', '(', 'args', ',', '"', 'language', 'Set', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'language', 'Set', '=', 'AST#ternary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'null', '==', 'lang', 's', 'AST#binary_expression#Right', '||', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '1', '==', 'AST#method_invocation#Left', 'lang', 's', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '&&', 'AST#method_invocation#Left', 'lang', 's', '.', 'cont', 'ains', 'AST#argument_list#Left', '(', '"', 'auto', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '?', 'null', ':', 'AST#method_invocation#Left', 'Language', 'Set', '.', 'from', 'AST#argument_list#Left', '(', 'lang', 's', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#ternary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'args', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'Unknown', 'Ġparameters', ':', 'Ġ"', '+', 'args', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'double', 'v', 'arp', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'double', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'v', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'double', 'AST#variable_declarator#Left', 'r', '=', 'AST#field_access#Left', 'Double', '.', 'Na', 'N', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'v', '!', '=', 'null', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'AST#field_access#Left', 'v', '.', 'length', 'AST#field_access#Right', '>', '1', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'r', '=', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'dev', 'sq', 'AST#argument_list#Left', '(', 'v', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '/', 'AST#field_access#Left', 'v', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'r', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Pers', 'ian', 'Normal', 'ization', 'Filter', 'Factory', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'Map', 'AST#type_arguments#Left', '<', 'String', ',', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'args', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'args', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'args', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'Unknown', 'Ġparameters', ':', 'Ġ"', '+', 'args', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'AST#array_type#Left', 'Weight', 'ed', 'Term', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'get', 'Ter', 'ms', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Query', 'query', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'bo', 'olean', 'pro', 'hibited', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'field', 'Name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'Hash', 'Set', 'AST#type_arguments#Left', '<', 'Weight', 'ed', 'Term', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'terms', '=', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Hash', 'Set', 'AST#type_arguments#Left', '<', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'Pred', 'icate', 'AST#type_arguments#Left', '<', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'field', 'Select', 'or', '=', 'AST#ternary_expression#Left', 'AST#binary_expression#Left', 'field', 'Name', '==', 'null', 'AST#binary_expression#Right', '?', 'AST#lambda_expression#Left', 'f', '->', 'true', 'AST#lambda_expression#Right', ':', 'AST#method_reference#Left', 'field', 'Name', '::', 'equ', 'als', 'AST#method_reference#Right', 'AST#ternary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'query', '.', 'vis', 'it', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Boost', 'ed', 'Term', 'Ext', 'ractor', 'AST#argument_list#Left', '(', '1', ',', 'terms', ',', 'pro', 'hibited', ',', 'field', 'Select', 'or', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'terms', '.', 'to', 'Array', 'AST#argument_list#Left', '(', 'AST#array_creation_expression#Left', 'new', 'Weight', 'ed', 'Term', 'AST#dimensions_expr#Left', '[', '0', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Document', 'ation', 'Part', 'Result', 'delete', 'Document', 'ation', 'Part', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Document', 'ation', 'Part', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Document', 'ation', 'Part', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'sb', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"[', 'CH', 'ART', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'x', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'X', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', "'", '\\', 'n', "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'y', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Y', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', "'", '\\', 'n', "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'width', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Width', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', "'", '\\', 'n', "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'height', '=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Height', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', "'", '\\', 'n', "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', '[/', 'CH', 'ART', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'sb', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'short', 'get', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'check', 'Index', 'AST#argument_list#Left', '(', 'index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#array_access#Left', 'back', 'ing', 'Array', '[', 'AST#binary_expression#Left', 'offset', '+', 'index', 'AST#binary_expression#Right', ']', 'AST#array_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'image', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Value', 'E', 'val', 'evaluate', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'src', 'Row', 'Index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'src', 'Column', 'Index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Value', 'E', 'val', 'arg', '0', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Value', 'E', 'val', 'arg', '1', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Area', 'E', 'val', 'AST#variable_declarator#Left', 're', 'A', '=', 'AST#method_invocation#Left', 'evaluate', 'Ref', 'AST#argument_list#Left', '(', 'arg', '0', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Area', 'E', 'val', 'AST#variable_declarator#Left', 're', 'B', '=', 'AST#method_invocation#Left', 'evaluate', 'Ref', 'AST#argument_list#Left', '(', 'arg', '1', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Area', 'E', 'val', 'AST#variable_declarator#Left', 'result', '=', 'AST#method_invocation#Left', 'res', 'olve', 'Range', 'AST#argument_list#Left', '(', 're', 'A', ',', 're', 'B', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'result', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Error', 'E', 'val', '.', 'NULL', '_', 'INT', 'ERS', 'ECTION', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'result', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'E', 'val', 'uation', 'Exception', 'e', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'e', '.', 'get', 'Error', 'E', 'val', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'clear', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'weight', 'By', 'Sp', 'an', 'Query', '.', 'clear', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'find', 'End', 'Offset', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'Builder', 'buffer', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'start', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'start', '>', 'AST#method_invocation#Left', 'buffer', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'start', '<', '0', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'start', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'bi', '.', 'set', 'Text', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'buffer', '.', 'sub', 'string', 'AST#argument_list#Left', '(', 'start', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'bi', '.', 'next', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '+', 'start', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'final', 'public', 'AST#modifiers#Right', 'S', 'r', 'nd', 'Query', 'Primary', 'Query', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'AST#ERROR#Right', 'AST#expression_statement#Left', 'Par', 'se', 'Exception', 'AST#expression_statement#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'S', 'r', 'nd', 'Query', 'q', ';', 'AST#local_variable_declaration#Right', 'AST#switch_expression#Left', 'switch', 'AST#parenthesized_expression#Left', '(', 'AST#ternary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'jj', '_', 'nt', 'k', '==', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '?', 'AST#method_invocation#Left', 'jj', '_', 'nt', 'k', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ':', 'jj', '_', 'nt', 'k', 'AST#ternary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#switch_block#Left', '{', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'LP', 'AR', 'EN', 'AST#switch_label#Right', ':', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'jj', '_', 'cons', 'ume', '_', 'token', 'AST#argument_list#Left', '(', 'LP', 'AR', 'EN', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'q', '=', 'AST#method_invocation#Left', 'Field', 's', 'Query', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'jj', '_', 'cons', 'ume', '_', 'token', 'AST#argument_list#Left', '(', 'RP', 'AR', 'EN', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'OR', 'AST#switch_label#Right', ':', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'AND', 'AST#switch_label#Right', ':', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'W', 'AST#switch_label#Right', ':', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'N', 'AST#switch_label#Right', ':', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'q', '=', 'AST#method_invocation#Left', 'Pref', 'ix', 'Oper', 'ator', 'Query', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'TR', 'UN', 'C', 'QU', 'OT', 'ED', 'AST#switch_label#Right', ':', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'QU', 'OT', 'ED', 'AST#switch_label#Right', ':', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'SU', 'FF', 'IX', 'TER', 'M', 'AST#switch_label#Right', ':', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'TR', 'UN', 'CT', 'ER', 'M', 'AST#switch_label#Right', ':', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'TER', 'M', 'AST#switch_label#Right', ':', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'q', '=', 'AST#method_invocation#Left', 'Simple', 'Term', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'default', ':', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'jj', '_', 'la', '1', '[', '5', ']', 'AST#array_access#Right', '=', 'jj', '_', 'gen', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'jj', '_', 'cons', 'ume', '_', 'token', 'AST#argument_list#Left', '(', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Par', 'se', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#switch_block_statement_group#Right', '}', 'AST#switch_block#Right', 'AST#switch_expression#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Optional', 'We', 'ights', 'AST#argument_list#Left', '(', 'q', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'true', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'q', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Error', 'AST#argument_list#Left', '(', '"', 'Missing', 'Ġreturn', 'Ġstatement', 'Ġin', 'Ġfunction', '"', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'A', 'pi', 'Key', 'Result', 'delete', 'A', 'pi', 'Key', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'A', 'pi', 'Key', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'A', 'pi', 'Key', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Insert', 'Tags', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'O', 'ts', '"', ',', '"', '2016', '-', '06', '-', '20', '"', ',', '"', 'Insert', 'Tags', '"', ',', '"', 'ots', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Method', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Method', 'Type', '.', 'POST', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'User', 'By', 'Princ', 'ipal', 'Id', 'Result', 'delete', 'User', 'By', 'Princ', 'ipal', 'Id', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'User', 'By', 'Princ', 'ipal', 'Id', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'User', 'By', 'Princ', 'ipal', 'Id', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Network', 'Inter', 'faces', 'Result', 'desc', 'ribe', 'Network', 'Inter', 'faces', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Network', 'Inter', 'faces', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Network', 'Inter', 'faces', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'serial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'data', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Esc', 'her', 'Serial', 'ization', 'Listener', 'list', 'ener', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'list', 'ener', '.', 'before', 'Record', 'Serial', 'ize', 'AST#argument_list#Left', '(', 'offset', ',', 'AST#method_invocation#Left', 'get', 'Record', 'Id', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'this', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Little', 'End', 'ian', '.', 'put', 'Short', 'AST#argument_list#Left', '(', 'data', ',', 'offset', ',', 'AST#method_invocation#Left', 'get', 'Options', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Little', 'End', 'ian', '.', 'put', 'Short', 'AST#argument_list#Left', '(', 'data', ',', 'AST#binary_expression#Left', 'offset', '+', '2', 'AST#binary_expression#Right', ',', 'AST#method_invocation#Left', 'get', 'Record', 'Id', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Little', 'End', 'ian', '.', 'put', 'Int', 'AST#argument_list#Left', '(', 'data', ',', 'AST#binary_expression#Left', 'offset', '+', '4', 'AST#binary_expression#Right', ',', '8', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Little', 'End', 'ian', '.', 'put', 'Int', 'AST#argument_list#Left', '(', 'data', ',', 'AST#binary_expression#Left', 'offset', '+', '8', 'AST#binary_expression#Right', ',', 'field', '_', '1', '_', 'num', 'Sh', 'apes', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Little', 'End', 'ian', '.', 'put', 'Int', 'AST#argument_list#Left', '(', 'data', ',', 'AST#binary_expression#Left', 'offset', '+', '12', 'AST#binary_expression#Right', ',', 'field', '_', '2', '_', 'last', 'MS', 'OSP', 'ID', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'list', 'ener', '.', 'after', 'Record', 'Serial', 'ize', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'offset', '+', '16', 'AST#binary_expression#Right', ',', 'AST#method_invocation#Left', 'get', 'Record', 'Id', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#method_invocation#Left', 'get', 'Record', 'Size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'this', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'get', 'Record', 'Size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Security', 'Configuration', 'Result', 'create', 'Security', 'Configuration', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Security', 'Configuration', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Security', 'Configuration', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Client', 'V', 'pn', 'Connect', 'ions', 'Result', 'desc', 'ribe', 'Client', 'V', 'pn', 'Connect', 'ions', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Client', 'V', 'pn', 'Connect', 'ions', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Client', 'V', 'pn', 'Connect', 'ions', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'void', 'fill', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'double', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'array', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'double', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#field_access#Left', 'array', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'array', '[', 'i', ']', 'AST#array_access#Right', '=', 'value', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'has', 'Next', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'next', 'Id', '<', 'AST#field_access#Left', 'cells', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Post', 'ings', 'En', 'um', 'reset', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'int', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'post', 'ings', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'post', 'ings', 'AST#field_access#Right', '=', 'post', 'ings', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'upt', 'o', '=', 'AST#unary_expression#Left', '-', '2', 'AST#unary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'fre', 'q', '=', '0', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'bo', 'olean', 'has', 'All', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Rev', 'Flag', 'Set', 'set', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'flags', '&', 'AST#field_access#Left', 'set', '.', 'mask', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '==', 'AST#field_access#Left', 'set', '.', 'mask', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Mod', 'ify', 'Account', 'Result', 'mod', 'ify', 'Account', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Mod', 'ify', 'Account', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Mod', 'ify', 'Account', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Token', 'LT', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'k', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'l', 'azy', 'Init', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'k', '==', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'null', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'k', '<', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'LB', 'AST#argument_list#Left', '(', 'AST#unary_expression#Left', '-', 'k', 'AST#unary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'p', '+', 'k', 'AST#binary_expression#Right', '-', '1', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sync', 'AST#argument_list#Left', '(', 'i', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'i', '>', '=', 'AST#method_invocation#Left', 't', 'ok', 'ens', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 't', 'ok', 'ens', '.', 'get', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 't', 'ok', 'ens', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '-', '1', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 't', 'ok', 'ens', '.', 'get', 'AST#argument_list#Left', '(', 'i', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'remove', 'She', 'et', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'sheet', 'Index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'b', 'ounds', 'he', 'ets', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '>', 'sheet', 'Index', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'rec', 'ords', '.', 'remove', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'rec', 'ords', '.', 'get', 'Bs', 'pos', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '-', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'b', 'ounds', 'he', 'ets', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '-', '1', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', '+', 'sheet', 'Index', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'b', 'ounds', 'he', 'ets', '.', 'remove', 'AST#argument_list#Left', '(', 'sheet', 'Index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'fix', 'Tab', 'Id', 'Record', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'sheet', 'Num', '1', 'Based', '=', 'AST#binary_expression#Left', 'sheet', 'Index', '+', '1', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#method_invocation#Left', 'get', 'Num', 'Names', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Name', 'Record', 'AST#variable_declarator#Left', 'nr', '=', 'AST#method_invocation#Left', 'get', 'Name', 'Record', 'AST#argument_list#Left', '(', 'i', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'nr', '.', 'get', 'She', 'et', 'Number', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', 'sheet', 'Num', '1', 'Based', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'nr', '.', 'set', 'She', 'et', 'Number', 'AST#argument_list#Left', '(', '0', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'nr', '.', 'get', 'She', 'et', 'Number', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '>', 'sheet', 'Num', '1', 'Based', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'nr', '.', 'set', 'She', 'et', 'Number', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'nr', '.', 'get', 'She', 'et', 'Number', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '-', '1', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'link', 'Table', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'link', 'Table', '.', 'remove', 'She', 'et', 'AST#argument_list#Left', '(', 'sheet', 'Index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'remove', 'Name', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'index', '=', 'AST#method_invocation#Left', 'get', 'Name', 'Index', 'AST#argument_list#Left', '(', 'name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'remove', 'Name', 'AST#argument_list#Left', '(', 'index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'equ', 'als', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'final', 'Object', 'o', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'o', 'instance', 'of', 'Property', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'final', 'Property', 'AST#variable_declarator#Left', 'p', '=', 'AST#cast_expression#Left', '(', 'Property', ')', 'o', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'Object', 'AST#variable_declarator#Left', 'p', 'Value', '=', 'AST#method_invocation#Left', 'p', '.', 'get', 'Value', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'long', 'AST#variable_declarator#Left', 'p', 'Id', '=', 'AST#method_invocation#Left', 'p', '.', 'get', 'ID', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'id', '!', '=', 'p', 'Id', 'AST#binary_expression#Right', '||', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'id', '!', '=', '0', 'AST#binary_expression#Right', '&&', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'types', 'Are', 'E', 'qual', 'AST#argument_list#Left', '(', 'type', ',', 'AST#method_invocation#Left', 'p', '.', 'get', 'Type', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'value', '==', 'null', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'p', 'Value', '==', 'null', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'value', '==', 'null', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'p', 'Value', '==', 'null', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'final', 'AST#generic_type#Left', 'Class', 'AST#type_arguments#Left', '<', '?', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'value', 'Class', '=', 'AST#method_invocation#Left', 'value', '.', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'AST#generic_type#Left', 'Class', 'AST#type_arguments#Left', '<', '?', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'p', 'Value', 'Class', '=', 'AST#method_invocation#Left', 'p', 'Value', '.', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#unary_expression#Left', '!', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'value', 'Class', '.', 'is', 'Ass', 'ign', 'able', 'From', 'AST#argument_list#Left', '(', 'p', 'Value', 'Class', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#unary_expression#Right', '&&', 'AST#unary_expression#Left', '!', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'p', 'Value', 'Class', '.', 'is', 'Ass', 'ign', 'able', 'From', 'AST#argument_list#Left', '(', 'value', 'Class', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#unary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'value', 'instance', 'of', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'this', 'Val', '=', 'AST#cast_expression#Left', '(', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', ')', 'value', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ',', 'AST#variable_declarator#Left', 'other', 'Val', '=', 'AST#cast_expression#Left', '(', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', ')', 'p', 'Value', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'len', '=', 'AST#method_invocation#Left', 'un', 'p', 'added', 'Length', 'AST#argument_list#Left', '(', 'this', 'Val', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'len', '!', '=', 'AST#method_invocation#Left', 'un', 'p', 'added', 'Length', 'AST#argument_list#Left', '(', 'other', 'Val', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'len', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#array_access#Left', 'this', 'Val', '[', 'i', ']', 'AST#array_access#Right', '!', '=', 'AST#array_access#Left', 'other', 'Val', '[', 'i', ']', 'AST#array_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'value', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'p', 'Value', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Rep', 'o', 'Build', 'List', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'cr', '"', ',', '"', '2016', '-', '06', '-', '07', '"', ',', '"', 'Get', 'Rep', 'o', 'Build', 'List', '"', ',', '"', 'cr', '"', ')', ';', 'AST#ERROR#Right', 'set', 'U', 'ri', 'Pattern', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', '"', '/', 're', 'pos', '/', '[', 'Rep', 'o', 'Names', 'pace', ']', '/', '[', 'Rep', 'o', 'Name', ']', '/', 'build', '"', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Method', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Method', 'Type', '.', 'GET', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Message', 'Writer', 'AST#ERROR#Left', '(', ')', '{', 'AST#ERROR#Right', 'AST#variable_declarator#Left', 'buf', '=', 'AST#object_creation_expression#Left', 'new', 'Byte', 'Array', 'Output', 'Stream', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'enc', '=', 'AST#object_creation_expression#Left', 'new', 'Output', 'Stream', 'Writer', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Raw', 'Stream', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'UTF', '_', '8', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'append', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Base', 'r', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', '_', 're', 'cs', '.', 'add', 'AST#argument_list#Left', '(', 'r', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'close', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', '{', 'AST#ERROR#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'read', 'AST#argument_list#Left', '(', 'skip', 'Buffer', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'actual', 'Size', '!', '=', 'expected', 'Size', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Cor', 'rupt', 'Object', 'Exception', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Message', 'Format', '.', 'format', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'AST#method_invocation#Left', 'J', 'G', 'it', 'Text', '.', 'get', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'pack', 'file', 'Cor', 'ruption', 'Det', 'ected', 'AST#field_access#Right', ',', 'AST#field_access#Left', 'AST#method_invocation#Left', 'J', 'G', 'it', 'Text', '.', 'get', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'wrong', 'Dec', 'omp', 'ressed', 'Length', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'used', '=', 'AST#binary_expression#Left', 'b', 'Av', 'ail', '-', 'AST#method_invocation#Left', 'inf', '.', 'get', 'Rem', 'aining', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', '0', '<', 'used', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'on', 'Object', 'Data', 'AST#argument_list#Left', '(', 'src', ',', 'buf', ',', 'p', ',', 'used', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'use', 'AST#argument_list#Left', '(', 'used', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'inf', '.', 'reset', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Model', 'Package', 'Result', 'desc', 'ribe', 'Model', 'Package', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Model', 'Package', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Model', 'Package', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'construct', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Cell', 'Value', 'Record', 'Interface', 'rec', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Record', 'Stream', 'rs', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Sh', 'ared', 'Value', 'Manager', 'sf', 'h', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'rec', 'instance', 'of', 'Form', 'ula', 'Record', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Form', 'ula', 'Record', 'AST#variable_declarator#Left', 'form', 'ula', 'Rec', '=', 'AST#cast_expression#Left', '(', 'Form', 'ula', 'Record', ')', 'rec', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'String', 'Record', 'c', 'ached', 'Text', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'Class', 'AST#type_arguments#Left', '<', 'AST#wildcard#Left', '?', 'ext', 'ends', 'Record', 'AST#wildcard#Right', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'next', 'Class', '=', 'AST#method_invocation#Left', 'rs', '.', 'pe', 'ek', 'Next', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'next', 'Class', '==', 'AST#class_literal#Left', 'String', 'Record', '.', 'class', 'AST#class_literal#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'c', 'ached', 'Text', '=', 'AST#cast_expression#Left', '(', 'String', 'Record', ')', 'AST#method_invocation#Left', 'rs', '.', 'get', 'Next', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'c', 'ached', 'Text', '=', 'null', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'insert', 'Cell', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Form', 'ula', 'Record', 'Agg', 'regate', 'AST#argument_list#Left', '(', 'form', 'ula', 'Rec', ',', 'c', 'ached', 'Text', ',', 'sf', 'h', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'insert', 'Cell', 'AST#argument_list#Left', '(', 'rec', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Dec', 'omp', 'ressor', 'clone', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Def', 'late', 'Dec', 'omp', 'ressor', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'S', '3', 'Resources', 'Result', 'update', 'S', '3', 'Resources', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'S', '3', 'Resources', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'S', '3', 'Resources', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Group', 'Query', 'Node', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Query', 'Node', 'query', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'query', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Query', 'Node', 'Error', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Message', 'Impl', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Query', 'Parser', 'Mess', 'ages', '.', 'PAR', 'AM', 'ET', 'ER', '_', 'VALUE', '_', 'NOT', '_', 'SUP', 'PORT', 'ED', 'AST#field_access#Right', ',', '"', 'query', '"', ',', '"', 'null', '"', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'all', 'ocate', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Le', 'af', 'AST#argument_list#Left', '(', 'false', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'AST#argument_list#Left', '(', 'query', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Char', 'Sequ', 'ence', 'to', 'Query', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'E', 'scape', 'Query', 'Sy', 'ntax', 'esc', 'aper', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'path', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'path', '.', 'append', 'AST#argument_list#Left', '(', '"', '/"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'First', 'Path', 'Element', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'Query', 'Text', 'pat', 'he', 'lement', ':', 'AST#method_invocation#Left', 'get', 'Path', 'E', 'lements', 'AST#argument_list#Left', '(', '1', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Char', 'Sequ', 'ence', 'AST#variable_declarator#Left', 'value', '=', 'AST#method_invocation#Left', 'esc', 'aper', '.', 'escape', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'pat', 'he', 'lement', '.', 'value', 'AST#field_access#Right', ',', 'AST#method_invocation#Left', 'Loc', 'ale', '.', 'get', 'Default', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#field_access#Left', 'Type', '.', 'STR', 'ING', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'path', '.', 'append', 'AST#argument_list#Left', '(', '"', '/', '\\"', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'value', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\"', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'path', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'remove', 'Cell', 'Comment', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'H', 'SS', 'FC', 'om', 'ment', 'AST#variable_declarator#Left', 'comment', '=', 'AST#method_invocation#Left', '_', 'sheet', '.', 'find', 'Cell', 'Comment', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', '_', 'record', '.', 'get', 'Row', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#method_invocation#Left', '_', 'record', '.', 'get', 'Column', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'comment', '=', 'null', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'null', '==', 'comment', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', '_', 'sheet', '.', 'get', 'Draw', 'ing', 'Pat', 'ri', 'arch', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'remove', 'Shape', 'AST#argument_list#Left', '(', 'comment', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'reset', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ar', 'ri', 'ving', '=', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'le', 'aving', '=', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Activ', 'ate', 'User', 'Result', 'activate', 'User', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Activ', 'ate', 'User', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Activ', 'ate', 'User', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'is', 'Ch', 'ars', 'et', 'Det', 'ected', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Un', 'supported', 'Operation', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Cl', 'uster', 'mod', 'ify', 'Snap', 'shot', 'Copy', 'Ret', 'ention', 'Per', 'iod', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Mod', 'ify', 'Snap', 'shot', 'Copy', 'Ret', 'ention', 'Per', 'iod', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Mod', 'ify', 'Snap', 'shot', 'Copy', 'Ret', 'ention', 'Per', 'iod', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Cl', 'uster', 'Sub', 'net', 'Group', 'Result', 'delete', 'Cl', 'uster', 'Sub', 'net', 'Group', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Cl', 'uster', 'Sub', 'net', 'Group', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Cl', 'uster', 'Sub', 'net', 'Group', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'String', 'dec', 'ode', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'buffer', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'dec', 'ode', 'AST#argument_list#Left', '(', 'buffer', ',', '0', ',', 'AST#field_access#Left', 'buffer', '.', 'length', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'get', 'Default', 'Port', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Stop', 'Task', 'Result', 'stop', 'Task', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Stop', 'Task', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Stop', 'Task', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'seek', 'Ex', 'act', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Bytes', 'Ref', 'target', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Term', 'State', 'other', 'State', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#assert_statement#Left', 'assert', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'other', 'State', '!', '=', 'null', 'AST#binary_expression#Right', '&&', 'AST#instanceof_expression#Left', 'other', 'State', 'instance', 'of', 'Block', 'Term', 'State', 'AST#instanceof_expression#Right', 'AST#binary_expression#Right', ';', 'AST#assert_statement#Right', 'AST#assert_statement#Left', 'assert', 'AST#binary_expression#Left', 'AST#unary_expression#Left', '!', 'do', 'Ord', 'AST#unary_expression#Right', '||', 'AST#binary_expression#Left', 'AST#field_access#Left', 'AST#parenthesized_expression#Left', '(', 'AST#cast_expression#Left', '(', 'Block', 'Term', 'State', ')', 'other', 'State', 'AST#cast_expression#Right', ')', 'AST#parenthesized_expression#Right', '.', 'ord', 'AST#field_access#Right', '<', 'num', 'Ter', 'ms', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ';', 'AST#assert_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'state', '.', 'copy', 'From', 'AST#argument_list#Left', '(', 'other', 'State', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'seek', 'P', 'ending', '=', 'true', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'index', 'Is', 'Current', '=', 'false', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'term', '.', 'copy', 'Bytes', 'AST#argument_list#Left', '(', 'target', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Series', 'To', 'Chart', 'Group', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Input', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '1', '_', 'chart', 'Group', 'Index', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'void', 'write', 'Un', 'ic', 'ode', 'String', 'Flag', 'And', 'Data', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Output', 'out', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'bo', 'olean', 'AST#variable_declarator#Left', 'is', '16', 'Bit', '=', 'AST#method_invocation#Left', 'has', 'Mult', 'ib', 'y', 'te', 'AST#argument_list#Left', '(', 'value', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Byte', 'AST#argument_list#Left', '(', 'AST#ternary_expression#Left', 'is', '16', 'Bit', '?', '0', 'x', '01', ':', '0', 'x', '00', 'AST#ternary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'is', '16', 'Bit', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'put', 'Un', 'ic', 'ode', 'LE', 'AST#argument_list#Left', '(', 'value', ',', 'out', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'put', 'Comp', 'ressed', 'Un', 'ic', 'ode', 'AST#argument_list#Left', '(', 'value', ',', 'out', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Author', 'ize', 'Security', 'Group', 'Ing', 'ress', 'Result', 'author', 'ize', 'Security', 'Group', 'Ing', 'ress', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Author', 'ize', 'Security', 'Group', 'Ing', 'ress', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Author', 'ize', 'Security', 'Group', 'Ing', 'ress', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'add', 'File', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'file', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'check', 'File', 'Names', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Col', 'lections', '.', 'sing', 'leton', 'AST#argument_list#Left', '(', 'file', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Files', '.', 'add', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'named', 'For', 'This', 'Seg', 'ment', 'AST#argument_list#Left', '(', 'file', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Size', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'width', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'height', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'm', 'Width', '=', 'width', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'm', 'Height', '=', 'height', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'void', 'set', 'Pre', 'ced', 'ence', 'Filter', 'Supp', 'ressed', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'bo', 'olean', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'value', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 're', 'aches', 'Int', 'o', 'Out', 'er', 'Context', 'AST#field_access#Right', '|', '=', '0', 'x', '4', '0000000', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 're', 'aches', 'Int', 'o', 'Out', 'er', 'Context', 'AST#field_access#Right', '&', '=', 'AST#unary_expression#Left', '~', 'SUP', 'PRESS', '_', 'P', 'REC', 'ED', 'ENCE', '_', 'FIL', 'TER', 'AST#unary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Inter', 'val', 'Set', 'L', 'OOK', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AT', 'N', 'State', 's', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Rule', 'Context', 'ctx', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'L', 'OOK', 'AST#argument_list#Left', '(', 's', ',', 'null', ',', 'ctx', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'serial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Output', 'out', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Option', 'Flags', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Row', 'Height', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Builder', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'bo', 'olean', 'ded', 'up', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'ded', 'up', 'AST#field_access#Right', '=', 'ded', 'up', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Hash', 'table', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'capacity', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'float', 'load', 'Factor', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'this', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'capacity', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'load', 'Factor', '<', '=', '0', 'AST#binary_expression#Right', '||', 'AST#method_invocation#Left', 'Float', '.', 'is', 'Na', 'N', 'AST#argument_list#Left', '(', 'load', 'Factor', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'Load', 'Ġfactor', ':', 'Ġ"', '+', 'load', 'Factor', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Object', 'get', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Char', 'Sequ', 'ence', 'key', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'buck', 'et', '=', 'AST#method_invocation#Left', 'normal', 'Com', 'pletion', '.', 'get', 'B', 'ucket', 'AST#argument_list#Left', '(', 'key', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#ternary_expression#Left', 'AST#binary_expression#Left', 'buck', 'et', '==', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', 'AST#binary_expression#Right', '?', 'null', ':', 'AST#method_invocation#Left', 'Long', '.', 'value', 'Of', 'AST#argument_list#Left', '(', 'buck', 'et', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#ternary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Hyper', 'Parameter', 'T', 'uning', 'J', 'obs', 'Result', 'list', 'Hyper', 'Parameter', 'T', 'uning', 'J', 'obs', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Hyper', 'Parameter', 'T', 'uning', 'J', 'obs', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Hyper', 'Parameter', 'T', 'uning', 'J', 'obs', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Table', 'Result', 'delete', 'Table', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'table', 'Name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'delete', 'Table', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'AST#object_creation_expression#Left', 'new', 'Delete', 'Table', 'Request', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', '.', 'with', 'Table', 'Name', 'AST#argument_list#Left', '(', 'table', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'bo', 'olean', 'less', 'Th', 'an', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Text', 'Frag', 'ment', 'fr', 'ag', 'A', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Text', 'Frag', 'ment', 'fr', 'ag', 'B', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'fr', 'ag', 'A', '.', 'get', 'Score', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', 'AST#method_invocation#Left', 'fr', 'ag', 'B', '.', 'get', 'Score', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#field_access#Left', 'fr', 'ag', 'A', '.', 'fr', 'ag', 'Num', 'AST#field_access#Right', '>', 'AST#field_access#Left', 'fr', 'ag', 'B', '.', 'fr', 'ag', 'Num', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', 'else', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'fr', 'ag', 'A', '.', 'get', 'Score', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '<', 'AST#method_invocation#Left', 'fr', 'ag', 'B', '.', 'get', 'Score', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'free', 'Before', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'pos', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#assert_statement#Left', 'assert', 'AST#binary_expression#Left', 'pos', '>', '=', '0', 'AST#binary_expression#Right', ';', 'AST#assert_statement#Right', 'AST#assert_statement#Left', 'assert', 'AST#binary_expression#Left', 'pos', '<', '=', 'next', 'Pos', 'AST#binary_expression#Right', ';', 'AST#assert_statement#Right', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'new', 'Count', '=', 'AST#binary_expression#Left', 'next', 'Pos', '-', 'pos', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#assert_statement#Left', 'assert', 'AST#binary_expression#Left', 'new', 'Count', '<', '=', 'count', 'AST#binary_expression#Right', ':', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'new', 'Count', '="', '+', 'new', 'Count', 'AST#binary_expression#Right', '+', '"', 'Ġcount', '="', 'AST#binary_expression#Right', '+', 'count', 'AST#binary_expression#Right', ';', 'AST#assert_statement#Right', 'AST#assert_statement#Left', 'assert', 'AST#binary_expression#Left', 'new', 'Count', '<', '=', 'AST#field_access#Left', 'buffer', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ':', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'new', 'Count', '="', '+', 'new', 'Count', 'AST#binary_expression#Right', '+', '"', 'Ġbuf', '.', 'length', '="', 'AST#binary_expression#Right', '+', 'AST#field_access#Left', 'buffer', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#assert_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'count', '=', 'new', 'Count', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'H', 'IT', 'Type', 'Of', 'H', 'IT', 'Result', 'update', 'H', 'IT', 'Type', 'Of', 'H', 'IT', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'H', 'IT', 'Type', 'Of', 'H', 'IT', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'H', 'IT', 'Type', 'Of', 'H', 'IT', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Recomm', 'ender', 'Configuration', 'Result', 'update', 'Recomm', 'ender', 'Configuration', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Recomm', 'ender', 'Configuration', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Recomm', 'ender', 'Configuration', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'comp', 'are', 'To', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Bytes', 'Ref', 'other', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Ar', 'rays', '.', 'comp', 'are', 'Un', 'signed', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'this', '.', 'bytes', 'AST#field_access#Right', ',', 'AST#field_access#Left', 'this', '.', 'offset', 'AST#field_access#Right', ',', 'AST#binary_expression#Left', 'AST#field_access#Left', 'this', '.', 'offset', 'AST#field_access#Right', '+', 'AST#field_access#Left', 'this', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ',', 'AST#field_access#Left', 'other', '.', 'bytes', 'AST#field_access#Right', ',', 'AST#field_access#Left', 'other', '.', 'offset', 'AST#field_access#Right', ',', 'AST#binary_expression#Left', 'AST#field_access#Left', 'other', '.', 'offset', 'AST#field_access#Right', '+', 'AST#field_access#Left', 'other', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'stem', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'char', 's', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'len', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'len', '>', '4', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'AST#array_access#Left', 's', '[', 'AST#binary_expression#Left', 'len', '-', '1', 'AST#binary_expression#Right', ']', 'AST#array_access#Right', '==', "'s", "'", 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'len', '--', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'len', '>', '5', 'AST#binary_expression#Right', '&&', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'ends', 'With', 'AST#argument_list#Left', '(', 's', ',', 'len', ',', '"', 'ene', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '||', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'ends', 'With', 'AST#argument_list#Left', '(', 's', ',', 'len', ',', '"', 'ane', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '&&', 'use', 'N', 'yn', 'ors', 'k', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'len', '-', '3', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'len', '>', '4', 'AST#binary_expression#Right', '&&', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'ends', 'With', 'AST#argument_list#Left', '(', 's', ',', 'len', ',', '"', 'er', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '||', 'AST#method_invocation#Left', 'ends', 'With', 'AST#argument_list#Left', '(', 's', ',', 'len', ',', '"', 'en', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '||', 'AST#method_invocation#Left', 'ends', 'With', 'AST#argument_list#Left', '(', 's', ',', 'len', ',', '"', 'et', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '||', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'ends', 'With', 'AST#argument_list#Left', '(', 's', ',', 'len', ',', '"', 'ar', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '&&', 'use', 'N', 'yn', 'ors', 'k', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'len', '-', '2', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'len', '>', '3', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#switch_expression#Left', 'switch', 'AST#parenthesized_expression#Left', '(', 'AST#array_access#Left', 's', '[', 'AST#binary_expression#Left', 'len', '-', '1', 'AST#binary_expression#Right', ']', 'AST#array_access#Right', ')', 'AST#parenthesized_expression#Right', 'AST#switch_block#Left', '{', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', "'", 'a', "'", 'AST#switch_label#Right', ':', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', "'", 'e', "'", 'AST#switch_label#Right', ':', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'len', '-', '1', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', 'AST#switch_block_statement_group#Right', '}', 'AST#switch_block#Right', 'AST#switch_expression#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'len', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'D', 'BS', 'n', 'ap', 'shots', 'Result', 'desc', 'ribe', 'D', 'BS', 'n', 'ap', 'shots', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'D', 'BS', 'n', 'ap', 'shots', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'D', 'BS', 'n', 'ap', 'shots', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'S', 'orted', 'Set', 'Doc', 'Values', 'F', 'acet', 'Field', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'dim', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'label', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', '"', 'd', 'ummy', '"', 'AST#ERROR#Left', ',', 'TYPE', 'AST#ERROR#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'F', 'acet', 'Field', '.', 'ver', 'ify', 'Label', 'AST#argument_list#Left', '(', 'label', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'F', 'acet', 'Field', '.', 'ver', 'ify', 'Label', 'AST#argument_list#Left', '(', 'dim', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'dim', 'AST#field_access#Right', '=', 'dim', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'label', 'AST#field_access#Right', '=', 'label', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Document', 'ation', 'Part', 'Result', 'create', 'Document', 'ation', 'Part', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Document', 'ation', 'Part', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Document', 'ation', 'Part', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'get', 'Value', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'value', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Short', 'Buffer', 'as', 'Read', 'Only', 'Buffer', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'du', 'pl', 'icate', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Data', 'Source', 'Per', 'missions', 'Result', 'update', 'Data', 'Source', 'Per', 'missions', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Data', 'Source', 'Per', 'missions', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Data', 'Source', 'Per', 'missions', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'org', '.', 'apache', 'AST#scoped_type_identifier#Right', '.', 'po', 'i', 'AST#scoped_type_identifier#Right', '.', 'h', 'ss', 'f', 'AST#scoped_type_identifier#Right', '.', 'record', 'AST#scoped_type_identifier#Right', '.', 'Record', 'AST#scoped_type_identifier#Right', 'create', 'Single', 'Record', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Input', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'I', '_', 'Record', 'Creat', 'or', 'AST#variable_declarator#Left', 'construct', 'or', '=', 'AST#method_invocation#Left', '_', 'record', 'Creat', 'ors', 'ById', '.', 'get', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Integer', '.', 'value', 'Of', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'in', '.', 'get', 'S', 'id', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'construct', 'or', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Unknown', 'Record', 'AST#argument_list#Left', '(', 'in', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'construct', 'or', '.', 'create', 'AST#argument_list#Left', '(', 'in', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'get', 'Count', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'm', 'T', 'abs', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Application', 'Reference', 'Data', 'Source', 'Result', 'delete', 'Application', 'Reference', 'Data', 'Source', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Application', 'Reference', 'Data', 'Source', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Application', 'Reference', 'Data', 'Source', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Project', 'Version', 'Result', 'create', 'Project', 'Version', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Project', 'Version', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Project', 'Version', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Int', 'Buffer', 'slice', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Read', 'Only', 'Int', 'Array', 'Buffer', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'rem', 'aining', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'back', 'ing', 'Array', ',', 'AST#binary_expression#Left', 'offset', '+', 'position', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'byte', 'get', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'position', '==', 'limit', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Buffer', 'Under', 'flow', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#field_access#Left', 'this', '.', 'block', 'AST#field_access#Right', '.', 'pe', 'ek', 'Byte', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'offset', '+', 'AST#update_expression#Left', 'position', '++', 'AST#update_expression#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Long', 'Buffer', 'put', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'long', 'c', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'check', 'Index', 'AST#argument_list#Left', '(', 'index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'back', 'ing', 'Array', '[', 'AST#binary_expression#Left', 'offset', '+', 'index', 'AST#binary_expression#Right', ']', 'AST#array_access#Right', '=', 'c', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'St', 'ored', 'Field', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'float', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#ERROR#Left', 'super', 'AST#inferred_parameters#Left', '(', 'name', ',', 'TYPE', ')', 'AST#inferred_parameters#Right', 'AST#ERROR#Right', ';', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'fields', 'Data', '=', 'value', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Inter', 'val', 'Set', 'get', 'Ex', 'pected', 'Tokens', 'Within', 'Current', 'Rule', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AT', 'N', 'AST#variable_declarator#Left', 'at', 'n', '=', 'AST#field_access#Left', 'AST#method_invocation#Left', 'get', 'Inter', 'pre', 'ter', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'at', 'n', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'AT', 'N', 'State', 'AST#variable_declarator#Left', 's', '=', 'AST#method_invocation#Left', 'AST#field_access#Left', 'at', 'n', '.', 'states', 'AST#field_access#Right', '.', 'get', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'State', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'at', 'n', '.', 'next', 'Tokens', 'AST#argument_list#Left', '(', 's', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'buffer', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"[', 'FIL', 'ESH', 'AR', 'ING', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'read', 'only', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#ternary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'get', 'Read', 'Only', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', '1', 'AST#binary_expression#Right', '?', '"', 'true', '"', ':', '"', 'false', '"', 'AST#ternary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'password', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Integer', '.', 'to', 'H', 'ex', 'String', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Password', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'username', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Us', 'ername', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', '[/', 'FIL', 'ESH', 'AR', 'ING', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'buffer', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Sub', 'module', 'Init', 'Command', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Rep', 'ository', 're', 'po', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 're', 'po', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'path', 's', '=', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Array', 'List', 'AST#type_arguments#Left', '<', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'include', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Any', 'Object', 'Id', 'id', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'bo', 'olean', 'AST#variable_declarator#Left', 'valid', 'Ref', 'Name', '=', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'Rep', 'ository', '.', 'is', 'Valid', 'Ref', 'Name', 'AST#argument_list#Left', '(', 'name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '||', 'AST#method_invocation#Left', 'AST#field_access#Left', 'Const', 'ants', '.', 'HEAD', 'AST#field_access#Right', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'valid', 'Ref', 'Name', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Message', 'Format', '.', 'format', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'AST#method_invocation#Left', 'J', 'G', 'it', 'Text', '.', 'get', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'in', 'valid', 'Ref', 'Name', 'AST#field_access#Right', ',', 'name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'include', '.', 'cont', 'ains', 'Key', 'AST#argument_list#Left', '(', 'name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'State', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'AST#method_invocation#Left', 'J', 'G', 'it', 'Text', '.', 'get', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'du', 'pl', 'icate', 'Ref', 'AST#field_access#Right', '+', 'name', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'include', '.', 'put', 'AST#argument_list#Left', '(', 'name', ',', 'AST#method_invocation#Left', 'id', '.', 'to', 'Object', 'Id', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Cl', 'uster', 'enable', 'Snap', 'shot', 'Copy', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Enable', 'Snap', 'shot', 'Copy', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Enable', 'Snap', 'shot', 'Copy', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Value', 'F', 'iller', 'get', 'Value', 'F', 'iller', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Value', 'F', 'iller', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'serial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Output', 'out', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Byte', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'P', 'ane', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Active', 'Cell', 'Row', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Active', 'Cell', 'Col', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Active', 'Cell', 'Ref', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'n', 'Ref', 's', '=', 'AST#field_access#Left', 'field', '_', '6', '_', 'ref', 's', '.', 'length', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'n', 'Ref', 's', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'Cell', 'Range', 'Address', '8', 'Bit', 'field', '_', '6', '_', 'ref', ':', 'field', '_', '6', '_', 'ref', 's', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'field', '_', '6', '_', 'ref', '.', 'serial', 'ize', 'AST#argument_list#Left', '(', 'out', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'Counter', 'new', 'Counter', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'new', 'Counter', 'AST#argument_list#Left', '(', 'false', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'get', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'bo', 'olean', 'df', 'lt', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'bo', 'olean', 'AST#variable_declarator#Left', 'vals', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', '=', 'AST#cast_expression#Left', '(', 'AST#array_type#Left', 'bo', 'olean', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', ')', 'AST#method_invocation#Left', 'val', 'By', 'Round', '.', 'get', 'AST#argument_list#Left', '(', 'name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'vals', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#array_access#Left', 'vals', '[', 'AST#binary_expression#Left', 'round', 'Number', '%', 'AST#field_access#Left', 'vals', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ']', 'AST#array_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 's', 'val', '=', 'AST#method_invocation#Left', 'pro', 'ps', '.', 'get', 'Property', 'AST#argument_list#Left', '(', 'name', ',', 'AST#binary_expression#Left', '""', '+', 'df', 'lt', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 's', 'val', '.', 'index', 'Of', 'AST#argument_list#Left', '(', '":"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '<', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'Boo', 'lean', '.', 'value', 'Of', 'AST#argument_list#Left', '(', 's', 'val', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'bo', 'olean', 'Value', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'k', '=', 'AST#method_invocation#Left', 's', 'val', '.', 'index', 'Of', 'AST#argument_list#Left', '(', '":"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 'col', 'Name', '=', 'AST#method_invocation#Left', 's', 'val', '.', 'sub', 'string', 'AST#argument_list#Left', '(', '0', ',', 'k', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 's', 'val', '=', 'AST#method_invocation#Left', 's', 'val', '.', 'sub', 'string', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'k', '+', '1', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'col', 'For', 'Val', 'By', 'Round', '.', 'put', 'AST#argument_list#Left', '(', 'name', ',', 'col', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'vals', '=', 'AST#method_invocation#Left', 'prop', 'To', 'Boo', 'lean', 'Array', 'AST#argument_list#Left', '(', 's', 'val', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'val', 'By', 'Round', '.', 'put', 'AST#argument_list#Left', '(', 'name', ',', 'vals', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#array_access#Left', 'vals', '[', 'AST#binary_expression#Left', 'round', 'Number', '%', 'AST#field_access#Left', 'vals', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ']', 'AST#array_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'pre', 'Serial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'rec', 'ords', '.', 'get', 'Tab', 'pos', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '>', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Tab', 'Id', 'Record', 'AST#variable_declarator#Left', 't', 'ir', '=', 'AST#cast_expression#Left', '(', 'Tab', 'Id', 'Record', ')', 'AST#method_invocation#Left', 'rec', 'ords', '.', 'get', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'rec', 'ords', '.', 'get', 'Tab', 'pos', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'AST#field_access#Left', 't', 'ir', '.', '_', 'tab', 'ids', 'AST#field_access#Right', '.', 'length', 'AST#field_access#Right', '<', 'AST#method_invocation#Left', 'b', 'ounds', 'he', 'ets', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'fix', 'Tab', 'Id', 'Record', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Limit', 'Token', 'Count', 'Analy', 'zer', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Analy', 'zer', 'de', 'legate', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'max', 'Token', 'Count', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'bo', 'olean', 'cons', 'ume', 'All', 'Tokens', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'de', 'legate', '.', 'get', 'Re', 'use', 'Str', 'ategy', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'de', 'legate', 'AST#field_access#Right', '=', 'de', 'legate', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'max', 'Token', 'Count', 'AST#field_access#Right', '=', 'max', 'Token', 'Count', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'cons', 'ume', 'All', 'Tokens', 'AST#field_access#Right', '=', 'cons', 'ume', 'All', 'Tokens', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'External', 'Book', 'Block', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'number', 'Of', 'She', 'ets', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'external', 'Book', 'Record', '=', 'AST#method_invocation#Left', 'Sup', 'Book', 'Record', '.', 'create', 'Internal', 'References', 'AST#argument_list#Left', '(', 'AST#cast_expression#Left', '(', 'short', ')', 'number', 'Of', 'She', 'ets', 'AST#cast_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'external', 'Name', 'Rec', 'ords', '=', 'AST#array_creation_expression#Left', 'new', 'External', 'Name', 'Record', 'AST#dimensions_expr#Left', '[', '0', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'cr', 'n', 'Blocks', '=', 'AST#array_creation_expression#Left', 'new', 'CR', 'N', 'Block', 'AST#dimensions_expr#Left', '[', '0', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'buffer', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"[', 'SC', 'EN', 'ARI', 'OP', 'R', 'OT', 'ECT', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'protect', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Protect', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', '[/', 'SC', 'EN', 'ARI', 'OP', 'R', 'OT', 'ECT', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'buffer', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Push', 'Command', 'set', 'Th', 'in', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'bo', 'olean', 'thin', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'check', 'Call', 'able', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'thin', 'AST#field_access#Right', '=', 'thin', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'comp', 'are', 'To', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'S', 'earcher', 'Tracker', 'other', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Double', '.', 'comp', 'are', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'other', '.', 'record', 'Time', 'Sec', 'AST#field_access#Right', ',', 'record', 'Time', 'Sec', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'R', 'ever', 'se', 'String', 'Filter', 'create', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Token', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'R', 'ever', 'se', 'String', 'Filter', 'AST#argument_list#Left', '(', 'in', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Block', 'List', 'AST#ERROR#Left', '(', ')', '{', 'AST#ERROR#Right', 'AST#variable_declarator#Left', 'directory', '=', 'AST#method_invocation#Left', 'Block', 'List', '.', 'AST#type_arguments#Left', '<', 'T', '>', 'AST#type_arguments#Right', 'new', 'Directory', 'AST#argument_list#Left', '(', '256', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'directory', '[', '0', ']', 'AST#array_access#Right', '=', 'AST#method_invocation#Left', 'Block', 'List', '.', 'AST#type_arguments#Left', '<', 'T', '>', 'AST#type_arguments#Right', 'new', 'Block', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'tail', 'Block', '=', 'AST#array_access#Left', 'directory', '[', '0', ']', 'AST#array_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Query', 'Sc', 'orer', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'Weight', 'ed', 'Sp', 'an', 'Term', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'weight', 'ed', 'Ter', 'ms', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'field', 'Weight', 'ed', 'Sp', 'an', 'Ter', 'ms', 'AST#field_access#Right', '=', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Hash', 'Map', 'AST#type_arguments#Left', '<', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'weight', 'ed', 'Ter', 'ms', '.', 'length', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#field_access#Left', 'weight', 'ed', 'Ter', 'ms', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Weight', 'ed', 'Sp', 'an', 'Term', 'AST#variable_declarator#Left', 'existing', 'Term', '=', 'AST#method_invocation#Left', 'field', 'Weight', 'ed', 'Sp', 'an', 'Ter', 'ms', '.', 'get', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'AST#array_access#Left', 'weight', 'ed', 'Ter', 'ms', '[', 'i', ']', 'AST#array_access#Right', '.', 'term', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'existing', 'Term', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '||', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'existing', 'Term', '.', 'weight', 'AST#field_access#Right', '<', 'AST#field_access#Left', 'AST#array_access#Left', 'weight', 'ed', 'Ter', 'ms', '[', 'i', ']', 'AST#array_access#Right', '.', 'weight', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'field', 'Weight', 'ed', 'Sp', 'an', 'Ter', 'ms', '.', 'put', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'AST#array_access#Left', 'weight', 'ed', 'Ter', 'ms', '[', 'i', ']', 'AST#array_access#Right', '.', 'term', 'AST#field_access#Right', ',', 'AST#array_access#Left', 'weight', 'ed', 'Ter', 'ms', '[', 'i', ']', 'AST#array_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'max', 'Term', 'Weight', '=', 'AST#method_invocation#Left', 'Math', '.', 'max', 'AST#argument_list#Left', '(', 'max', 'Term', 'Weight', ',', 'AST#method_invocation#Left', 'AST#array_access#Left', 'weight', 'ed', 'Ter', 'ms', '[', 'i', ']', 'AST#array_access#Right', '.', 'get', 'Weight', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'skip', 'Init', 'Ext', 'ractor', '=', 'true', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'equ', 'als', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', '_', 'other', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#assert_statement#Left', 'assert', 'AST#method_invocation#Left', 'never', 'Equ', 'als', 'AST#argument_list#Left', '(', '_', 'other', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#assert_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', '_', 'other', 'instance', 'of', 'Mer', 'ged', 'Group', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'Mer', 'ged', 'Group', 'AST#type_arguments#Left', '<', '?', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'other', '=', 'AST#cast_expression#Left', '(', 'AST#generic_type#Left', 'Mer', 'ged', 'Group', 'AST#type_arguments#Left', '<', '?', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', ')', '_', 'other', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'group', 'Value', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'other', '==', 'null', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'group', 'Value', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'other', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'Ch', 'ars', 'et', 'ch', 'ars', 'et', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'cs', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Exper', 'iment', 'Result', 'desc', 'ribe', 'Exper', 'iment', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Exper', 'iment', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Exper', 'iment', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Esc', 'her', 'Graphics', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'H', 'SS', 'F', 'Shape', 'Group', 'es', 'cher', 'Group', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'H', 'SS', 'F', 'Work', 'book', 'work', 'book', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Color', 'fore', 'color', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'float', 'vert', 'ical', 'Points', 'Per', 'Pixel', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'es', 'cher', 'Group', 'AST#field_access#Right', '=', 'es', 'cher', 'Group', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'work', 'book', 'AST#field_access#Right', '=', 'work', 'book', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'vert', 'ical', 'Points', 'Per', 'Pixel', 'AST#field_access#Right', '=', 'vert', 'ical', 'Points', 'Per', 'Pixel', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'vert', 'ical', 'P', 'ixels', 'Per', 'Point', 'AST#field_access#Right', '=', 'AST#binary_expression#Left', '1', '/', 'vert', 'ical', 'Points', 'Per', 'Pixel', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'font', 'AST#field_access#Right', '=', 'AST#object_creation_expression#Left', 'new', 'Font', 'AST#argument_list#Left', '(', '"', 'A', 'rial', '"', ',', '0', ',', '10', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'fore', 'ground', 'AST#field_access#Right', '=', 'fore', 'color', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'pattern', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'pattern', 'Text', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Route', 'Table', 'Result', 'delete', 'Route', 'Table', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Route', 'Table', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Route', 'Table', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Ass', 'ociate', 'V', 'PC', 'With', 'Host', 'ed', 'Zone', 'Result', 'ass', 'ociate', 'V', 'PC', 'With', 'Host', 'ed', 'Zone', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Ass', 'ociate', 'V', 'PC', 'With', 'Host', 'ed', 'Zone', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Ass', 'ociate', 'V', 'PC', 'With', 'Host', 'ed', 'Zone', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Put', 'Integ', 'ration', 'Result', 'put', 'Integ', 'ration', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Put', 'Integ', 'ration', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Put', 'Integ', 'ration', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Simple', 'Entry', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'K', 'the', 'Key', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'V', 'the', 'Value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'key', '=', 'the', 'Key', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'value', '=', 'the', 'Value', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'dec', 'ode', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'blocks', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'blocks', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'long', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'values', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'values', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'iter', 'ations', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'iter', 'ations', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', '++', 'i', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'long', 'AST#variable_declarator#Left', 'byte', '0', '=', 'AST#binary_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'AST#update_expression#Left', 'blocks', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '&', '0', 'x', 'FF', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'long', 'AST#variable_declarator#Left', 'byte', '1', '=', 'AST#binary_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'AST#update_expression#Left', 'blocks', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '&', '0', 'x', 'FF', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'byte', '0', '<<', '4', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '|', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'byte', '1', '>>>', '4', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'final', 'long', 'AST#variable_declarator#Left', 'byte', '2', '=', 'AST#binary_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'AST#update_expression#Left', 'blocks', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '&', '0', 'x', 'FF', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'byte', '1', '&', '15', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '<<', '8', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '|', 'byte', '2', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Dis', 'ass', 'ociate', 'Connection', 'From', 'L', 'ag', 'Result', 'dis', 'ass', 'ociate', 'Connection', 'From', 'L', 'ag', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Dis', 'ass', 'ociate', 'Connection', 'From', 'L', 'ag', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Dis', 'ass', 'ociate', 'Connection', 'From', 'L', 'ag', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'File', 'Mode', 'get', 'Old', 'Mode', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'old', 'Mode', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'AST#marker_annotation#Left', '@', 'Override', 'AST#marker_annotation#Right', 'public', 'AST#modifiers#Right', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'm', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Stop', 'Key', 'Ph', 'r', 'ases', 'Det', 'ection', 'Job', 'Result', 'stop', 'Key', 'Ph', 'r', 'ases', 'Det', 'ection', 'Job', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Stop', 'Key', 'Ph', 'r', 'ases', 'Det', 'ection', 'Job', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Stop', 'Key', 'Ph', 'r', 'ases', 'Det', 'ection', 'Job', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"[', 'Array', 'ĠFormula', 'Ġor', 'ĠShared', 'ĠFormula', ']', '\\', 'n', '"', '+', '"', 'row', 'Ġ=', 'Ġ"', 'AST#binary_expression#Right', '+', 'AST#method_invocation#Left', 'get', 'Row', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '"', '\\', 'n', '"', 'AST#binary_expression#Right', '+', '"', 'col', 'Ġ=', 'Ġ"', 'AST#binary_expression#Right', '+', 'AST#method_invocation#Left', 'get', 'Column', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '"', '\\', 'n', '"', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Domin', 'ant', 'Language', 'Det', 'ection', 'J', 'obs', 'Result', 'list', 'Domin', 'ant', 'Language', 'Det', 'ection', 'J', 'obs', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Domin', 'ant', 'Language', 'Det', 'ection', 'J', 'obs', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Domin', 'ant', 'Language', 'Det', 'ection', 'J', 'obs', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'slice', 'Ġstart', '="', '+', 'start', 'AST#binary_expression#Right', '+', '"', 'Ġlength', '="', 'AST#binary_expression#Right', '+', 'length', 'AST#binary_expression#Right', '+', '"', 'Ġreader', 'Index', '="', 'AST#binary_expression#Right', '+', 'reader', 'Index', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'final', 'AST#modifiers#Right', 'int', 'parse', 'H', 'ex', 'Int', '4', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'final', 'byte', 'digit', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'byte', 'AST#variable_declarator#Left', 'r', '=', 'AST#array_access#Left', 'dig', 'its', '16', '[', 'digit', ']', 'AST#array_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'r', '<', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Array', 'Index', 'Out', 'Of', 'B', 'ounds', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'r', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Attribute', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Name', 'AST#argument_list#Left', '(', 'name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Value', 'AST#argument_list#Left', '(', 'value', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Stack', 'Set', 'Operation', 'Result', 'desc', 'ribe', 'Stack', 'Set', 'Operation', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Stack', 'Set', 'Operation', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Stack', 'Set', 'Operation', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'H', 'SS', 'FC', 'ell', 'get', 'Cell', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'cell', 'num', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'get', 'Cell', 'AST#argument_list#Left', '(', 'cell', 'num', ',', 'AST#method_invocation#Left', 'book', '.', 'get', 'Missing', 'Cell', 'Policy', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'write', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'b', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'write', 'Continue', 'If', 'Required', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'b', '.', 'length', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', '_', 'ul', 'r', 'Output', '.', 'write', 'AST#argument_list#Left', '(', 'b', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Res', 'et', 'Image', 'Attribute', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'image', 'Id', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Res', 'et', 'Image', 'Attribute', 'Name', 'attribute', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Image', 'Id', 'AST#argument_list#Left', '(', 'image', 'Id', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Attribute', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'attribute', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'disc', 'ard', 'Result', 'Contents', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'result', 'Contents', '=', 'null', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Object', 'Id', 'get', 'Pe', 'eled', 'Object', 'Id', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Le', 'af', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Pe', 'eled', 'Object', 'Id', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'und', 'ep', 'rec', 'ate', 'Domain', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Und', 'ep', 'rec', 'ate', 'Domain', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'execute', 'Und', 'ep', 'rec', 'ate', 'Domain', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'write', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Output', 'out', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Byte', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'sid', '+', 'AST#method_invocation#Left', 'get', 'P', 'tg', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Byte', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'field', '_', '3', '_', 'string', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Byte', 'AST#argument_list#Left', '(', 'AST#ternary_expression#Left', '_', 'is', '16', 'bit', 'Un', 'ic', 'ode', '?', '0', 'x', '01', ':', '0', 'x', '00', 'AST#ternary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', '_', 'is', '16', 'bit', 'Un', 'ic', 'ode', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'String', 'Ut', 'il', '.', 'put', 'Un', 'ic', 'ode', 'LE', 'AST#argument_list#Left', '(', 'field', '_', '3', '_', 'string', ',', 'out', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'String', 'Ut', 'il', '.', 'put', 'Comp', 'ressed', 'Un', 'ic', 'ode', 'AST#argument_list#Left', '(', 'field', '_', '3', '_', 'string', ',', 'out', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Queue', 'Result', 'delete', 'Queue', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'queue', 'Url', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'delete', 'Queue', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'AST#object_creation_expression#Left', 'new', 'Delete', 'Queue', 'Request', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', '.', 'with', 'Queue', 'Url', 'AST#argument_list#Left', '(', 'queue', 'Url', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Check', 'E', 'of', 'After', 'Pack', 'Foot', 'er', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'bo', 'olean', 'b', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'check', 'E', 'of', 'After', 'Pack', 'Foot', 'er', '=', 'b', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'sw', 'ap', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 's', 'Begin', '=', 'begin', 'A', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 's', 'End', '=', 'end', 'A', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'begin', 'A', '=', 'begin', 'B', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'end', 'A', '=', 'end', 'B', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'begin', 'B', '=', 's', 'Begin', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'end', 'B', '=', 's', 'End', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'get', 'P', 'acked', 'G', 'it', 'Window', 'Size', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'packed', 'G', 'it', 'Window', 'Size', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Put', 'Met', 'ric', 'Data', 'Result', 'put', 'Met', 'ric', 'Data', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Put', 'Met', 'ric', 'Data', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Put', 'Met', 'ric', 'Data', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Cele', 'br', 'ity', 'Rec', 'ogn', 'ition', 'Result', 'get', 'Cele', 'br', 'ity', 'Rec', 'ogn', 'ition', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Cele', 'br', 'ity', 'Rec', 'ogn', 'ition', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Cele', 'br', 'ity', 'Rec', 'ogn', 'ition', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Create', 'Queue', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'queue', 'Name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Queue', 'Name', 'AST#argument_list#Left', '(', 'queue', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Area', '3', 'DP', 'x', 'g', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'external', 'Work', 'book', 'Number', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'She', 'et', 'Ident', 'ifier', 'sheet', 'Name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Area', 'Reference', 'are', 'are', 'f', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'are', 'are', 'f', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'external', 'Work', 'book', 'Number', 'AST#field_access#Right', '=', 'external', 'Work', 'book', 'Number', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'first', 'She', 'et', 'Name', 'AST#field_access#Right', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sheet', 'Name', '.', 'get', 'She', 'et', 'Ident', 'ifier', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'sheet', 'Name', 'instance', 'of', 'She', 'et', 'Range', 'Ident', 'ifier', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'last', 'She', 'et', 'Name', 'AST#field_access#Right', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#parenthesized_expression#Left', '(', 'AST#cast_expression#Left', '(', 'She', 'et', 'Range', 'Ident', 'ifier', ')', 'sheet', 'Name', 'AST#cast_expression#Right', ')', 'AST#parenthesized_expression#Right', '.', 'get', 'Last', 'She', 'et', 'Ident', 'ifier', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'last', 'She', 'et', 'Name', 'AST#field_access#Right', '=', 'null', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Bas', 'eline', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'long', 'clock', 'Time', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 't', '0', '=', 'clock', 'Time', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'timeout', '=', 'AST#binary_expression#Left', 't', '0', '+', 't', 'icks', 'All', 'owed', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Move', 'Address', 'To', 'V', 'pc', 'Result', 'move', 'Address', 'To', 'V', 'pc', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Move', 'Address', 'To', 'V', 'pc', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Move', 'Address', 'To', 'V', 'pc', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 'coll', '=', 'AST#method_invocation#Left', 'collection', 'Model', '.', 'get', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'coll', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'String', '.', 'format', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Loc', 'ale', '.', 'RO', 'OT', 'AST#field_access#Right', ',', '"', 'LM', 'Ġ%', 's', 'Ġ-', 'Ġ%', 's', '"', ',', 'AST#method_invocation#Left', 'get', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'coll', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'String', '.', 'format', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Loc', 'ale', '.', 'RO', 'OT', 'AST#field_access#Right', ',', '"', 'LM', 'Ġ%', 's', '"', ',', 'AST#method_invocation#Left', 'get', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'L', 'ags', 'Result', 'desc', 'ribe', 'L', 'ags', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'L', 'ags', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'L', 'ags', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Area', 'E', 'val', 'offset', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'rel', 'First', 'Row', 'I', 'x', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'rel', 'Last', 'Row', 'I', 'x', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'rel', 'First', 'Col', 'I', 'x', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'rel', 'Last', 'Col', 'I', 'x', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', '_', 'ref', 'E', 'val', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', '_', 'area', 'E', 'val', '.', 'offset', 'AST#argument_list#Left', '(', 'rel', 'First', 'Row', 'I', 'x', ',', 'rel', 'Last', 'Row', 'I', 'x', ',', 'rel', 'First', 'Col', 'I', 'x', ',', 'rel', 'Last', 'Col', 'I', 'x', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', '_', 'ref', 'E', 'val', '.', 'offset', 'AST#argument_list#Left', '(', 'rel', 'First', 'Row', 'I', 'x', ',', 'rel', 'Last', 'Row', 'I', 'x', ',', 'rel', 'First', 'Col', 'I', 'x', ',', 'rel', 'Last', 'Col', 'I', 'x', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Short', 'Buffer', 'put', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'short', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'src', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'src', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'short', 'Count', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'byte', 'Buffer', '.', 'limit', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'limit', '*', 'AST#field_access#Left', 'Size', 'Of', '.', 'SH', 'ORT', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'byte', 'Buffer', '.', 'position', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'position', '*', 'AST#field_access#Left', 'Size', 'Of', '.', 'SH', 'ORT', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'byte', 'Buffer', 'instance', 'of', 'Read', 'Write', 'Direct', 'Byte', 'Buffer', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#parenthesized_expression#Left', '(', 'AST#cast_expression#Left', '(', 'Read', 'Write', 'Direct', 'Byte', 'Buffer', ')', 'byte', 'Buffer', 'AST#cast_expression#Right', ')', 'AST#parenthesized_expression#Right', '.', 'put', 'AST#argument_list#Left', '(', 'src', ',', 'src', 'Offset', ',', 'short', 'Count', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#parenthesized_expression#Left', '(', 'AST#cast_expression#Left', '(', 'Read', 'Write', 'He', 'ap', 'Byte', 'Buffer', ')', 'byte', 'Buffer', 'AST#cast_expression#Right', ')', 'AST#parenthesized_expression#Right', '.', 'put', 'AST#argument_list#Left', '(', 'src', ',', 'src', 'Offset', ',', 'short', 'Count', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'position', 'AST#field_access#Right', '+=', 'short', 'Count', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'initial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'final', 'String', 'cat', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', '_', 'cat', 'AST#field_access#Right', '=', 'cat', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'write', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'one', 'Byte', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'AST#argument_list#Left', '(', 'one', 'Byte', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'written', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Import', 'Image', 'T', 'asks', 'Result', 'desc', 'ribe', 'Import', 'Image', 'T', 'asks', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Import', 'Image', 'T', 'asks', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Import', 'Image', 'T', 'asks', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Column', 'Info', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Input', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'first', 'Col', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'U', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'last', 'Col', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'U', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'col', 'Width', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'U', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'xf', 'Index', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'U', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'options', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'U', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#switch_expression#Left', 'switch', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'in', '.', 'rem', 'aining', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#switch_block#Left', '{', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', '2', 'AST#switch_label#Right', ':', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '6', '_', 'res', 'erved', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'U', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', '1', 'AST#switch_label#Right', ':', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '6', '_', 'res', 'erved', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Byte', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', '0', 'AST#switch_label#Right', ':', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '6', '_', 'res', 'erved', '=', '0', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'default', ':', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Runtime', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'Un', 'usual', 'Ġrecord', 'Ġsize', 'Ġremaining', '=', '("', '+', 'AST#method_invocation#Left', 'in', '.', 'rem', 'aining', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '")', '"', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#switch_block_statement_group#Right', '}', 'AST#switch_block#Right', 'AST#switch_expression#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Status', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Index', 'Diff', 'diff', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#ERROR#Left', 'super', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', ';', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'diff', 'AST#field_access#Right', '=', 'diff', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'has', 'Un', 'com', 'mitted', 'Changes', '=', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'diff', '.', 'get', 'Added', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', '||', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'diff', '.', 'get', 'Changed', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', 'AST#binary_expression#Right', '||', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'diff', '.', 'get', 'Removed', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', 'AST#binary_expression#Right', '||', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'diff', '.', 'get', 'Missing', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', 'AST#binary_expression#Right', '||', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'diff', '.', 'get', 'Mod', 'ified', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', 'AST#binary_expression#Right', '||', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'diff', '.', 'get', 'Conf', 'lic', 'ting', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'clean', '=', 'AST#binary_expression#Left', 'AST#unary_expression#Left', '!', 'has', 'Un', 'com', 'mitted', 'Changes', 'AST#unary_expression#Right', '&&', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'diff', '.', 'get', 'Unt', 'r', 'acked', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Exper', 'iment', 'Result', 'create', 'Exper', 'iment', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Exper', 'iment', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Exper', 'iment', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Unknown', 'Record', 'clone', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'copy', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Float', 'Buffer', 'slice', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'byte', 'Buffer', '.', 'limit', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'limit', '*', 'AST#field_access#Left', 'Size', 'Of', '.', 'FL', 'O', 'AT', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'byte', 'Buffer', '.', 'position', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'position', '*', 'AST#field_access#Left', 'Size', 'Of', '.', 'FL', 'O', 'AT', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'Byte', 'Buffer', 'AST#variable_declarator#Left', 'bb', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'byte', 'Buffer', '.', 'slice', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'order', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'byte', 'Buffer', '.', 'order', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Float', 'Buffer', 'AST#variable_declarator#Left', 'result', '=', 'AST#object_creation_expression#Left', 'new', 'Float', 'To', 'Byte', 'Buffer', 'Adapter', 'AST#argument_list#Left', '(', 'bb', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'byte', 'Buffer', '.', 'clear', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'result', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Snap', 'shot', 'S', 'ched', 'ules', 'Result', 'desc', 'ribe', 'Snap', 'shot', 'S', 'ched', 'ules', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Snap', 'shot', 'S', 'ched', 'ules', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Snap', 'shot', 'S', 'ched', 'ules', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Images', 'Result', 'list', 'Images', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Images', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Images', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Diff', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'ins', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'del', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'rep', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'no', 'op', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'INS', 'ERT', '=', 'ins', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'DE', 'LE', 'TE', '=', 'del', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'RE', 'PL', 'ACE', '=', 'rep', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'NO', 'OP', '=', 'no', 'op', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'Form', 'ula', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'String', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'oper', 'ands', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'buffer', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', 'AST#array_access#Left', 'oper', 'ands', '[', '0', ']', 'AST#array_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '","', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', 'AST#array_access#Left', 'oper', 'ands', '[', '1', ']', 'AST#array_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'buffer', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'void', 'setup', 'Environment', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'String', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'work', 'book', 'Names', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'F', 'ork', 'ed', 'E', 'val', 'u', 'ator', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'eval', 'u', 'ators', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'Work', 'book', 'E', 'val', 'u', 'ator', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'wb', 'E', 'vals', '=', 'AST#array_creation_expression#Left', 'new', 'Work', 'book', 'E', 'val', 'u', 'ator', 'AST#dimensions_expr#Left', '[', 'AST#field_access#Left', 'eval', 'u', 'ators', '.', 'length', 'AST#field_access#Right', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#field_access#Left', 'wb', 'E', 'vals', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'wb', 'E', 'vals', '[', 'i', ']', 'AST#array_access#Right', '=', 'AST#field_access#Left', 'AST#array_access#Left', 'eval', 'u', 'ators', '[', 'i', ']', 'AST#array_access#Right', '.', '_', 'eval', 'u', 'ator', 'AST#field_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Coll', 'abor', 'ating', 'Work', 'books', 'Environment', '.', 'setup', 'AST#argument_list#Left', '(', 'work', 'book', 'Names', ',', 'wb', 'E', 'vals', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Photo', 'Tags', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'Cloud', 'Photo', '"', ',', '"', '2017', '-', '07', '-', '11', '"', ',', '"', 'List', 'Photo', 'Tags', '"', ',', '"', 'cloud', 'photo', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Prot', 'ocol', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Prot', 'ocol', 'Type', '.', 'HT', 'TPS', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Random', 'Sam', 'pling', 'Fac', 'ets', 'Collect', 'or', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'sample', 'Size', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'long', 'seed', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'false', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'sample', 'Size', 'AST#field_access#Right', '=', 'sample', 'Size', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'random', 'AST#field_access#Right', '=', 'AST#object_creation_expression#Left', 'new', 'X', 'OR', 'Shift', '64', 'Random', 'AST#argument_list#Left', '(', 'seed', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'sam', 'pled', 'Doc', 's', 'AST#field_access#Right', '=', 'null', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'All', 'ocate', 'Static', 'I', 'p', 'Result', 'all', 'ocate', 'Static', 'I', 'p', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'All', 'ocate', 'Static', 'I', 'p', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'All', 'ocate', 'Static', 'I', 'p', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'F', 'eat', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Input', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'future', 'Header', '=', 'AST#object_creation_expression#Left', 'new', 'F', 'tr', 'Header', 'AST#argument_list#Left', '(', 'in', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'isf', '_', 'shared', 'Feature', 'Type', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'res', 'erved', '1', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Byte', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'res', 'erved', '2', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Int', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'c', 'ref', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'U', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'cb', 'F', 'eat', 'Data', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Int', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'res', 'erved', '3', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'cell', 'Ref', 's', '=', 'AST#array_creation_expression#Left', 'new', 'Cell', 'Range', 'Address', 'AST#dimensions_expr#Left', '[', 'c', 'ref', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#field_access#Left', 'cell', 'Ref', 's', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'cell', 'Ref', 's', '[', 'i', ']', 'AST#array_access#Right', '=', 'AST#object_creation_expression#Left', 'new', 'Cell', 'Range', 'Address', 'AST#argument_list#Left', '(', 'in', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#switch_expression#Left', 'switch', 'AST#parenthesized_expression#Left', '(', 'isf', '_', 'shared', 'Feature', 'Type', ')', 'AST#parenthesized_expression#Right', 'AST#switch_block#Left', '{', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'AST#field_access#Left', 'F', 'eat', 'H', 'dr', 'Record', '.', 'SH', 'AR', 'ED', 'FE', 'ATURES', '_', 'IS', 'F', 'PR', 'OT', 'ECTION', 'AST#field_access#Right', 'AST#switch_label#Right', ':', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'shared', 'Feature', '=', 'AST#object_creation_expression#Left', 'new', 'F', 'eat', 'Prot', 'ection', 'AST#argument_list#Left', '(', 'in', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'AST#field_access#Left', 'F', 'eat', 'H', 'dr', 'Record', '.', 'SH', 'AR', 'ED', 'FE', 'ATURES', '_', 'IS', 'FF', 'EC', '2', 'AST#field_access#Right', 'AST#switch_label#Right', ':', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'shared', 'Feature', '=', 'AST#object_creation_expression#Left', 'new', 'F', 'eat', 'Form', 'ula', 'Er', 'r', '2', 'AST#argument_list#Left', '(', 'in', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'AST#field_access#Left', 'F', 'eat', 'H', 'dr', 'Record', '.', 'SH', 'AR', 'ED', 'FE', 'ATURES', '_', 'IS', 'FF', 'AC', 'TO', 'ID', 'AST#field_access#Right', 'AST#switch_label#Right', ':', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'shared', 'Feature', '=', 'AST#object_creation_expression#Left', 'new', 'F', 'eat', 'Smart', 'Tag', 'AST#argument_list#Left', '(', 'in', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'default', ':', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'log', 'ger', '.', 'log', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'PO', 'IL', 'og', 'ger', '.', 'ERROR', 'AST#field_access#Right', ',', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'Unknown', 'ĠShared', 'ĠFeature', 'Ġ"', '+', 'isf', '_', 'shared', 'Feature', 'Type', 'AST#binary_expression#Right', '+', '"', 'Ġfound', '!"', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#switch_block_statement_group#Right', '}', 'AST#switch_block#Right', 'AST#switch_expression#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Rev', 'Comm', 'it', 'try', 'Fast', 'Forward', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Rev', 'Comm', 'it', 'new', 'Comm', 'it', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', ',', 'G', 'it', 'API', 'Exception', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Ref', 'AST#variable_declarator#Left', 'head', '=', 'AST#method_invocation#Left', 'get', 'Head', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Object', 'Id', 'AST#variable_declarator#Left', 'head', 'Id', '=', 'AST#method_invocation#Left', 'head', '.', 'get', 'Object', 'Id', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'head', 'Id', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Ref', 'Not', 'Found', 'Exception', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Message', 'Format', '.', 'format', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'AST#method_invocation#Left', 'J', 'G', 'it', 'Text', '.', 'get', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'ref', 'Not', 'Res', 'olved', 'AST#field_access#Right', ',', 'AST#field_access#Left', 'Const', 'ants', '.', 'HEAD', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'Rev', 'Comm', 'it', 'AST#variable_declarator#Left', 'head', 'Comm', 'it', '=', 'AST#method_invocation#Left', 'walk', '.', 'look', 'up', 'Comm', 'it', 'AST#argument_list#Left', '(', 'head', 'Id', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'walk', '.', 'is', 'Mer', 'ged', 'Int', 'o', 'AST#argument_list#Left', '(', 'new', 'Comm', 'it', ',', 'head', 'Comm', 'it', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'new', 'Comm', 'it', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 'head', 'Name', '=', 'AST#method_invocation#Left', 'get', 'Head', 'Name', 'AST#argument_list#Left', '(', 'head', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'try', 'Fast', 'Forward', 'AST#argument_list#Left', '(', 'head', 'Name', ',', 'head', 'Comm', 'it', ',', 'new', 'Comm', 'it', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Snap', 'shot', 'Sche', 'dule', 'Result', 'create', 'Snap', 'shot', 'Sche', 'dule', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Snap', 'shot', 'Sche', 'dule', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Snap', 'shot', 'Sche', 'dule', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Record', 'get', 'Next', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'has', 'Next', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Runtime', 'Exception', 'AST#argument_list#Left', '(', '"', 'Attempt', 'Ġto', 'Ġread', 'Ġpast', 'Ġend', 'Ġof', 'Ġrecord', 'Ġstream', '"', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', '_', 'count', 'Read', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', '_', 'list', '.', 'get', 'AST#argument_list#Left', '(', 'AST#update_expression#Left', '_', 'next', 'Index', '++', 'AST#update_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Raw', 'Par', 'se', 'Ut', 'ils', '.', 'dec', 'ode', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'buf', '.', 'to', 'Byte', 'Array', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'List', 'T', 'ables', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'exclusive', 'Start', 'Table', 'Name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Ex', 'clusive', 'Start', 'Table', 'Name', 'AST#argument_list#Left', '(', 'exclusive', 'Start', 'Table', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Enable', 'Al', 'arm', 'A', 'ctions', 'Result', 'enable', 'Al', 'arm', 'A', 'ctions', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Enable', 'Al', 'arm', 'A', 'ctions', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Enable', 'Al', 'arm', 'A', 'ctions', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Builder', 'AST#ERROR#Left', '(', ')', '{', 'AST#ERROR#Right', 'this', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'true', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'equ', 'als', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'obj', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'State', 'AST#variable_declarator#Left', 'other', '=', 'AST#cast_expression#Left', '(', 'State', ')', 'obj', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'is', '_', 'final', '==', 'AST#field_access#Left', 'other', '.', 'is', '_', 'final', 'AST#field_access#Right', 'AST#binary_expression#Right', '&&', 'AST#method_invocation#Left', 'Ar', 'rays', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'this', '.', 'lab', 'els', 'AST#field_access#Right', ',', 'AST#field_access#Left', 'other', '.', 'lab', 'els', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '&&', 'AST#method_invocation#Left', 'reference', 'Equ', 'als', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'this', '.', 'states', 'AST#field_access#Right', ',', 'AST#field_access#Left', 'other', '.', 'states', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Token', 'Stream', 'create', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Token', 'Stream', 'input', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'English', 'P', 'oss', 'ess', 'ive', 'Filter', 'AST#argument_list#Left', '(', 'input', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'clear', 'Format', 'ting', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'string', '=', 'AST#method_invocation#Left', 'clone', 'String', 'If', 'Required', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', '_', 'string', '.', 'clear', 'Format', 'ting', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'To', 'S', 'ST', 'If', 'Required', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'get', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'long', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'arr', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'off', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'len', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#assert_statement#Left', 'assert', 'AST#binary_expression#Left', 'len', '>', '0', 'AST#binary_expression#Right', ':', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'len', 'Ġmust', 'Ġbe', 'Ġ>', 'Ġ0', 'Ġ(', 'got', 'Ġ"', '+', 'len', 'AST#binary_expression#Right', '+', '")', '"', 'AST#binary_expression#Right', ';', 'AST#assert_statement#Right', 'AST#assert_statement#Left', 'assert', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'index', '>', '=', '0', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'index', '<', 'value', 'Count', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ';', 'AST#assert_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'len', '=', 'AST#method_invocation#Left', 'Math', '.', 'min', 'AST#argument_list#Left', '(', 'len', ',', 'AST#binary_expression#Left', 'value', 'Count', '-', 'index', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Ar', 'rays', '.', 'fill', 'AST#argument_list#Left', '(', 'arr', ',', 'off', ',', 'AST#binary_expression#Left', 'off', '+', 'len', 'AST#binary_expression#Right', ',', '0', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'len', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Route', 'Response', 'Result', 'delete', 'Route', 'Response', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Route', 'Response', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Route', 'Response', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'Private', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'format', 'AST#argument_list#Left', '(', 'true', ',', 'false', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Pres', 'igned', 'Domain', 'Url', 'Result', 'create', 'Pres', 'igned', 'Domain', 'Url', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Pres', 'igned', 'Domain', 'Url', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Pres', 'igned', 'Domain', 'Url', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'write', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'one', 'Char', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'do', 'Write', 'AST#argument_list#Left', '(', 'AST#array_creation_expression#Left', 'new', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_initializer#Left', '{', 'AST#cast_expression#Left', '(', 'char', ')', 'one', 'Char', 'AST#cast_expression#Right', '}', 'AST#array_initializer#Right', 'AST#array_creation_expression#Right', ',', '0', ',', '1', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'S', 'ST', 'Record', 'get', 'S', 'ST', 'Record', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 's', 'st', 'Record', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'term', '="', '+', 'term', 'AST#binary_expression#Right', '+', '",', 'field', '="', 'AST#binary_expression#Right', '+', 'field', 'AST#binary_expression#Right', '+', '",', 'value', '="', 'AST#binary_expression#Right', '+', 'AST#method_invocation#Left', 'value', 'To', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '",', 'doc', 'ID', 'U', 'pt', 'o', '="', 'AST#binary_expression#Right', '+', 'doc', 'ID', 'U', 'pt', 'o', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'is', 'S', 'aturated', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'F', 'uzz', 'y', 'Set', 'bl', 'oom', 'Filter', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Field', 'Info', 'field', 'Info', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'bl', 'oom', 'Filter', '.', 'get', 'S', 'aturation', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '>', '0', '.', '9', 'f', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Builder', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'bo', 'olean', 'ignore', 'Case', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'ignore', 'Case', 'AST#field_access#Right', '=', 'ignore', 'Case', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '+', '"(', 'max', 'Basic', 'Qu', 'eries', ':', 'Ġ"', 'AST#binary_expression#Right', '+', 'max', 'Basic', 'Qu', 'eries', 'AST#binary_expression#Right', '+', '",', 'Ġqueries', 'Made', ':', 'Ġ"', 'AST#binary_expression#Right', '+', 'qu', 'eries', 'Made', 'AST#binary_expression#Right', '+', '")', '"', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Data', 'Source', 'Result', 'delete', 'Data', 'Source', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Data', 'Source', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Data', 'Source', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Reb', 'oot', 'Node', 'Result', 're', 'boot', 'Node', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Reb', 'oot', 'Node', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Reb', 'oot', 'Node', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'process', 'Child', 'Rec', 'ords', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'con', 'vert', 'Raw', 'Bytes', 'To', 'Esc', 'her', 'Rec', 'ords', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Or', 'Update', 'Tags', 'Result', 'create', 'Or', 'Update', 'Tags', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Or', 'Update', 'Tags', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Or', 'Update', 'Tags', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'File', 'Snap', 'shot', 'get', 'Snap', 'Shot', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'snap', 'Shot', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Input', 'Stream', 'open', 'Resource', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'resource', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'Input', 'Stream', 'AST#variable_declarator#Left', 'stream', '=', 'AST#ternary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'cl', 'azz', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '?', 'AST#method_invocation#Left', 'cl', 'azz', '.', 'get', 'Resource', 'As', 'Stream', 'AST#argument_list#Left', '(', 'resource', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ':', 'AST#method_invocation#Left', 'loader', '.', 'get', 'Resource', 'As', 'Stream', 'AST#argument_list#Left', '(', 'resource', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#ternary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'stream', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'IO', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'Resource', 'Ġnot', 'Ġfound', ':', 'Ġ"', '+', 'resource', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'stream', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'sb', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', '64', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ["', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', 'sid', '="', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'short', 'To', 'H', 'ex', 'AST#argument_list#Left', '(', '_', 'sid', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġsize', '="', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#field_access#Left', '_', 'data', '.', 'length', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ:', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'to', 'H', 'ex', 'AST#argument_list#Left', '(', '_', 'data', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"]', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'sb', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'next', 'Index', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'index', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Char', 'Sequ', 'ence', 'to', 'Query', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'E', 'scape', 'Query', 'Sy', 'ntax', 'esc', 'aper', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'is', 'Default', 'Field', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'this', '.', 'field', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', '\\"', '"', '+', 'AST#method_invocation#Left', 'get', 'Term', 'E', 'scape', 'Qu', 'oted', 'AST#argument_list#Left', '(', 'esc', 'aper', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '"', '\\"', '"', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#field_access#Left', 'this', '.', 'field', 'AST#field_access#Right', '+', '":"', 'AST#binary_expression#Right', '+', '"', '\\"', '"', 'AST#binary_expression#Right', '+', 'AST#method_invocation#Left', 'get', 'Term', 'E', 'scape', 'Qu', 'oted', 'AST#argument_list#Left', '(', 'esc', 'aper', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '"', '\\"', '"', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Cal', 'c', 'Mode', 'Record', 'clone', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'copy', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'is', 'Output', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'output', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Network', 'Interface', 'Result', 'create', 'Network', 'Interface', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Network', 'Interface', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Network', 'Interface', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'serial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Output', 'out', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'field', '_', '1', '_', 'password', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Stop', 'Domin', 'ant', 'Language', 'Det', 'ection', 'Job', 'Result', 'stop', 'Domin', 'ant', 'Language', 'Det', 'ection', 'Job', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Stop', 'Domin', 'ant', 'Language', 'Det', 'ection', 'Job', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Stop', 'Domin', 'ant', 'Language', 'Det', 'ection', 'Job', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'EC', 'S', 'Met', 'adata', 'Service', 'C', 'red', 'entials', 'F', 'et', 'cher', 'with', 'Connection', 'Timeout', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'mill', 'isec', 'onds', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'connection', 'Timeout', 'In', 'Mill', 'isec', 'onds', 'AST#field_access#Right', '=', 'mill', 'isec', 'onds', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Gate', 'way', 'Group', 'Result', 'get', 'Gate', 'way', 'Group', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Gate', 'way', 'Group', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Gate', 'way', 'Group', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Float', 'Buffer', 'slice', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Read', 'Only', 'Float', 'Array', 'Buffer', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'rem', 'aining', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'back', 'ing', 'Array', ',', 'AST#binary_expression#Left', 'offset', '+', 'position', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'String', 'join', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'Collection', 'AST#type_arguments#Left', '<', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'parts', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'separ', 'ator', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'last', 'Sep', 'ar', 'ator', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'sb', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'last', 'Index', '=', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'parts', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '-', '1', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'String', 'part', ':', 'parts', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', 'part', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'i', '==', 'AST#binary_expression#Left', 'last', 'Index', '-', '1', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', 'last', 'Sep', 'ar', 'ator', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'i', '!', '=', 'last', 'Index', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', 'separ', 'ator', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'sb', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', '("', '+', 'AST#method_invocation#Left', 'a', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '"', 'ĠAND', 'Ġ"', 'AST#binary_expression#Right', '+', 'AST#method_invocation#Left', 'b', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '")', '"', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'List', 'Sub', 'script', 'ions', 'By', 'Topic', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'topic', 'Ar', 'n', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'next', 'Token', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Topic', 'Ar', 'n', 'AST#argument_list#Left', '(', 'topic', 'Ar', 'n', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Next', 'Token', 'AST#argument_list#Left', '(', 'next', 'Token', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'byte', 'read', 'Byte', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#array_access#Left', 'bytes', '[', 'AST#update_expression#Left', 'pos', '--', 'AST#update_expression#Right', ']', 'AST#array_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Termin', 'ate', 'Client', 'V', 'pn', 'Connect', 'ions', 'Result', 'termin', 'ate', 'Client', 'V', 'pn', 'Connect', 'ions', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Termin', 'ate', 'Client', 'V', 'pn', 'Connect', 'ions', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Termin', 'ate', 'Client', 'V', 'pn', 'Connect', 'ions', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Re', 'ceive', 'Message', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'queue', 'Url', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Queue', 'Url', 'AST#argument_list#Left', '(', 'queue', 'Url', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'serial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Output', 'out', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'field', '_', '1', '_', 'bar', 'Space', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'field', '_', '2', '_', 'category', 'Space', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'field', '_', '3', '_', 'format', 'Flags', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Object', 'common', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'output', '1', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Object', 'output', '2', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'output', 's', '.', 'common', 'AST#argument_list#Left', '(', 'AST#cast_expression#Left', '(', 'T', ')', 'output', '1', 'AST#cast_expression#Right', ',', 'AST#cast_expression#Left', '(', 'T', ')', 'output', '2', 'AST#cast_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Variable', 'Result', 'create', 'Variable', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Variable', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Variable', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'final', 'AST#modifiers#Right', 'int', 'match', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'b', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'ptr', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'src', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'ptr', '+', 'AST#field_access#Left', 'src', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', '>', 'AST#field_access#Left', 'b', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#field_access#Left', 'src', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ',', 'AST#update_expression#Left', 'ptr', '++', 'AST#update_expression#Right', ')', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#array_access#Left', 'b', '[', 'ptr', ']', 'AST#array_access#Right', '!', '=', 'AST#array_access#Left', 'src', '[', 'i', ']', 'AST#array_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 'ptr', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'fill', 'Field', 's', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'data', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Esc', 'her', 'Record', 'Factory', 'record', 'Factory', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'bytes', 'Rem', 'aining', '=', 'AST#method_invocation#Left', 'read', 'Header', 'AST#argument_list#Left', '(', 'data', ',', 'offset', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'pos', '=', 'AST#binary_expression#Left', 'offset', '+', '8', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'size', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '1', '_', 'rect', 'X', '1', '=', 'AST#method_invocation#Left', 'Little', 'End', 'ian', '.', 'get', 'Int', 'AST#argument_list#Left', '(', 'data', ',', 'AST#binary_expression#Left', 'pos', '+', 'size', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'size', '+=', '4', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '2', '_', 'rect', 'Y', '1', '=', 'AST#method_invocation#Left', 'Little', 'End', 'ian', '.', 'get', 'Int', 'AST#argument_list#Left', '(', 'data', ',', 'AST#binary_expression#Left', 'pos', '+', 'size', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'size', '+=', '4', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '3', '_', 'rect', 'X', '2', '=', 'AST#method_invocation#Left', 'Little', 'End', 'ian', '.', 'get', 'Int', 'AST#argument_list#Left', '(', 'data', ',', 'AST#binary_expression#Left', 'pos', '+', 'size', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'size', '+=', '4', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '4', '_', 'rect', 'Y', '2', '=', 'AST#method_invocation#Left', 'Little', 'End', 'ian', '.', 'get', 'Int', 'AST#argument_list#Left', '(', 'data', ',', 'AST#binary_expression#Left', 'pos', '+', 'size', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'size', '+=', '4', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'bytes', 'Rem', 'aining', '-', '=', 'size', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'bytes', 'Rem', 'aining', '!', '=', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Record', 'Format', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'Ex', 'pected', 'Ġno', 'Ġremaining', 'Ġbytes', 'Ġbut', 'Ġgot', 'Ġ"', '+', 'bytes', 'Rem', 'aining', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '8', '+', 'size', 'AST#binary_expression#Right', '+', 'bytes', 'Rem', 'aining', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Cloud', 'Front', 'Origin', 'Access', 'Id', 'entity', 'Result', 'create', 'Cloud', 'Front', 'Origin', 'Access', 'Id', 'entity', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Cloud', 'Front', 'Origin', 'Access', 'Id', 'entity', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Cloud', 'Front', 'Origin', 'Access', 'Id', 'entity', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'is', 'Names', 'pace', 'A', 'ware', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'get', 'Feature', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'X', 'ml', 'Pull', 'Parser', '.', 'FE', 'ATURE', '_', 'PR', 'OC', 'ESS', '_', 'N', 'AMES', 'PAC', 'ES', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Over', 'rid', 'able', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'bo', 'olean', 'on', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'over', 'rid', 'able', '=', 'on', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'get', 'Class', 'Name', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'class', 'Name', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'syn', 'chron', 'ized', 'AST#modifiers#Right', 'Directory', 'Reader', 'get', 'Index', 'Reader', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'index', 'Reader', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'index', 'Reader', '.', 'inc', 'Ref', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'index', 'Reader', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'index', 'Of', 'Key', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'key', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'binary', 'Search', 'AST#argument_list#Left', '(', 'm', 'Keys', ',', '0', ',', 'm', 'Size', ',', 'key', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Bl', 'ank', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Input', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '1', '_', 'row', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'U', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '2', '_', 'col', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '3', '_', 'xf', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'long', 'length', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'length', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Password', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Input', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '1', '_', 'password', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Hash', 'Map', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'capacity', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'float', 'load', 'Factor', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'this', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'capacity', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'load', 'Factor', '<', '=', '0', 'AST#binary_expression#Right', '||', 'AST#method_invocation#Left', 'Float', '.', 'is', 'Na', 'N', 'AST#argument_list#Left', '(', 'load', 'Factor', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'Load', 'Ġfactor', ':', 'Ġ"', '+', 'load', 'Factor', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'run', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'long', 'AST#variable_declarator#Left', 'last', 'Re', 'open', 'Start', 'NS', '=', 'AST#method_invocation#Left', 'System', '.', 'n', 'ano', 'Time', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#while_statement#Left', 'while', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'fin', 'ish', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#while_statement#Left', 'while', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'fin', 'ish', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 're', 'open', 'Lock', '.', 'lock', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'bo', 'olean', 'AST#variable_declarator#Left', 'has', 'Wa', 'iting', '=', 'AST#binary_expression#Left', 'wa', 'iting', 'Gen', '>', 'search', 'ing', 'Gen', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'long', 'AST#variable_declarator#Left', 'next', 'Re', 'open', 'Start', 'NS', '=', 'AST#binary_expression#Left', 'last', 'Re', 'open', 'Start', 'NS', '+', 'AST#parenthesized_expression#Left', '(', 'AST#ternary_expression#Left', 'has', 'Wa', 'iting', '?', 'target', 'Min', 'St', 'ale', 'NS', ':', 'target', 'Max', 'St', 'ale', 'NS', 'AST#ternary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'long', 'AST#variable_declarator#Left', 'sleep', 'NS', '=', 'AST#binary_expression#Left', 'next', 'Re', 'open', 'Start', 'NS', '-', 'AST#method_invocation#Left', 'System', '.', 'n', 'ano', 'Time', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'sleep', 'NS', '>', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 're', 'open', 'Cond', '.', 'aw', 'ait', 'N', 'anos', 'AST#argument_list#Left', '(', 'sleep', 'NS', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'Inter', 'rupted', 'Exception', 'ie', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'Thread', '.', 'current', 'Thread', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'inter', 'rupt', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#finally_clause#Left', 'f', 'inally', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 're', 'open', 'Lock', '.', 'un', 'lock', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#finally_clause#Right', 'AST#try_statement#Right', '}', 'AST#block#Right', 'AST#while_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'fin', 'ish', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'last', 'Re', 'open', 'Start', 'NS', '=', 'AST#method_invocation#Left', 'System', '.', 'n', 'ano', 'Time', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ref', 'resh', 'Start', 'Gen', '=', 'AST#method_invocation#Left', 'writer', '.', 'get', 'Max', 'Completed', 'Sequ', 'ence', 'Number', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'manager', '.', 'maybe', 'Ref', 'resh', 'Bl', 'ocking', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'IO', 'Exception', 'io', 'e', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Runtime', 'Exception', 'AST#argument_list#Left', '(', 'io', 'e', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', '}', 'AST#block#Right', 'AST#while_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Delete', 'Login', 'Profile', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'user', 'Name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'User', 'Name', 'AST#argument_list#Left', '(', 'user', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'E', 'poll', 'First', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#ternary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'size', '==', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '?', 'null', ':', 'AST#method_invocation#Left', 'remove', 'First', 'Impl', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#ternary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Photo', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'Cloud', 'Photo', '"', ',', '"', '2017', '-', '07', '-', '11', '"', ',', '"', 'Create', 'Photo', '"', ',', '"', 'cloud', 'photo', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Prot', 'ocol', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Prot', 'ocol', 'Type', '.', 'HT', 'TPS', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'get', 'Name', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', '"', 'res', 'olve', '"', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'find', 'End', 'Offset', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'Builder', 'buffer', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'start', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'start', '>', 'AST#method_invocation#Left', 'buffer', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'start', '<', '0', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'start', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'offset', ',', 'AST#variable_declarator#Left', 'count', '=', 'max', 'Scan', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#assignment_expression#Left', 'offset', '=', 'start', 'AST#assignment_expression#Right', ';', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'offset', '<', 'AST#method_invocation#Left', 'buffer', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'count', '>', '0', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'count', '--', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'bound', 'ary', 'Ch', 'ars', '.', 'cont', 'ains', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'buffer', '.', 'char', 'At', 'AST#argument_list#Left', '(', 'offset', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'offset', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'offset', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 'start', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Object', 'Check', 'er', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'Check', 'er', 'oc', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'obj', 'Check', '=', 'oc', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Base', 'Ref', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Area', 'E', 'val', 'ae', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'ref', 'E', 'val', '=', 'null', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'area', 'E', 'val', '=', 'ae', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'first', 'Row', 'Index', '=', 'AST#method_invocation#Left', 'ae', '.', 'get', 'First', 'Row', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'first', 'Column', 'Index', '=', 'AST#method_invocation#Left', 'ae', '.', 'get', 'First', 'Column', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'height', '=', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'ae', '.', 'get', 'Last', 'Row', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '-', 'AST#method_invocation#Left', 'ae', '.', 'get', 'First', 'Row', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'width', '=', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'ae', '.', 'get', 'Last', 'Column', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '-', 'AST#method_invocation#Left', 'ae', '.', 'get', 'First', 'Column', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'V', 'pc', 'End', 'point', 'Result', 'create', 'V', 'pc', 'End', 'point', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'V', 'pc', 'End', 'point', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'V', 'pc', 'End', 'point', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'D', 'ere', 'g', 'ister', 'Works', 'pace', 'Directory', 'Result', 'd', 'ere', 'g', 'ister', 'Works', 'pace', 'Directory', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'D', 'ere', 'g', 'ister', 'Works', 'pace', 'Directory', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'D', 'ere', 'g', 'ister', 'Works', 'pace', 'Directory', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Chart', 'FR', 'T', 'Info', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Input', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'rt', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'gr', 'bit', 'Fr', 't', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ver', 'Orig', 'inator', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Byte', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ver', 'Writer', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Byte', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'c', 'C', 'FR', 'T', 'ID', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'rg', 'C', 'FR', 'T', 'ID', '=', 'AST#array_creation_expression#Left', 'new', 'C', 'FR', 'T', 'ID', 'AST#dimensions_expr#Left', '[', 'c', 'C', 'FR', 'T', 'ID', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'c', 'C', 'FR', 'T', 'ID', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'rg', 'C', 'FR', 'T', 'ID', '[', 'i', ']', 'AST#array_access#Right', '=', 'AST#object_creation_expression#Left', 'new', 'C', 'FR', 'T', 'ID', 'AST#argument_list#Left', '(', 'in', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Mer', 'ger', 'new', 'Mer', 'ger', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Rep', 'ository', 'db', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'One', 'Side', 'AST#argument_list#Left', '(', 'db', ',', 'tree', 'Index', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Data', 'Source', 'From', 'Red', 'shift', 'Result', 'create', 'Data', 'Source', 'From', 'Red', 'shift', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Data', 'Source', 'From', 'Red', 'shift', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Data', 'Source', 'From', 'Red', 'shift', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'clear', 'D', 'FA', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'd', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'd', '<', 'AST#field_access#Left', 'dec', 'ision', 'To', 'D', 'FA', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'd', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'dec', 'ision', 'To', 'D', 'FA', '[', 'd', ']', 'AST#array_access#Right', '=', 'AST#object_creation_expression#Left', 'new', 'D', 'FA', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'at', 'n', '.', 'get', 'Dec', 'ision', 'State', 'AST#argument_list#Left', '(', 'd', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'd', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'remove', 'Name', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'index', '=', 'AST#method_invocation#Left', 'get', 'Name', 'Index', 'AST#argument_list#Left', '(', 'name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'remove', 'Name', 'AST#argument_list#Left', '(', 'index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'buffer', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"[', 'Right', 'Marg', 'in', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'margin', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ("', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Marg', 'in', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ)', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', '[/', 'Right', 'Marg', 'in', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'buffer', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Ref', 'resh', 'All', 'Record', 'clone', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'copy', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Standard', 'Query', 'Node', 'Process', 'or', 'P', 'ip', 'eline', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Query', 'Config', 'Handler', 'query', 'Config', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'query', 'Config', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Wild', 'card', 'Query', 'Node', 'Process', 'or', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Multi', 'Field', 'Query', 'Node', 'Process', 'or', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'F', 'uzz', 'y', 'Query', 'Node', 'Process', 'or', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Re', 'gex', 'p', 'Query', 'Node', 'Process', 'or', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Match', 'All', 'Doc', 's', 'Query', 'Node', 'Process', 'or', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Open', 'Range', 'Query', 'Node', 'Process', 'or', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Point', 'Query', 'Node', 'Process', 'or', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Point', 'Range', 'Query', 'Node', 'Process', 'or', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Term', 'Range', 'Query', 'Node', 'Process', 'or', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Allow', 'Lead', 'ing', 'Wild', 'card', 'Process', 'or', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Analy', 'zer', 'Query', 'Node', 'Process', 'or', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Ph', 'rase', 'Sl', 'op', 'Query', 'Node', 'Process', 'or', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Boo', 'lean', 'Query', '2', 'Mod', 'ifier', 'Node', 'Process', 'or', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'No', 'Child', 'Opt', 'im', 'ization', 'Query', 'Node', 'Process', 'or', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Remove', 'De', 'leted', 'Query', 'N', 'odes', 'Process', 'or', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Remove', 'Empty', 'Non', 'Le', 'af', 'Query', 'Node', 'Process', 'or', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Boo', 'lean', 'Single', 'Child', 'Opt', 'im', 'ization', 'Query', 'Node', 'Process', 'or', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Default', 'Ph', 'rase', 'Sl', 'op', 'Query', 'Node', 'Process', 'or', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Boost', 'Query', 'Node', 'Process', 'or', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Multi', 'Term', 'Rew', 'rite', 'Method', 'Process', 'or', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'format', 'As', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'sheet', 'Name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'bo', 'olean', 'use', 'Abs', 'olute', 'Address', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'sb', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'sheet', 'Name', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'She', 'et', 'Name', 'Form', 'atter', '.', 'format', 'AST#argument_list#Left', '(', 'sheet', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', '!"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'Cell', 'Reference', 'AST#variable_declarator#Left', 'cell', 'Ref', 'From', '=', 'AST#object_creation_expression#Left', 'new', 'Cell', 'Reference', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'First', 'Row', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#method_invocation#Left', 'get', 'First', 'Column', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'use', 'Abs', 'olute', 'Address', ',', 'use', 'Abs', 'olute', 'Address', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Cell', 'Reference', 'AST#variable_declarator#Left', 'cell', 'Ref', 'To', '=', 'AST#object_creation_expression#Left', 'new', 'Cell', 'Reference', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Last', 'Row', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#method_invocation#Left', 'get', 'Last', 'Column', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'use', 'Abs', 'olute', 'Address', ',', 'use', 'Abs', 'olute', 'Address', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'cell', 'Ref', 'From', '.', 'format', 'As', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'cell', 'Ref', 'From', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'cell', 'Ref', 'To', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', '||', 'AST#method_invocation#Left', 'is', 'Full', 'Column', 'Range', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '||', 'AST#method_invocation#Left', 'is', 'Full', 'Row', 'Range', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', "':", "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'cell', 'Ref', 'To', '.', 'format', 'As', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'sb', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Byte', 'Buffer', 'put', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'byte', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Read', 'Only', 'Buffer', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'mode', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'm', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'mode', '=', 'm', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Short', 'Buffer', 'slice', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Read', 'Write', 'Short', 'Array', 'Buffer', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'rem', 'aining', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'back', 'ing', 'Array', ',', 'AST#binary_expression#Left', 'offset', '+', 'position', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'long', 'n', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'count', '<', 'index', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Array', 'Index', 'Out', 'Of', 'B', 'ounds', 'Exception', 'AST#argument_list#Left', '(', 'index', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'else', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'count', '==', 'index', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'AST#argument_list#Left', '(', 'n', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'else', 'ent', 'ries', '[', 'index', ']', 'AST#array_access#Right', '=', 'n', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Byte', 'Buffer', 'put', 'Float', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'float', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Read', 'Only', 'Buffer', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'double', 'max', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'double', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'values', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'double', 'AST#variable_declarator#Left', 'max', '=', 'AST#field_access#Left', 'Double', '.', 'N', 'EG', 'ATIVE', '_', 'IN', 'FIN', 'ITY', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'double', 'value', ':', 'values', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'max', '=', 'AST#method_invocation#Left', 'Math', '.', 'max', 'AST#argument_list#Left', '(', 'max', ',', 'value', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#return_statement#Left', 'return', 'max', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Rep', 'o', 'Web', 'hook', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'cr', '"', ',', '"', '2016', '-', '06', '-', '07', '"', ',', '"', 'Update', 'Rep', 'o', 'Web', 'hook', '"', ',', '"', 'cr', '"', ')', ';', 'AST#ERROR#Right', 'set', 'U', 'ri', 'Pattern', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', '"', '/', 're', 'pos', '/', '[', 'Rep', 'o', 'Names', 'pace', ']', '/', '[', 'Rep', 'o', 'Name', ']', '/', 'web', 'hook', 's', '/', '[', 'Web', 'hook', 'Id', ']"', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Method', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Method', 'Type', '.', 'POST', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Delete', 'Attributes', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'domain', 'Name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'item', 'Name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'java', '.', 'util', 'AST#scoped_type_identifier#Right', '.', 'List', 'AST#scoped_type_identifier#Right', 'AST#type_arguments#Left', '<', 'Attribute', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'att', 'ributes', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Update', 'Condition', 'expected', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Domain', 'Name', 'AST#argument_list#Left', '(', 'domain', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Item', 'Name', 'AST#argument_list#Left', '(', 'item', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Attributes', 'AST#argument_list#Left', '(', 'att', 'ributes', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Ex', 'pected', 'AST#argument_list#Left', '(', 'expected', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'sb', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"[', 'S', 'X', 'PI', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#field_access#Left', '_', 'field', 'Inf', 'os', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġitem', '["', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'i', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"]', '="', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#array_access#Left', '_', 'field', 'Inf', 'os', '[', 'i', ']', 'AST#array_access#Right', '.', 'append', 'Debug', 'Info', 'AST#argument_list#Left', '(', 'sb', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', "'", '\\', 'n', "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', '[/', 'S', 'X', 'PI', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'sb', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'is', 'Success', 'ful', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'mer', 'ge', 'Result', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'mer', 'ge', 'Result', '.', 'get', 'Mer', 'ge', 'Status', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'is', 'Success', 'ful', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', 'else', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 're', 'base', 'Result', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 're', 'base', 'Result', '.', 'get', 'Status', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'is', 'Success', 'ful', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Bytes', 'Value', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Bytes', 'Value', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Bytes', 'Ref', 'AST#argument_list#Left', '(', 'value', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Connect', 'ions', 'Result', 'desc', 'ribe', 'Connect', 'ions', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Connect', 'ions', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Connect', 'ions', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Photos', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'Cloud', 'Photo', '"', ',', '"', '2017', '-', '07', '-', '11', '"', ',', '"', 'Delete', 'Photos', '"', ',', '"', 'cloud', 'photo', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Prot', 'ocol', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Prot', 'ocol', 'Type', '.', 'HT', 'TPS', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'add', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'E', 'object', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'iterator', '.', 'add', 'AST#argument_list#Left', '(', 'object', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sub', 'List', '.', 'size', 'Changed', 'AST#argument_list#Left', '(', 'true', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'end', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'Byte', 'Buffer', 'all', 'ocate', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'capacity', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'capacity', '<', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Read', 'Write', 'He', 'ap', 'Byte', 'Buffer', 'AST#argument_list#Left', '(', 'capacity', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'S', 'r', 'nd', 'Query', 'get', 'Sub', 'Query', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'q', 'n', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'qu', 'eries', '.', 'get', 'AST#argument_list#Left', '(', 'q', 'n', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'float', 'current', 'Score', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'doc', 'Id', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'field', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'start', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'end', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'num', 'Pay', 'loads', 'Se', 'en', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'float', 'current', 'Score', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'float', 'current', 'Pay', 'load', 'Score', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'num', 'Pay', 'loads', 'Se', 'en', '==', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'current', 'Pay', 'load', 'Score', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Math', '.', 'min', 'AST#argument_list#Left', '(', 'current', 'Pay', 'load', 'Score', ',', 'current', 'Score', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'sb', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"[', 'BL', 'ANK', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġrow', '=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'short', 'To', 'H', 'ex', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Row', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġcol', '=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'short', 'To', 'H', 'ex', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Column', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġx', 'f', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'short', 'To', 'H', 'ex', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'X', 'F', 'Index', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', '[/', 'BL', 'ANK', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'sb', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Log', 'Pattern', 'Result', 'desc', 'ribe', 'Log', 'Pattern', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Log', 'Pattern', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Log', 'Pattern', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Register', 'Trans', 'it', 'Gate', 'way', 'Mult', 'ic', 'ast', 'Group', 'Members', 'Result', 'register', 'Trans', 'it', 'Gate', 'way', 'Mult', 'ic', 'ast', 'Group', 'Members', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Register', 'Trans', 'it', 'Gate', 'way', 'Mult', 'ic', 'ast', 'Group', 'Members', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Register', 'Trans', 'it', 'Gate', 'way', 'Mult', 'ic', 'ast', 'Group', 'Members', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Phone', 'Number', 'Settings', 'Result', 'get', 'Phone', 'Number', 'Settings', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Phone', 'Number', 'Settings', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Phone', 'Number', 'Settings', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Object', 'Id', 'get', 'Data', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'data', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'is', 'Direct', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Delete', 'Server', 'Cert', 'ificate', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'server', 'Cert', 'ificate', 'Name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Server', 'Cert', 'ificate', 'Name', 'AST#argument_list#Left', '(', 'server', 'Cert', 'ificate', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'Buffer', 'append', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'double', 'd', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'Real', 'To', 'String', '.', 'get', 'Instance', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'Double', 'AST#argument_list#Left', '(', 'this', ',', 'd', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'E', 'val', 'uation', 'Result', 'get', 'E', 'val', 'uation', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'E', 'val', 'uation', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'E', 'val', 'uation', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Link', 'ed', 'Data', 'Record', 'get', 'Data', 'Name', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'data', 'Name', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'find', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'start', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'find', 'Pos', '=', 'start', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'find', 'Pos', '<', 'region', 'Start', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'find', 'Pos', '=', 'region', 'Start', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'find', 'Pos', '>', '=', 'region', 'End', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'match', 'Found', '=', 'false', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'match', 'Found', '=', 'AST#method_invocation#Left', 'find', 'Impl', 'AST#argument_list#Left', '(', 'address', ',', 'input', ',', 'find', 'Pos', ',', 'match', 'Off', 'sets', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'match', 'Found', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'find', 'Pos', '=', 'AST#array_access#Left', 'match', 'Off', 'sets', '[', '1', ']', 'AST#array_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'match', 'Found', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'L', 'if', 'ecycle', 'Policy', 'Preview', 'Result', 'get', 'L', 'if', 'ecycle', 'Policy', 'Preview', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'L', 'if', 'ecycle', 'Policy', 'Preview', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'L', 'if', 'ecycle', 'Policy', 'Preview', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Single', 'Position', 'Token', 'Stream', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'word', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'term', 'Att', '=', 'AST#method_invocation#Left', 'add', 'Attribute', 'AST#argument_list#Left', '(', 'AST#class_literal#Left', 'Char', 'Term', 'Attribute', '.', 'class', 'AST#class_literal#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'pos', 'In', 'cr', 'Att', '=', 'AST#method_invocation#Left', 'add', 'Attribute', 'AST#argument_list#Left', '(', 'AST#class_literal#Left', 'Position', 'Incre', 'ment', 'Attribute', '.', 'class', 'AST#class_literal#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'word', 'AST#field_access#Right', '=', 'word', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'return', 'ed', '=', 'true', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'serial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Output', 'out', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'field', '_', '1', '_', 'print', '_', 'grid', 'lines', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'String', 'Builder', 'AST#variable_declarator#Left', 's', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 's', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Const', 'ants', '.', 'type', 'String', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Type', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 's', '.', 'append', 'AST#argument_list#Left', '(', "'", "Ġ'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 's', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 's', '.', 'append', 'AST#argument_list#Left', '(', "'", "Ġ'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 's', '.', 'append', 'AST#argument_list#Left', '(', 'commit', 'Time', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 's', '.', 'append', 'AST#argument_list#Left', '(', "'", "Ġ'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'append', 'Core', 'Flags', 'AST#argument_list#Left', '(', 's', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 's', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'L', 's', 'Remote', 'Command', 'set', 'Remote', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'remote', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'check', 'Call', 'able', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'remote', 'AST#field_access#Right', '=', 'remote', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'coll', 'apse', 'Row', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'row', 'Number', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'start', 'Row', '=', 'AST#method_invocation#Left', 'find', 'Start', 'Of', 'Row', 'Out', 'line', 'Group', 'AST#argument_list#Left', '(', 'row', 'Number', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Row', 'Record', 'AST#variable_declarator#Left', 'row', 'Record', '=', 'AST#method_invocation#Left', 'get', 'Row', 'AST#argument_list#Left', '(', 'start', 'Row', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'next', 'Row', 'I', 'x', '=', 'AST#method_invocation#Left', 'write', 'Hidden', 'AST#argument_list#Left', '(', 'row', 'Record', ',', 'start', 'Row', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Row', 'Record', 'AST#variable_declarator#Left', 'row', '=', 'AST#method_invocation#Left', 'get', 'Row', 'AST#argument_list#Left', '(', 'next', 'Row', 'I', 'x', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'row', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'row', '=', 'AST#method_invocation#Left', 'create', 'Row', 'AST#argument_list#Left', '(', 'next', 'Row', 'I', 'x', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'insert', 'Row', 'AST#argument_list#Left', '(', 'row', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'row', '.', 'set', 'Col', 'apsed', 'AST#argument_list#Left', '(', 'true', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Ass', 'ociate', 'Skill', 'Group', 'With', 'Room', 'Result', 'ass', 'ociate', 'Skill', 'Group', 'With', 'Room', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Ass', 'ociate', 'Skill', 'Group', 'With', 'Room', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Ass', 'ociate', 'Skill', 'Group', 'With', 'Room', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'buffer', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"[', 'SER', 'IES', 'LIST', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'series', 'Numbers', '=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ("', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Ar', 'rays', '.', 'to', 'String', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Series', 'Numbers', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ)', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', '[/', 'SER', 'IES', 'LIST', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'buffer', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Query', 'Config', 'Handler', 'get', 'Query', 'Config', 'Handler', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'this', '.', 'query', 'Config', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'get', 'Class', 'Arg', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'null', '!', '=', 'original', 'Args', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 'class', 'Name', '=', 'AST#method_invocation#Left', 'original', 'Args', '.', 'get', 'AST#argument_list#Left', '(', 'CLASS', '_', 'NAME', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'null', '!', '=', 'class', 'Name', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'class', 'Name', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
