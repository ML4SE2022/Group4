['AST#program#Left', 'AST#ERROR#Left', 'public', 'D', 'V', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Input', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'option', '_', 'flags', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Int', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'prom', 'pt', 'Title', '=', 'AST#method_invocation#Left', 'read', 'Un', 'ic', 'ode', 'String', 'AST#argument_list#Left', '(', 'in', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'error', 'Title', '=', 'AST#method_invocation#Left', 'read', 'Un', 'ic', 'ode', 'String', 'AST#argument_list#Left', '(', 'in', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'prom', 'pt', 'Text', '=', 'AST#method_invocation#Left', 'read', 'Un', 'ic', 'ode', 'String', 'AST#argument_list#Left', '(', 'in', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'error', 'Text', '=', 'AST#method_invocation#Left', 'read', 'Un', 'ic', 'ode', 'String', 'AST#argument_list#Left', '(', 'in', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'field', '_', 'size', '_', 'first', '_', 'form', 'ula', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'U', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'not', '_', 'used', '_', '1', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'form', 'ula', '1', '=', 'AST#method_invocation#Left', 'Form', 'ula', '.', 'read', 'AST#argument_list#Left', '(', 'field', '_', 'size', '_', 'first', '_', 'form', 'ula', ',', 'in', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'field', '_', 'size', '_', 'sec', '_', 'form', 'ula', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'U', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'not', '_', 'used', '_', '2', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'form', 'ula', '2', '=', 'AST#method_invocation#Left', 'Form', 'ula', '.', 'read', 'AST#argument_list#Left', '(', 'field', '_', 'size', '_', 'sec', '_', 'form', 'ula', ',', 'in', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'reg', 'ions', '=', 'AST#object_creation_expression#Left', 'new', 'Cell', 'Range', 'Address', 'List', 'AST#argument_list#Left', '(', 'in', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'pattern', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Insert', 'Instance', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'O', 'ts', '"', ',', '"', '2016', '-', '06', '-', '20', '"', ',', '"', 'Insert', 'Instance', '"', ',', '"', 'ots', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Method', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Method', 'Type', '.', 'POST', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'cont', 'ains', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'o', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'index', 'Of', 'AST#argument_list#Left', '(', 'o', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'Byte', 'Buffer', 'en', 'code', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 's', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'en', 'code', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Char', 'Buffer', '.', 'wrap', 'AST#argument_list#Left', '(', 's', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'requires', 'Comm', 'it', 'Body', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'get', 'Key', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Raw', 'Par', 'se', 'Ut', 'ils', '.', 'dec', 'ode', 'AST#argument_list#Left', '(', 'enc', ',', 'buffer', ',', 'key', 'Start', ',', 'key', 'End', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Value', 'E', 'val', 'evaluate', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'src', 'Row', 'Index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'src', 'Column', 'Index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Value', 'E', 'val', 'arg', '0', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Value', 'E', 'val', 'arg', '1', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Value', 'E', 'val', 'arg', '2', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Value', 'E', 'val', 'arg', '3', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Value', 'E', 'val', 'arg', '4', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'double', 'result', ';', 'AST#local_variable_declaration#Right', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'double', 'AST#variable_declarator#Left', 'd', '0', '=', 'AST#method_invocation#Left', 'N', 'umeric', 'Function', '.', 'single', 'Oper', 'and', 'E', 'val', 'uate', 'AST#argument_list#Left', '(', 'arg', '0', ',', 'src', 'Row', 'Index', ',', 'src', 'Column', 'Index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'double', 'AST#variable_declarator#Left', 'd', '1', '=', 'AST#method_invocation#Left', 'N', 'umeric', 'Function', '.', 'single', 'Oper', 'and', 'E', 'val', 'uate', 'AST#argument_list#Left', '(', 'arg', '1', ',', 'src', 'Row', 'Index', ',', 'src', 'Column', 'Index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'double', 'AST#variable_declarator#Left', 'd', '2', '=', 'AST#method_invocation#Left', 'N', 'umeric', 'Function', '.', 'single', 'Oper', 'and', 'E', 'val', 'uate', 'AST#argument_list#Left', '(', 'arg', '2', ',', 'src', 'Row', 'Index', ',', 'src', 'Column', 'Index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'double', 'AST#variable_declarator#Left', 'd', '3', '=', 'AST#method_invocation#Left', 'N', 'umeric', 'Function', '.', 'single', 'Oper', 'and', 'E', 'val', 'uate', 'AST#argument_list#Left', '(', 'arg', '3', ',', 'src', 'Row', 'Index', ',', 'src', 'Column', 'Index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'double', 'AST#variable_declarator#Left', 'd', '4', '=', 'AST#method_invocation#Left', 'N', 'umeric', 'Function', '.', 'single', 'Oper', 'and', 'E', 'val', 'uate', 'AST#argument_list#Left', '(', 'arg', '4', ',', 'src', 'Row', 'Index', ',', 'src', 'Column', 'Index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'result', '=', 'AST#method_invocation#Left', 'evaluate', 'AST#argument_list#Left', '(', 'd', '0', ',', 'd', '1', ',', 'd', '2', ',', 'd', '3', ',', 'AST#binary_expression#Left', 'd', '4', '!', '=', '0', '.', '0', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'N', 'umeric', 'Function', '.', 'check', 'Value', 'AST#argument_list#Left', '(', 'result', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'E', 'val', 'uation', 'Exception', 'e', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'e', '.', 'get', 'Error', 'E', 'val', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Number', 'E', 'val', 'AST#argument_list#Left', '(', 'result', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Client', 'V', 'pn', 'End', 'point', 'Result', 'delete', 'Client', 'V', 'pn', 'End', 'point', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Client', 'V', 'pn', 'End', 'point', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Client', 'V', 'pn', 'End', 'point', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Object', 'get', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Char', 'Sequ', 'ence', 'key', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'T', 'ern', 'ary', 'Tree', 'Node', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'list', '=', 'AST#method_invocation#Left', 'aut', 'ocom', 'plete', '.', 'prefix', 'Com', 'pletion', 'AST#argument_list#Left', '(', 'root', ',', 'key', ',', '0', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'list', '==', 'null', 'AST#binary_expression#Right', '||', 'AST#method_invocation#Left', 'list', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'null', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'T', 'ern', 'ary', 'Tree', 'Node', 'n', ':', 'list', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'char', 'Se', 'q', 'Equ', 'als', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'n', '.', 'token', 'AST#field_access#Right', ',', 'key', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'n', '.', 'val', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#return_statement#Left', 'return', 'null', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Start', 'Fle', 'et', 'A', 'ctions', 'Result', 'start', 'Fle', 'et', 'A', 'ctions', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Start', 'Fle', 'et', 'A', 'ctions', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Start', 'Fle', 'et', 'A', 'ctions', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Cell', 'Range', 'Address', 'get', 'Cell', 'Range', 'Address', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', '_', 'list', '.', 'get', 'AST#argument_list#Left', '(', 'index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'Document', 'load', 'X', 'ML', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Reader', 'is', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Document', 'Builder', 'Factory', 'AST#variable_declarator#Left', 'db', 'f', '=', 'AST#method_invocation#Left', 'Document', 'Builder', 'Factory', '.', 'new', 'Instance', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Document', 'Builder', 'AST#variable_declarator#Left', 'db', '=', 'null', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'db', '=', 'AST#method_invocation#Left', 'db', 'f', '.', 'new', 'Document', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'Exception', 'se', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Runtime', 'Exception', 'AST#argument_list#Left', '(', '"', 'Parser', 'Ġconfiguration', 'Ġerror', '"', ',', 'se', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', 'AST#local_variable_declaration#Left', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'org', '.', 'w', '3', 'c', 'AST#scoped_type_identifier#Right', '.', 'dom', 'AST#scoped_type_identifier#Right', '.', 'Document', 'AST#scoped_type_identifier#Right', 'AST#variable_declarator#Left', 'doc', '=', 'null', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'doc', '=', 'AST#method_invocation#Left', 'db', '.', 'parse', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Input', 'Source', 'AST#argument_list#Left', '(', 'is', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'Exception', 'se', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Runtime', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'Error', 'Ġparsing', 'Ġfile', ':"', '+', 'se', 'AST#binary_expression#Right', ',', 'se', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', 'AST#return_statement#Left', 'return', 'doc', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'double', 'get', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'double', 'df', 'lt', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'double', 'AST#variable_declarator#Left', 'vals', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', '=', 'AST#cast_expression#Left', '(', 'AST#array_type#Left', 'double', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', ')', 'AST#method_invocation#Left', 'val', 'By', 'Round', '.', 'get', 'AST#argument_list#Left', '(', 'name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'vals', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#array_access#Left', 'vals', '[', 'AST#binary_expression#Left', 'round', 'Number', '%', 'AST#field_access#Left', 'vals', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ']', 'AST#array_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 's', 'val', '=', 'AST#method_invocation#Left', 'pro', 'ps', '.', 'get', 'Property', 'AST#argument_list#Left', '(', 'name', ',', 'AST#binary_expression#Left', '""', '+', 'df', 'lt', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 's', 'val', '.', 'index', 'Of', 'AST#argument_list#Left', '(', '":"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '<', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Double', '.', 'parse', 'Double', 'AST#argument_list#Left', '(', 's', 'val', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'k', '=', 'AST#method_invocation#Left', 's', 'val', '.', 'index', 'Of', 'AST#argument_list#Left', '(', '":"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 'col', 'Name', '=', 'AST#method_invocation#Left', 's', 'val', '.', 'sub', 'string', 'AST#argument_list#Left', '(', '0', ',', 'k', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 's', 'val', '=', 'AST#method_invocation#Left', 's', 'val', '.', 'sub', 'string', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'k', '+', '1', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'col', 'For', 'Val', 'By', 'Round', '.', 'put', 'AST#argument_list#Left', '(', 'name', ',', 'col', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'vals', '=', 'AST#method_invocation#Left', 'prop', 'To', 'Double', 'Array', 'AST#argument_list#Left', '(', 's', 'val', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'val', 'By', 'Round', '.', 'put', 'AST#argument_list#Left', '(', 'name', ',', 'vals', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#array_access#Left', 'vals', '[', 'AST#binary_expression#Left', 'round', 'Number', '%', 'AST#field_access#Left', 'vals', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ']', 'AST#array_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'get', 'Background', 'Image', 'Id', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Esc', 'her', 'Simple', 'Property', 'AST#variable_declarator#Left', 'property', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Opt', 'Record', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'look', 'up', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Esc', 'her', 'Property', 'Types', '.', 'F', 'ILL', '__', 'P', 'AT', 'TER', 'NT', 'EXT', 'URE', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#ternary_expression#Left', 'AST#binary_expression#Left', 'property', '==', 'null', 'AST#binary_expression#Right', '?', '0', ':', 'AST#method_invocation#Left', 'property', '.', 'get', 'Property', 'Value', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#ternary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Tree', 'Filter', 'get', 'Tree', 'Filter', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'tree', 'Filter', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Member', 'Result', 'get', 'Member', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Member', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Member', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'can', 'En', 'code', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Re', 'place', 'Route', 'Result', 'replace', 'Route', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Re', 'place', 'Route', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Re', 'place', 'Route', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Object', 'Id', 'get', 'Result', 'Tree', 'Id', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#ternary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'result', 'Tree', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '?', 'null', ':', 'AST#method_invocation#Left', 'result', 'Tree', '.', 'to', 'Object', 'Id', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#ternary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'equ', 'als', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'final', 'Object', 'o', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'bo', 'olean', 'AST#variable_declarator#Left', 'r', 'val', '=', 'AST#binary_expression#Left', 'this', '==', 'o', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#unary_expression#Left', '!', 'r', 'val', 'AST#unary_expression#Right', '&&', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'o', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', '&&', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'o', '.', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', 'AST#method_invocation#Left', 'this', '.', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Int', 'List', 'AST#variable_declarator#Left', 'other', '=', 'AST#cast_expression#Left', '(', 'Int', 'List', ')', 'o', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'other', '.', '_', 'limit', 'AST#field_access#Right', '==', '_', 'limit', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'r', 'val', '=', 'true', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'j', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'r', 'val', '&&', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'j', '<', '_', 'limit', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'j', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'r', 'val', '=', 'AST#binary_expression#Left', 'AST#array_access#Left', '_', 'array', '[', 'j', ']', 'AST#array_access#Right', '==', 'AST#array_access#Left', 'AST#field_access#Left', 'other', '.', '_', 'array', 'AST#field_access#Right', '[', 'j', ']', 'AST#array_access#Right', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'r', 'val', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Re', 'usable', 'De', 'leg', 'ation', 'S', 'ets', 'Result', 'list', 'Re', 'usable', 'De', 'leg', 'ation', 'S', 'ets', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Re', 'usable', 'De', 'leg', 'ation', 'S', 'ets', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Re', 'usable', 'De', 'leg', 'ation', 'S', 'ets', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', '("', '+', 'AST#method_invocation#Left', 'a', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '"', 'ĠOR', 'Ġ"', 'AST#binary_expression#Right', '+', 'AST#method_invocation#Left', 'b', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '")', '"', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'In', 'iti', 'ate', 'Layer', 'Upload', 'Result', 'in', 'iti', 'ate', 'Layer', 'Upload', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'In', 'iti', 'ate', 'Layer', 'Upload', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'In', 'iti', 'ate', 'Layer', 'Upload', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Rep', 'o', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'cr', '"', ',', '"', '2016', '-', '06', '-', '07', '"', ',', '"', 'Update', 'Rep', 'o', '"', ',', '"', 'cr', '"', ')', ';', 'AST#ERROR#Right', 'set', 'U', 'ri', 'Pattern', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', '"', '/', 're', 'pos', '/', '[', 'Rep', 'o', 'Names', 'pace', ']', '/', '[', 'Rep', 'o', 'Name', ']"', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Method', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Method', 'Type', '.', 'POST', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Ph', 'on', 'etic', 'Filter', 'Factory', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'Map', 'AST#type_arguments#Left', '<', 'String', ',', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'args', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'args', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'in', 'ject', '=', 'AST#method_invocation#Left', 'get', 'Boo', 'lean', 'AST#argument_list#Left', '(', 'args', ',', 'IN', 'JECT', ',', 'true', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'name', '=', 'AST#method_invocation#Left', 'require', 'AST#argument_list#Left', '(', 'args', ',', 'ENC', 'OD', 'ER', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 'v', '=', 'AST#method_invocation#Left', 'get', 'AST#argument_list#Left', '(', 'args', ',', 'MAX', '_', 'C', 'ODE', '_', 'L', 'ENGTH', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'v', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'max', 'Code', 'Length', '=', 'AST#method_invocation#Left', 'Integer', '.', 'value', 'Of', 'AST#argument_list#Left', '(', 'v', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'max', 'Code', 'Length', '=', 'null', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'args', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'Unknown', 'Ġparameters', ':', 'Ġ"', '+', 'args', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'F', 'etch', 'Command', 'f', 'etch', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'F', 'etch', 'Command', 'AST#argument_list#Left', '(', 're', 'po', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Query', 'Ph', 'rase', 'Map', 'search', 'Ph', 'rase', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'field', 'Name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'final', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'Term', 'Info', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'phrase', 'Cand', 'idate', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Query', 'Ph', 'rase', 'Map', 'AST#variable_declarator#Left', 'root', '=', 'AST#method_invocation#Left', 'get', 'Root', 'Map', 'AST#argument_list#Left', '(', 'field', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'root', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'null', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'root', '.', 'search', 'Ph', 'rase', 'AST#argument_list#Left', '(', 'phrase', 'Cand', 'idate', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'AST#marker_annotation#Left', '@', 'Override', 'AST#marker_annotation#Right', 'public', 'AST#modifiers#Right', 'AST#generic_type#Left', 'Iterator', 'AST#type_arguments#Left', '<', 'AST#generic_type#Left', 'AST#scoped_type_identifier#Left', 'Mult', 'is', 'et', '.', 'Entry', 'AST#scoped_type_identifier#Right', 'AST#type_arguments#Left', '<', 'K', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'iterator', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Mult', 'is', 'et', 'Entry', 'Iterator', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'D', 'BS', 'n', 'ap', 'shot', 'delete', 'D', 'BS', 'n', 'ap', 'shot', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'D', 'BS', 'n', 'ap', 'shot', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'D', 'BS', 'n', 'ap', 'shot', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Output', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'output', '=', 'true', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Byte', 'Buffer', 'comp', 'act', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Read', 'Only', 'Buffer', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'X', 'ml', 'Pull', 'Parser', 'new', 'Pull', 'Parser', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'X', 'ml', 'Pull', 'Parser', 'Exception', '{', 'AST#ERROR#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'parser', 'Class', 'es', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'X', 'ml', 'Pull', 'Parser', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'Factory', 'Ġinitialization', 'Ġwas', 'Ġincomplete', 'Ġ-', 'Ġhas', 'Ġnot', 'Ġtried', 'Ġ"', '+', 'class', 'Names', 'Location', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'parser', 'Class', 'es', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'X', 'ml', 'Pull', 'Parser', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'No', 'Ġvalid', 'Ġparser', 'Ġclasses', 'Ġfound', 'Ġin', 'Ġ"', '+', 'class', 'Names', 'Location', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'final', 'String', 'Builder', 'AST#variable_declarator#Left', 'issues', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#method_invocation#Left', 'parser', 'Class', 'es', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'Class', 'AST#variable_declarator#Left', 'pp', 'Class', '=', 'AST#cast_expression#Left', '(', 'Class', ')', 'AST#method_invocation#Left', 'parser', 'Class', 'es', '.', 'get', 'AST#argument_list#Left', '(', 'i', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'X', 'ml', 'Pull', 'Parser', 'AST#variable_declarator#Left', 'pp', '=', 'AST#cast_expression#Left', '(', 'X', 'ml', 'Pull', 'Parser', ')', 'AST#method_invocation#Left', 'pp', 'Class', '.', 'new', 'Instance', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'Iterator', 'AST#variable_declarator#Left', 'iter', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'features', '.', 'key', 'Set', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'iterator', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#method_invocation#Left', 'iter', '.', 'has', 'Next', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'String', 'AST#variable_declarator#Left', 'key', '=', 'AST#cast_expression#Left', '(', 'String', ')', 'AST#method_invocation#Left', 'iter', '.', 'next', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'Boo', 'lean', 'AST#variable_declarator#Left', 'value', '=', 'AST#cast_expression#Left', '(', 'Boo', 'lean', ')', 'AST#method_invocation#Left', 'features', '.', 'get', 'AST#argument_list#Left', '(', 'key', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'value', '!', '=', 'null', 'AST#binary_expression#Right', '&&', 'AST#method_invocation#Left', 'value', '.', 'bo', 'olean', 'Value', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'pp', '.', 'set', 'Feature', 'AST#argument_list#Left', '(', 'key', ',', 'true', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 'pp', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'Exception', 'ex', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'issues', '.', 'append', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'pp', 'Class', '.', 'get', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '+', '":', 'Ġ"', 'AST#binary_expression#Right', '+', 'AST#method_invocation#Left', 'ex', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '";', 'Ġ"', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'X', 'ml', 'Pull', 'Parser', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'could', 'Ġnot', 'Ġcreate', 'Ġparser', ':', 'Ġ"', '+', 'issues', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Analysis', 'Sche', 'me', 'Result', 'delete', 'Analysis', 'Sche', 'me', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Analysis', 'Sche', 'me', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Analysis', 'Sche', 'me', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Ex', 'cel', 'Ext', 'ractor', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'H', 'SS', 'F', 'Work', 'book', 'wb', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'wb', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'wb', '=', 'wb', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'form', 'atter', '=', 'AST#object_creation_expression#Left', 'new', 'H', 'SS', 'F', 'Data', 'Form', 'atter', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Int', 'Buffer', 'put', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'c', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'check', 'Index', 'AST#argument_list#Left', '(', 'index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'byte', 'Buffer', '.', 'put', 'Int', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'index', '*', 'AST#field_access#Left', 'Size', 'Of', '.', 'INT', 'AST#field_access#Right', 'AST#binary_expression#Right', ',', 'c', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'byte', 'get', 'Parameter', 'Class', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'index', '>', '=', 'AST#field_access#Left', 'param', 'Class', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#array_access#Left', 'param', 'Class', '[', 'AST#binary_expression#Left', 'AST#field_access#Left', 'param', 'Class', '.', 'length', 'AST#field_access#Right', '-', '1', 'AST#binary_expression#Right', ']', 'AST#array_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#array_access#Left', 'param', 'Class', '[', 'index', ']', 'AST#array_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'End', 'points', 'Result', 'list', 'End', 'points', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'End', 'points', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'End', 'points', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'Ch', 'ars', 'Ref', 'join', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'String', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'words', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Ch', 'ars', 'Ref', 'Builder', 're', 'use', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'upt', 'o', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'buffer', '=', 'AST#method_invocation#Left', 're', 'use', '.', 'ch', 'ars', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'String', 'word', ':', 'words', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'word', 'Len', '=', 'AST#method_invocation#Left', 'word', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'needed', '=', 'AST#parenthesized_expression#Left', '(', 'AST#ternary_expression#Left', 'AST#binary_expression#Left', '0', '==', 'upt', 'o', 'AST#binary_expression#Right', '?', 'word', 'Len', ':', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '1', '+', 'upt', 'o', 'AST#binary_expression#Right', '+', 'word', 'Len', 'AST#binary_expression#Right', 'AST#ternary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'needed', '>', 'AST#field_access#Left', 'buffer', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 're', 'use', '.', 'grow', 'AST#argument_list#Left', '(', 'needed', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'buffer', '=', 'AST#method_invocation#Left', 're', 'use', '.', 'ch', 'ars', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'upt', 'o', '>', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'buffer', '[', 'AST#update_expression#Left', 'upt', 'o', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#field_access#Left', 'Syn', 'onym', 'Map', '.', 'W', 'ORD', '_', 'SE', 'PAR', 'ATOR', 'AST#field_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'word', '.', 'get', 'Ch', 'ars', 'AST#argument_list#Left', '(', '0', ',', 'word', 'Len', ',', 'buffer', ',', 'upt', 'o', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'upt', 'o', '+=', 'word', 'Len', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 're', 'use', '.', 'set', 'Length', 'AST#argument_list#Left', '(', 'upt', 'o', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 're', 'use', '.', 'get', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'Buffer', 'insert', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'float', 'f', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'insert', 'AST#argument_list#Left', '(', 'index', ',', 'AST#method_invocation#Left', 'Float', '.', 'to', 'String', 'AST#argument_list#Left', '(', 'f', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Short', 'Buffer', 'put', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'short', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'src', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'src', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'short', 'Count', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'short', 'Count', '>', 'AST#method_invocation#Left', 'rem', 'aining', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Buffer', 'Over', 'flow', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'System', '.', 'array', 'copy', 'AST#argument_list#Left', '(', 'src', ',', 'src', 'Offset', ',', 'back', 'ing', 'Array', ',', 'AST#binary_expression#Left', 'offset', '+', 'position', 'AST#binary_expression#Right', ',', 'short', 'Count', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'position', '+=', 'short', 'Count', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Dis', 'ass', 'ociate', 'Res', 'olver', 'End', 'point', 'I', 'p', 'Address', 'Result', 'dis', 'ass', 'ociate', 'Res', 'olver', 'End', 'point', 'I', 'p', 'Address', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Dis', 'ass', 'ociate', 'Res', 'olver', 'End', 'point', 'I', 'p', 'Address', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Dis', 'ass', 'ociate', 'Res', 'olver', 'End', 'point', 'I', 'p', 'Address', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Accept', 'Direct', 'Connect', 'Gate', 'way', 'Ass', 'ociation', 'Prop', 'osal', 'Result', 'accept', 'Direct', 'Connect', 'Gate', 'way', 'Ass', 'ociation', 'Prop', 'osal', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Accept', 'Direct', 'Connect', 'Gate', 'way', 'Ass', 'ociation', 'Prop', 'osal', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Accept', 'Direct', 'Connect', 'Gate', 'way', 'Ass', 'ociation', 'Prop', 'osal', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Stop', 'Stack', 'Set', 'Operation', 'Result', 'stop', 'Stack', 'Set', 'Operation', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Stop', 'Stack', 'Set', 'Operation', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Stop', 'Stack', 'Set', 'Operation', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Cache', 'Sub', 'net', 'Group', 'create', 'Cache', 'Sub', 'net', 'Group', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Cache', 'Sub', 'net', 'Group', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Cache', 'Sub', 'net', 'Group', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'C', 'ached', 'Ord', 's', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Ord', 'inals', 'Seg', 'ment', 'Reader', 'source', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'max', 'Doc', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'offs', 'ets', '=', 'AST#array_creation_expression#Left', 'new', 'int', 'AST#dimensions_expr#Left', '[', 'AST#binary_expression#Left', 'max', 'Doc', '+', '1', 'AST#binary_expression#Right', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'int', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'ords', '=', 'AST#array_creation_expression#Left', 'new', 'int', 'AST#dimensions_expr#Left', '[', 'max', 'Doc', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'long', 'AST#variable_declarator#Left', 't', 'ot', 'Ord', 's', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'Int', 's', 'Ref', 'AST#variable_declarator#Left', 'values', '=', 'AST#object_creation_expression#Left', 'new', 'Int', 's', 'Ref', 'AST#argument_list#Left', '(', '32', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'doc', 'ID', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'doc', 'ID', '<', 'max', 'Doc', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'doc', 'ID', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'offs', 'ets', '[', 'doc', 'ID', ']', 'AST#array_access#Right', '=', 'AST#cast_expression#Left', '(', 'int', ')', 't', 'ot', 'Ord', 's', 'AST#cast_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'source', '.', 'get', 'AST#argument_list#Left', '(', 'doc', 'ID', ',', 'values', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'long', 'AST#variable_declarator#Left', 'next', 'Length', '=', 'AST#binary_expression#Left', 't', 'ot', 'Ord', 's', '+', 'AST#field_access#Left', 'values', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'next', 'Length', '>', 'AST#field_access#Left', 'ords', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'next', 'Length', '>', 'AST#field_access#Left', 'Array', 'Ut', 'il', '.', 'MAX', '_', 'AR', 'RAY', '_', 'L', 'ENGTH', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'State', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'too', 'Ġmany', 'Ġord', 'inals', 'Ġ(>', '=', 'Ġ"', '+', 'next', 'Length', 'AST#binary_expression#Right', '+', '")', 'Ġto', 'Ġcache', '"', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ords', '=', 'AST#method_invocation#Left', 'Array', 'Ut', 'il', '.', 'grow', 'AST#argument_list#Left', '(', 'ords', ',', 'AST#cast_expression#Left', '(', 'int', ')', 'next', 'Length', 'AST#cast_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'System', '.', 'array', 'copy', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'values', '.', 'ints', 'AST#field_access#Right', ',', '0', ',', 'ords', ',', 'AST#cast_expression#Left', '(', 'int', ')', 't', 'ot', 'Ord', 's', 'AST#cast_expression#Right', ',', 'AST#field_access#Left', 'values', '.', 'length', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 't', 'ot', 'Ord', 's', '=', 'next', 'Length', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'offs', 'ets', '[', 'max', 'Doc', ']', 'AST#array_access#Right', '=', 'AST#cast_expression#Left', '(', 'int', ')', 't', 'ot', 'Ord', 's', 'AST#cast_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#cast_expression#Left', '(', 'double', ')', 't', 'ot', 'Ord', 's', 'AST#cast_expression#Right', '/', 'AST#field_access#Left', 'ords', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', '<', '0', '.', '9', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'ord', 'inals', 'AST#field_access#Right', '=', 'AST#array_creation_expression#Left', 'new', 'int', 'AST#dimensions_expr#Left', '[', 'AST#cast_expression#Left', '(', 'int', ')', 't', 'ot', 'Ord', 's', 'AST#cast_expression#Right', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'System', '.', 'array', 'copy', 'AST#argument_list#Left', '(', 'ords', ',', '0', ',', 'AST#field_access#Left', 'this', '.', 'ord', 'inals', 'AST#field_access#Right', ',', '0', ',', 'AST#cast_expression#Left', '(', 'int', ')', 't', 'ot', 'Ord', 's', 'AST#cast_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'ord', 'inals', 'AST#field_access#Right', '=', 'ords', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'get', 'Raw', 'User', 'Info', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'user', 'Info', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'AST#marker_annotation#Left', '@', 'Override', 'AST#marker_annotation#Right', 'public', 'AST#modifiers#Right', 'AST#array_type#Left', 'Object', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'to', 'Array', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Object', 'Ar', 'rays', '.', 'to', 'Array', 'Impl', 'AST#argument_list#Left', '(', 'this', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Comp', 'ilation', 'Job', 'Result', 'desc', 'ribe', 'Comp', 'ilation', 'Job', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Comp', 'ilation', 'Job', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Comp', 'ilation', 'Job', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'get', 'Query', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'dec', 'ode', 'AST#argument_list#Left', '(', 'query', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Environment', 'Result', 'create', 'Environment', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Environment', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Environment', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Par', 'se', 'Tree', 'Match', 'match', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Par', 'se', 'Tree', 'tree', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'mat', 'cher', '.', 'match', 'AST#argument_list#Left', '(', 'tree', ',', 'this', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'cont', 'ains', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Char', 'Sequ', 'ence', 'cs', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'map', '.', 'cont', 'ains', 'Key', 'AST#argument_list#Left', '(', 'cs', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Query', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'table', 'Name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Table', 'Name', 'AST#argument_list#Left', '(', 'table', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'is', 'Row', 'Group', 'Hidden', 'By', 'Parent', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'row', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'end', 'Level', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'bo', 'olean', 'end', 'Hidden', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'end', 'Of', 'Out', 'line', 'Group', 'Id', 'x', '=', 'AST#method_invocation#Left', 'find', 'End', 'Of', 'Row', 'Out', 'line', 'Group', 'AST#argument_list#Left', '(', 'row', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'get', 'Row', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'end', 'Of', 'Out', 'line', 'Group', 'Id', 'x', '+', '1', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'end', 'Level', '=', '0', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'end', 'Hidden', '=', 'false', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'end', 'Level', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Row', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'end', 'Of', 'Out', 'line', 'Group', 'Id', 'x', '+', '1', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Out', 'line', 'Level', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'end', 'Hidden', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Row', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'end', 'Of', 'Out', 'line', 'Group', 'Id', 'x', '+', '1', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Zero', 'Height', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'start', 'Level', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'bo', 'olean', 'start', 'Hidden', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'start', 'Of', 'Out', 'line', 'Group', 'Id', 'x', '=', 'AST#method_invocation#Left', 'find', 'Start', 'Of', 'Row', 'Out', 'line', 'Group', 'AST#argument_list#Left', '(', 'row', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'start', 'Of', 'Out', 'line', 'Group', 'Id', 'x', '-', '1', 'AST#binary_expression#Right', '<', '0', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'get', 'Row', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'start', 'Of', 'Out', 'line', 'Group', 'Id', 'x', '-', '1', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', 'null', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'start', 'Level', '=', '0', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'start', 'Hidden', '=', 'false', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'start', 'Level', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Row', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'start', 'Of', 'Out', 'line', 'Group', 'Id', 'x', '-', '1', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Out', 'line', 'Level', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'start', 'Hidden', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Row', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'start', 'Of', 'Out', 'line', 'Group', 'Id', 'x', '-', '1', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Zero', 'Height', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'end', 'Level', '>', 'start', 'Level', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'end', 'Hidden', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'start', 'Hidden', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'ret', 'ry', 'F', 'ailed', 'Lock', 'File', 'Comm', 'it', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Val', 'idate', 'Match', 'making', 'Rule', 'Set', 'Result', 'valid', 'ate', 'Match', 'making', 'Rule', 'Set', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Val', 'idate', 'Match', 'making', 'Rule', 'Set', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Val', 'idate', 'Match', 'making', 'Rule', 'Set', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'get', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'bo', 'olean', 'df', 'lt', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'bo', 'olean', 'AST#variable_declarator#Left', 'vals', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', '=', 'AST#cast_expression#Left', '(', 'AST#array_type#Left', 'bo', 'olean', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', ')', 'AST#method_invocation#Left', 'val', 'By', 'Round', '.', 'get', 'AST#argument_list#Left', '(', 'name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'vals', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#array_access#Left', 'vals', '[', 'AST#binary_expression#Left', 'round', 'Number', '%', 'AST#field_access#Left', 'vals', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ']', 'AST#array_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 's', 'val', '=', 'AST#method_invocation#Left', 'pro', 'ps', '.', 'get', 'Property', 'AST#argument_list#Left', '(', 'name', ',', 'AST#binary_expression#Left', '""', '+', 'df', 'lt', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 's', 'val', '.', 'index', 'Of', 'AST#argument_list#Left', '(', '":"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '<', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'Boo', 'lean', '.', 'value', 'Of', 'AST#argument_list#Left', '(', 's', 'val', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'bo', 'olean', 'Value', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'k', '=', 'AST#method_invocation#Left', 's', 'val', '.', 'index', 'Of', 'AST#argument_list#Left', '(', '":"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 'col', 'Name', '=', 'AST#method_invocation#Left', 's', 'val', '.', 'sub', 'string', 'AST#argument_list#Left', '(', '0', ',', 'k', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 's', 'val', '=', 'AST#method_invocation#Left', 's', 'val', '.', 'sub', 'string', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'k', '+', '1', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'col', 'For', 'Val', 'By', 'Round', '.', 'put', 'AST#argument_list#Left', '(', 'name', ',', 'col', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'vals', '=', 'AST#method_invocation#Left', 'prop', 'To', 'Boo', 'lean', 'Array', 'AST#argument_list#Left', '(', 's', 'val', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'val', 'By', 'Round', '.', 'put', 'AST#argument_list#Left', '(', 'name', ',', 'vals', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#array_access#Left', 'vals', '[', 'AST#binary_expression#Left', 'round', 'Number', '%', 'AST#field_access#Left', 'vals', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ']', 'AST#array_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Link', 'Attributes', 'Result', 'update', 'Link', 'Attributes', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Link', 'Attributes', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Link', 'Attributes', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'N', 'umeric', 'Pay', 'load', 'Token', 'Filter', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Token', 'Stream', 'input', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'float', 'pay', 'load', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'type', 'Match', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'input', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'type', 'Match', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', '"', 'type', 'Match', 'Ġmust', 'Ġnot', 'Ġbe', 'Ġnull', '"', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'the', 'Pay', 'load', '=', 'AST#object_creation_expression#Left', 'new', 'Bytes', 'Ref', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Pay', 'load', 'Helper', '.', 'en', 'code', 'Float', 'AST#argument_list#Left', '(', 'pay', 'load', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'type', 'Match', 'AST#field_access#Right', '=', 'type', 'Match', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'buffer', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"[', 'C', 'AL', 'CC', 'OUNT', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'iter', 'ations', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Integer', '.', 'to', 'H', 'ex', 'String', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Iter', 'ations', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', '[/', 'C', 'AL', 'CC', 'OUNT', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'buffer', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'E', 'push', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'E', 'object', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'add', 'Element', 'AST#argument_list#Left', '(', 'object', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'object', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Link', 'ed', 'Hash', 'Map', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'initial', 'Cap', 'acity', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'float', 'load', 'Factor', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'bo', 'olean', 'access', 'Order', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#ERROR#Left', 'super', 'AST#inferred_parameters#Left', '(', 'initial', 'Cap', 'acity', ',', 'load', 'Factor', ')', 'AST#inferred_parameters#Right', 'AST#ERROR#Right', ';', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'init', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'access', 'Order', 'AST#field_access#Right', '=', 'access', 'Order', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Tree', 'Set', 'AST#ERROR#Left', '(', ')', '{', 'AST#ERROR#Right', 'AST#variable_declarator#Left', 'back', 'ing', 'Map', '=', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Tree', 'Map', 'AST#type_arguments#Left', '<', 'E', ',', 'Object', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'long', 'skip', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'long', 'char', 'Count', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'char', 'Count', '<', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'char', 'Count', 'Ġ<', 'Ġ0', ':', 'Ġ"', '+', 'char', 'Count', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#synchronized_statement#Left', 'syn', 'chron', 'ized', 'AST#parenthesized_expression#Left', '(', 'lock', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'long', 'AST#variable_declarator#Left', 'sk', 'ipped', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'to', 'Read', '=', 'AST#ternary_expression#Left', 'AST#binary_expression#Left', 'char', 'Count', '<', '512', 'AST#binary_expression#Right', '?', 'AST#cast_expression#Left', '(', 'int', ')', 'char', 'Count', 'AST#cast_expression#Right', ':', '512', 'AST#ternary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'ch', 'ars', 'Sk', 'ipped', '=', 'AST#array_creation_expression#Left', 'new', 'char', 'AST#dimensions_expr#Left', '[', 'to', 'Read', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#while_statement#Left', 'while', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'sk', 'ipped', '<', 'char', 'Count', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'read', '=', 'AST#method_invocation#Left', 'read', 'AST#argument_list#Left', '(', 'ch', 'ars', 'Sk', 'ipped', ',', '0', ',', 'to', 'Read', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'read', '==', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'sk', 'ipped', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'sk', 'ipped', '+=', 'read', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'read', '<', 'to', 'Read', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'sk', 'ipped', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'char', 'Count', '-', 'sk', 'ipped', 'AST#binary_expression#Right', '<', 'to', 'Read', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'to', 'Read', '=', 'AST#cast_expression#Left', '(', 'int', ')', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'char', 'Count', '-', 'sk', 'ipped', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#cast_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#while_statement#Right', 'AST#return_statement#Left', 'return', 'sk', 'ipped', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#synchronized_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Value', 'E', 'val', 'get', 'Ref', '3', 'DE', 'val', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Ref', '3', 'DP', 'x', 'g', 'r', 'pt', 'g', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'She', 'et', 'Range', 'E', 'val', 'u', 'ator', 'AST#variable_declarator#Left', 's', 're', '=', 'AST#method_invocation#Left', 'create', 'Ex', 'tern', 'She', 'et', 'Ref', 'E', 'val', 'u', 'ator', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'r', 'pt', 'g', '.', 'get', 'She', 'et', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#method_invocation#Left', 'r', 'pt', 'g', '.', 'get', 'Last', 'She', 'et', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#method_invocation#Left', 'r', 'pt', 'g', '.', 'get', 'External', 'Work', 'book', 'Number', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'L', 'azy', 'Ref', 'E', 'val', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'r', 'pt', 'g', '.', 'get', 'Row', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#method_invocation#Left', 'r', 'pt', 'g', '.', 'get', 'Column', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 's', 're', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'New', 'Analy', 'zer', 'Task', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Per', 'f', 'Run', 'Data', 'run', 'Data', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'run', 'Data', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'analy', 'zer', 'Names', '=', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Array', 'List', 'AST#type_arguments#Left', '<', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'equ', 'als', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'o', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#instanceof_expression#Left', 'o', 'instance', 'of', 'English', 'St', 'em', 'mer', 'AST#instanceof_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'dec', 'ode', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'long', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'blocks', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'blocks', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'long', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'values', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'values', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'iter', 'ations', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'iter', 'ations', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', '++', 'i', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'long', 'AST#variable_declarator#Left', 'block', '=', 'AST#array_access#Left', 'blocks', '[', 'AST#update_expression#Left', 'blocks', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'values', 'Offset', '=', 'AST#method_invocation#Left', 'dec', 'ode', 'AST#argument_list#Left', '(', 'block', ',', 'values', ',', 'values', 'Offset', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'void', 'inc', 'Ref', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'ens', 'ure', 'Open', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'ref', 'Count', '.', 'incre', 'ment', 'And', 'Get', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Repl', 'ication', 'Group', 'test', 'Fail', 'over', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Test', 'Fail', 'over', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Test', 'Fail', 'over', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Ref', 'Writer', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'Collection', 'AST#type_arguments#Left', '<', 'Ref', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'ref', 's', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'ref', 's', 'AST#field_access#Right', '=', 'AST#method_invocation#Left', 'Ref', 'Compar', 'ator', '.', 'sort', 'AST#argument_list#Left', '(', 'ref', 's', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Byte', 'Vector', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'capacity', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'capacity', '>', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'block', 'Size', '=', 'capacity', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'block', 'Size', '=', 'DE', 'FAULT', '_', 'BL', 'OCK', '_', 'SIZE', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'array', '=', 'AST#array_creation_expression#Left', 'new', 'byte', 'AST#dimensions_expr#Left', '[', 'block', 'Size', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'n', '=', '0', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'end', 'Work', 'er', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'workers', '.', 'dec', 're', 'ment', 'And', 'Get', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'process', '.', 'release', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Volume', 'Status', 'Result', 'desc', 'ribe', 'Volume', 'Status', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Volume', 'Status', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Volume', 'Status', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Int', 'M', 'apper', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'final', 'int', 'initial', 'Cap', 'acity', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'e', 'lements', '=', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Array', 'List', 'AST#type_arguments#Left', '<', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', 'initial', 'Cap', 'acity', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'value', 'Key', 'Map', '=', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Hash', 'Map', 'AST#type_arguments#Left', '<', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', 'initial', 'Cap', 'acity', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'serial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Output', 'out', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'field', '_', '1', '_', 'border', 'Type', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'field', '_', '2', '_', 'options', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'syn', 'chron', 'ized', 'AST#modifiers#Right', 'void', 'copy', 'Int', 'o', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'Object', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'e', 'lements', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'System', '.', 'array', 'copy', 'AST#argument_list#Left', '(', 'element', 'Data', ',', '0', ',', 'e', 'lements', ',', '0', ',', 'element', 'Count', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Value', 'E', 'val', 'evaluate', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'src', 'Row', 'Index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'src', 'Column', 'Index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Value', 'E', 'val', 'arg', '0', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Value', 'E', 'val', 'arg', '1', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'double', 's', '0', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'String', 's', '1', ';', 'AST#local_variable_declaration#Right', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 's', '0', '=', 'AST#method_invocation#Left', 'evaluate', 'Double', 'Arg', 'AST#argument_list#Left', '(', 'arg', '0', ',', 'src', 'Row', 'Index', ',', 'src', 'Column', 'Index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 's', '1', '=', 'AST#method_invocation#Left', 'evaluate', 'String', 'Arg', 'AST#argument_list#Left', '(', 'arg', '1', ',', 'src', 'Row', 'Index', ',', 'src', 'Column', 'Index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'E', 'val', 'uation', 'Exception', 'e', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'e', '.', 'get', 'Error', 'E', 'val', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 'form', 'atted', 'Str', '=', 'AST#method_invocation#Left', 'form', 'atter', '.', 'format', 'Raw', 'Cell', 'Contents', 'AST#argument_list#Left', '(', 's', '0', ',', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', ',', 's', '1', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'String', 'E', 'val', 'AST#argument_list#Left', '(', 'form', 'atted', 'Str', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'Exception', 'e', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Error', 'E', 'val', '.', 'VALUE', '_', 'IN', 'VAL', 'ID', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Custom', 'View', 'Settings', 'Record', 'Agg', 'regate', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Stream', 'rs', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'begin', '=', 'AST#method_invocation#Left', 'rs', '.', 'get', 'Next', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', '_', 'begin', '.', 'get', 'S', 'id', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', 'AST#field_access#Left', 'User', 'S', 'View', 'Begin', '.', 'sid', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'State', 'Exception', 'AST#argument_list#Left', '(', '"', 'Bad', 'Ġbegin', 'Ġrecord', '"', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'Record', 'Base', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'temp', '=', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Array', 'List', 'AST#type_arguments#Left', '<', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#while_statement#Left', 'while', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'rs', '.', 'pe', 'ek', 'Next', 'S', 'id', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', 'AST#field_access#Left', 'User', 'S', 'View', 'End', '.', 'sid', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'Page', 'Settings', 'Block', '.', 'is', 'Component', 'Record', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'rs', '.', 'pe', 'ek', 'Next', 'S', 'id', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', '_', 'ps', 'Block', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'rs', '.', 'pe', 'ek', 'Next', 'S', 'id', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', 'AST#field_access#Left', 'Header', 'Foot', 'er', 'Record', '.', 'sid', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', '_', 'ps', 'Block', '.', 'add', 'Late', 'Header', 'Foot', 'er', 'AST#argument_list#Left', '(', 'AST#cast_expression#Left', '(', 'Header', 'Foot', 'er', 'Record', ')', 'AST#method_invocation#Left', 'rs', '.', 'get', 'Next', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#continue_statement#Left', 'continue', ';', 'AST#continue_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'State', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'Found', 'Ġmore', 'Ġthan', 'Ġone', 'ĠPage', 'Settings', 'Block', 'Ġin', 'Ġchart', 'Ġsub', '-', 'stream', ',', 'Ġhad', 'Ġsid', ':', 'Ġ"', '+', 'AST#method_invocation#Left', 'rs', '.', 'pe', 'ek', 'Next', 'S', 'id', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'ps', 'Block', '=', 'AST#object_creation_expression#Left', 'new', 'Page', 'Settings', 'Block', 'AST#argument_list#Left', '(', 'rs', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'temp', '.', 'add', 'AST#argument_list#Left', '(', '_', 'ps', 'Block', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#continue_statement#Left', 'continue', ';', 'AST#continue_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'temp', '.', 'add', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'rs', '.', 'get', 'Next', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#while_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 're', 'cs', '=', 'temp', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'end', '=', 'AST#method_invocation#Left', 'rs', '.', 'get', 'Next', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', '_', 'end', '.', 'get', 'S', 'id', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', 'AST#field_access#Left', 'User', 'S', 'View', 'End', '.', 'sid', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'State', 'Exception', 'AST#argument_list#Left', '(', '"', 'Bad', 'Ġcustom', 'Ġview', 'Ġsettings', 'Ġend', 'Ġrecord', '"', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Sign', 'aling', 'Channel', 'Result', 'delete', 'Sign', 'aling', 'Channel', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Sign', 'aling', 'Channel', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Sign', 'aling', 'Channel', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'AST#marker_annotation#Left', '@', 'Override', 'AST#marker_annotation#Right', 'public', 'AST#modifiers#Right', 'bo', 'olean', 'remove', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'o', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'cont', 'ains', 'AST#argument_list#Left', '(', 'o', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'Entry', 'AST#type_arguments#Left', '<', '?', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'entry', '=', 'AST#cast_expression#Left', '(', 'AST#generic_type#Left', 'Entry', 'AST#type_arguments#Left', '<', '?', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', ')', 'o', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'At', 'omic', 'Integer', 'AST#variable_declarator#Left', 'frequency', '=', 'AST#method_invocation#Left', 'back', 'ing', 'Map', '.', 'remove', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'entry', '.', 'get', 'Element', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'number', 'Removed', '=', 'AST#method_invocation#Left', 'frequency', '.', 'get', 'And', 'Set', 'AST#argument_list#Left', '(', '0', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'size', '-', '=', 'number', 'Removed', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Snap', 'shot', 'De', 'let', 'ion', 'Policy', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Index', 'De', 'let', 'ion', 'Policy', 'primary', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'primary', 'AST#field_access#Right', '=', 'primary', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'throw', 'Exception', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'AST#ERROR#Right', 'AST#local_variable_declaration#Left', 'Buffer', 'Under', 'flow', 'Exception', ',', 'Buffer', 'Over', 'flow', 'Exception', ',', 'Un', 'm', 'app', 'able', 'Character', 'Exception', ',', 'Mal', 'formed', 'Input', 'Exception', ',', 'Character', 'C', 'oding', 'Exception', 'AST#local_variable_declaration#Right', 'AST#block#Left', '{', 'AST#switch_expression#Left', 'switch', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'this', '.', 'type', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', 'AST#switch_block#Left', '{', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'TYPE', '_', 'UN', 'DER', 'FL', 'OW', 'AST#switch_label#Right', ':', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Buffer', 'Under', 'flow', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'TYPE', '_', 'OVER', 'FL', 'OW', 'AST#switch_label#Right', ':', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Buffer', 'Over', 'flow', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'TYPE', '_', 'UN', 'MAP', 'PA', 'BLE', '_', 'CHAR', 'AST#switch_label#Right', ':', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Un', 'm', 'app', 'able', 'Character', 'Exception', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'this', '.', 'length', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'TYPE', '_', 'MAL', 'FORM', 'ED', '_', 'IN', 'PUT', 'AST#switch_label#Right', ':', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Mal', 'formed', 'Input', 'Exception', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'this', '.', 'length', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'default', ':', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Character', 'C', 'oding', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#switch_block_statement_group#Right', '}', 'AST#switch_block#Right', 'AST#switch_expression#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'String', 'P', 'tg', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Input', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'n', 'Ch', 'ars', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'U', 'Byte', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'is', '16', 'bit', 'Un', 'ic', 'ode', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'in', '.', 'read', 'Byte', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '&', '0', 'x', '01', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '!', '=', '0', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', '_', 'is', '16', 'bit', 'Un', 'ic', 'ode', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '3', '_', 'string', '=', 'AST#method_invocation#Left', 'String', 'Ut', 'il', '.', 'read', 'Un', 'ic', 'ode', 'LE', 'AST#argument_list#Left', '(', 'in', ',', 'n', 'Ch', 'ars', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '3', '_', 'string', '=', 'AST#method_invocation#Left', 'String', 'Ut', 'il', '.', 'read', 'Comp', 'ressed', 'Un', 'ic', 'ode', 'AST#argument_list#Left', '(', 'in', ',', 'n', 'Ch', 'ars', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Public', 'Access', 'Ur', 'ls', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'Cloud', 'Photo', '"', ',', '"', '2017', '-', '07', '-', '11', '"', ',', '"', 'Get', 'Public', 'Access', 'Ur', 'ls', '"', ',', '"', 'cloud', 'photo', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Prot', 'ocol', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Prot', 'ocol', 'Type', '.', 'HT', 'TPS', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Clean', 'Command', 'clean', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Clean', 'Command', 'AST#argument_list#Left', '(', 're', 'po', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#generic_type#Left', 'Collection', 'AST#type_arguments#Left', '<', 'Pack', 'File', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'get', 'P', 'acks', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Pack', 'List', 'AST#variable_declarator#Left', 'list', '=', 'AST#method_invocation#Left', 'pack', 'List', '.', 'get', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'list', '==', 'NO', '_', 'P', 'ACK', 'S', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'list', '=', 'AST#method_invocation#Left', 'scan', 'P', 'acks', 'AST#argument_list#Left', '(', 'list', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'Pack', 'File', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'packs', '=', 'AST#field_access#Left', 'list', '.', 'packs', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Col', 'lections', '.', 'un', 'mod', 'ifiable', 'Collection', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Ar', 'rays', '.', 'as', 'List', 'AST#argument_list#Left', '(', 'packs', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Stack', 'Dr', 'ift', 'Det', 'ection', 'Status', 'Result', 'desc', 'ribe', 'Stack', 'Dr', 'ift', 'Det', 'ection', 'Status', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Stack', 'Dr', 'ift', 'Det', 'ection', 'Status', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Stack', 'Dr', 'ift', 'Det', 'ection', 'Status', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Cloud', 'Front', 'Origin', 'Access', 'Ident', 'ities', 'Result', 'list', 'Cloud', 'Front', 'Origin', 'Access', 'Ident', 'ities', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Cloud', 'Front', 'Origin', 'Access', 'Ident', 'ities', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Cloud', 'Front', 'Origin', 'Access', 'Ident', 'ities', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'S', 'sh', 'Session', 'Factory', 'get', 'Instance', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'INST', 'ANCE', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Con', 'ference', 'Prov', 'iders', 'Result', 'list', 'Con', 'ference', 'Prov', 'iders', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Con', 'ference', 'Prov', 'iders', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Con', 'ference', 'Prov', 'iders', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Re', 'ce', 'ipt', 'Rule', 'Result', 'update', 'Re', 'ce', 'ipt', 'Rule', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Re', 'ce', 'ipt', 'Rule', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Re', 'ce', 'ipt', 'Rule', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'String', 'Builder', 'AST#variable_declarator#Left', 'r', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', '"', '("', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#field_access#Left', 'sub', 'fil', 'ters', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'i', '>', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', '"', 'ĠOR', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'AST#array_access#Left', 'sub', 'fil', 'ters', '[', 'i', ']', 'AST#array_access#Right', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', '")', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'r', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'serial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Output', 'out', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'sid', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'length', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'flags', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Health', 'Check', 'Result', 'update', 'Health', 'Check', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Health', 'Check', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Health', 'Check', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'syn', 'chron', 'ized', 'AST#modifiers#Right', 'long', 'ram', 'Bytes', 'Used', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'long', 'AST#variable_declarator#Left', 'bytes', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'C', 'ached', 'Ord', 's', 'ords', ':', 'AST#method_invocation#Left', 'ords', 'Cache', '.', 'values', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'bytes', '+=', 'AST#method_invocation#Left', 'ords', '.', 'ram', 'Bytes', 'Used', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#return_statement#Left', 'return', 'bytes', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Work', 'force', 'Result', 'update', 'Work', 'force', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Work', 'force', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Work', 'force', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Object', 'Id', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Any', 'Object', 'Id', 'id', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'id', '.', 'copy', 'Raw', 'To', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'id', 'Buffer', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#method_invocation#Left', 'id', 'Offset', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'write', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'buffer', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'byte', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'byte', 'Count', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'I', 'o', 'Bridge', '.', 'write', 'AST#argument_list#Left', '(', 'fd', ',', 'buffer', ',', 'byte', 'Offset', ',', 'byte', 'Count', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'sync', 'Met', 'adata', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'fd', '.', 'sync', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Block', 'Result', 'get', 'Block', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Block', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Block', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'export', 'Directory', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'File', 'dir', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'export', 'Base', '.', 'add', 'AST#argument_list#Left', '(', 'dir', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Res', 'erved', 'Inst', 'ances', 'List', 'ing', 'Result', 'create', 'Res', 'erved', 'Inst', 'ances', 'List', 'ing', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Res', 'erved', 'Inst', 'ances', 'List', 'ing', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Res', 'erved', 'Inst', 'ances', 'List', 'ing', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Byte', 'Buffer', 'put', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'byte', 'b', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Read', 'Only', 'Buffer', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Value', 'E', 'val', 'evaluate', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'Value', 'E', 'val', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'args', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'src', 'Cell', 'Row', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'src', 'Cell', 'Col', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'double', 'result', ';', 'AST#local_variable_declaration#Right', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'Double', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'temp', '=', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Array', 'List', 'AST#type_arguments#Left', '<', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'Value', 'E', 'val', 'arg', ':', 'args', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'collect', 'Values', 'AST#argument_list#Left', '(', 'arg', ',', 'temp', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'double', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'values', '=', 'AST#array_creation_expression#Left', 'new', 'double', 'AST#dimensions_expr#Left', '[', 'AST#method_invocation#Left', 'temp', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#field_access#Left', 'values', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'i', ']', 'AST#array_access#Right', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'temp', '.', 'get', 'AST#argument_list#Left', '(', 'i', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'double', 'Value', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'result', '=', 'AST#method_invocation#Left', 'evaluate', 'AST#argument_list#Left', '(', 'values', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'E', 'val', 'uation', 'Exception', 'e', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'e', '.', 'get', 'Error', 'E', 'val', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Number', 'E', 'val', 'AST#argument_list#Left', '(', 'result', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Stop', 'J', 'umps', 'erver', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'H', 'PC', '"', ',', '"', '2016', '-', '06', '-', '03', '"', ',', '"', 'Stop', 'J', 'umps', 'erver', '"', ',', '"', 'h', 'pc', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Method', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Method', 'Type', '.', 'POST', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Directory', 'Config', 'Result', 'create', 'Directory', 'Config', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Directory', 'Config', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Directory', 'Config', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Export', 'T', 'asks', 'Result', 'desc', 'ribe', 'Export', 'T', 'asks', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'desc', 'ribe', 'Export', 'T', 'asks', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Desc', 'ribe', 'Export', 'T', 'asks', 'Request', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Export', 'Client', 'V', 'pn', 'Client', 'Cert', 'ificate', 'Rev', 'ocation', 'List', 'Result', 'export', 'Client', 'V', 'pn', 'Client', 'Cert', 'ificate', 'Rev', 'ocation', 'List', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Export', 'Client', 'V', 'pn', 'Client', 'Cert', 'ificate', 'Rev', 'ocation', 'List', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Export', 'Client', 'V', 'pn', 'Client', 'Cert', 'ificate', 'Rev', 'ocation', 'List', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Complete', 'Mult', 'ip', 'art', 'Upload', 'Result', 'complete', 'Mult', 'ip', 'art', 'Upload', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Complete', 'Mult', 'ip', 'art', 'Upload', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Complete', 'Mult', 'ip', 'art', 'Upload', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'long', 'ram', 'Bytes', 'Used', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'long', 'AST#variable_declarator#Left', 'size', 'In', 'Bytes', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'size', 'In', 'Bytes', '+=', 'AST#method_invocation#Left', 'Ram', 'Usage', 'Est', 'im', 'ator', '.', 'size', 'Of', 'AST#argument_list#Left', '(', 'min', 'Values', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'size', 'In', 'Bytes', '+=', 'AST#method_invocation#Left', 'Ram', 'Usage', 'Est', 'im', 'ator', '.', 'size', 'Of', 'AST#argument_list#Left', '(', 'aver', 'ages', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'AST#scoped_type_identifier#Left', 'P', 'acked', 'Int', 's', '.', 'Reader', 'AST#scoped_type_identifier#Right', 'reader', ':', 'sub', 'Read', 'ers', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'size', 'In', 'Bytes', '+=', 'AST#method_invocation#Left', 'reader', '.', 'ram', 'Bytes', 'Used', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#return_statement#Left', 'return', 'size', 'In', 'Bytes', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'void', 'fill', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'Object', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'array', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Object', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#field_access#Left', 'array', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'array', '[', 'i', ']', 'AST#array_access#Right', '=', 'value', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Byte', 'Buffer', 'put', 'Double', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'double', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Read', 'Only', 'Buffer', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Adjust', 'ment', 'Types', 'Result', 'desc', 'ribe', 'Adjust', 'ment', 'Types', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'desc', 'ribe', 'Adjust', 'ment', 'Types', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Desc', 'ribe', 'Adjust', 'ment', 'Types', 'Request', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Person', 'Ident', 'get', 'Source', 'Comm', 'itter', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Rev', 'Comm', 'it', 'AST#variable_declarator#Left', 'c', '=', 'AST#method_invocation#Left', 'get', 'Source', 'Comm', 'it', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#ternary_expression#Left', 'AST#binary_expression#Left', 'c', '!', '=', 'null', 'AST#binary_expression#Right', '?', 'AST#method_invocation#Left', 'c', '.', 'get', 'Comm', 'itter', 'Ident', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ':', 'null', 'AST#ternary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#array_type#Left', 'Object', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'to', 'Array', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'index', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'Object', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'cont', 'ents', '=', 'AST#array_creation_expression#Left', 'new', 'Object', 'AST#dimensions_expr#Left', '[', 'size', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'Link', 'AST#type_arguments#Left', '<', 'E', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'link', '=', 'AST#field_access#Left', 'void', 'Link', '.', 'next', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#while_statement#Left', 'while', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'link', '!', '=', 'void', 'Link', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'cont', 'ents', '[', 'AST#update_expression#Left', 'index', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#field_access#Left', 'link', '.', 'data', 'AST#field_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'link', '=', 'AST#field_access#Left', 'link', '.', 'next', 'AST#field_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#while_statement#Right', 'AST#return_statement#Left', 'return', 'cont', 'ents', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'name', '+', '"', 'Ġversion', 'Ġ"', 'AST#binary_expression#Right', '+', 'version', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Push', 'Command', 'set', 'Ref', 'Spe', 'cs', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#spread_parameter#Left', 'Ref', 'Spec', '...', 'spe', 'cs', 'AST#spread_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'check', 'Call', 'able', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#field_access#Left', 'this', '.', 'ref', 'Spe', 'cs', 'AST#field_access#Right', '.', 'clear', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Col', 'lections', '.', 'add', 'All', 'AST#argument_list#Left', '(', 'ref', 'Spe', 'cs', ',', 'spe', 'cs', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'field', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'buffer', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'span', 'First', '("', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'match', '.', 'to', 'String', 'AST#argument_list#Left', '(', 'field', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '",', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', 'end', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '")', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'buffer', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#array_type#Left', 'X', '509', 'Cert', 'ificate', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'get', 'Accept', 'ed', 'Iss', 'uers', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'null', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'read', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'pos', '<', 'size', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 's', '.', 'char', 'At', 'AST#argument_list#Left', '(', 'AST#update_expression#Left', 'pos', '++', 'AST#update_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 's', '=', 'null', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Person', 'Ident', 'get', 'Ref', 'Log', 'Ident', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'dest', 'ination', '.', 'get', 'Ref', 'Log', 'Ident', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'AST#marker_annotation#Left', '@', 'Override', 'AST#marker_annotation#Right', 'public', 'AST#modifiers#Right', 'int', 'size', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'size', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Request', 'Valid', 'ators', 'Result', 'get', 'Request', 'Valid', 'ators', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Request', 'Valid', 'ators', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Request', 'Valid', 'ators', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', '"', 'I', '(', 'F', ')"', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'equ', 'als', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'obj', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'this', '==', 'obj', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'obj', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', 'AST#method_invocation#Left', 'obj', '.', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'Seg', 'Token', 'AST#variable_declarator#Left', 'other', '=', 'AST#cast_expression#Left', '(', 'Seg', 'Token', ')', 'obj', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'Ar', 'rays', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'char', 'Array', ',', 'AST#field_access#Left', 'other', '.', 'char', 'Array', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'end', 'Offset', '!', '=', 'AST#field_access#Left', 'other', '.', 'end', 'Offset', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'index', '!', '=', 'AST#field_access#Left', 'other', '.', 'index', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'start', 'Offset', '!', '=', 'AST#field_access#Left', 'other', '.', 'start', 'Offset', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'weight', '!', '=', 'AST#field_access#Left', 'other', '.', 'weight', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'word', 'Type', '!', '=', 'AST#field_access#Left', 'other', '.', 'word', 'Type', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'fill', 'Field', 's', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'data', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Esc', 'her', 'Record', 'Factory', 'record', 'Factory', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'read', 'Header', 'AST#argument_list#Left', '(', 'data', ',', 'offset', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'pos', '=', 'AST#binary_expression#Left', 'offset', '+', '8', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'size', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '1', '_', 'shape', 'Id', '=', 'AST#method_invocation#Left', 'Little', 'End', 'ian', '.', 'get', 'Int', 'AST#argument_list#Left', '(', 'data', ',', 'AST#binary_expression#Left', 'pos', '+', 'size', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'size', '+=', '4', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '2', '_', 'flags', '=', 'AST#method_invocation#Left', 'Little', 'End', 'ian', '.', 'get', 'Int', 'AST#argument_list#Left', '(', 'data', ',', 'AST#binary_expression#Left', 'pos', '+', 'size', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'size', '+=', '4', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'get', 'Record', 'Size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'get', 'Sign', 'er', 'Name', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AL', 'G', 'OR', 'ITH', 'M', '_', 'NAME', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'syn', 'chron', 'ized', 'AST#modifiers#Right', 'void', 'clear', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'size', '!', '=', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Ar', 'rays', '.', 'fill', 'AST#argument_list#Left', '(', 'table', ',', 'null', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'mod', 'Count', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'size', '=', '0', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'C', 'ancel', 'Cap', 'acity', 'Res', 'ervation', 'Result', 'c', 'ancel', 'Cap', 'acity', 'Res', 'ervation', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'C', 'ancel', 'Cap', 'acity', 'Res', 'ervation', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'C', 'ancel', 'Cap', 'acity', 'Res', 'ervation', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Import', 'Document', 'ation', 'Parts', 'Result', 'import', 'Document', 'ation', 'Parts', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Import', 'Document', 'ation', 'Parts', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Import', 'Document', 'ation', 'Parts', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Suggest', 'Result', 'suggest', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Suggest', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Suggest', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Ex', 'plan', 'ation', 'expl', 'ain', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'doc', 'Id', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'field', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'num', 'Pay', 'loads', 'Se', 'en', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'float', 'pay', 'load', 'Score', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Ex', 'plan', 'ation', '.', 'match', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'doc', 'Score', 'AST#argument_list#Left', '(', 'doc', 'Id', ',', 'field', ',', 'num', 'Pay', 'loads', 'Se', 'en', ',', 'pay', 'load', 'Score', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Simple', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '+', '".', 'doc', 'Score', '()', '"', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'serial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'data', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'result', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'org', '.', 'apache', 'AST#scoped_type_identifier#Right', '.', 'po', 'i', 'AST#scoped_type_identifier#Right', '.', 'h', 'ss', 'f', 'AST#scoped_type_identifier#Right', '.', 'record', 'AST#scoped_type_identifier#Right', '.', 'Record', 'AST#scoped_type_identifier#Right', 'rec', ':', '_', 'list', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'result', '+=', 'AST#method_invocation#Left', 'rec', '.', 'serial', 'ize', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'offset', '+', 'result', 'AST#binary_expression#Right', ',', 'data', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#return_statement#Left', 'return', 'result', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', '_', 'string', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'AST#array_type#Left', 'long', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'copy', 'Of', 'Range', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'long', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'original', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'start', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'end', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'start', '>', 'end', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'original', 'Length', '=', 'AST#field_access#Left', 'original', '.', 'length', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'start', '<', '0', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'start', '>', 'original', 'Length', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Array', 'Index', 'Out', 'Of', 'B', 'ounds', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'result', 'Length', '=', 'AST#binary_expression#Left', 'end', '-', 'start', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'copy', 'Length', '=', 'AST#method_invocation#Left', 'Math', '.', 'min', 'AST#argument_list#Left', '(', 'result', 'Length', ',', 'AST#binary_expression#Left', 'original', 'Length', '-', 'start', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'long', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'result', '=', 'AST#array_creation_expression#Left', 'new', 'long', 'AST#dimensions_expr#Left', '[', 'result', 'Length', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'System', '.', 'array', 'copy', 'AST#argument_list#Left', '(', 'original', ',', 'start', ',', 'result', ',', '0', ',', 'copy', 'Length', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'result', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'to', 'Byte', 'Array', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Byte', 'Buffer', 'buffer', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'length', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'buffer', '.', 'has', 'Array', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '&&', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'buffer', '.', 'array', 'Offset', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', '0', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'buffer', '.', 'array', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'check', 'Byte', 'Size', 'Limit', 'AST#argument_list#Left', '(', 'length', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'data', '=', 'AST#array_creation_expression#Left', 'new', 'byte', 'AST#dimensions_expr#Left', '[', 'length', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'get', 'AST#argument_list#Left', '(', 'data', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'data', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'syn', 'chron', 'ized', 'AST#modifiers#Right', 'void', 'set', 'Progress', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'progress', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Progress', 'AST#argument_list#Left', '(', 'progress', ',', 'false', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'remove', 'Cell', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Cell', 'Value', 'Record', 'Interface', 'cell', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'cell', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', '"', 'cell', 'Ġmust', 'Ġnot', 'Ġbe', 'Ġnull', '"', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'row', '=', 'AST#method_invocation#Left', 'cell', '.', 'get', 'Row', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'row', '>', '=', 'AST#field_access#Left', 'rec', 'ords', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Runtime', 'Exception', 'AST#argument_list#Left', '(', '"', 'cell', 'Ġrow', 'Ġis', 'Ġout', 'Ġof', 'Ġrange', '"', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'Cell', 'Value', 'Record', 'Interface', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'row', 'C', 'ells', '=', 'AST#array_access#Left', 'rec', 'ords', '[', 'row', ']', 'AST#array_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'row', 'C', 'ells', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Runtime', 'Exception', 'AST#argument_list#Left', '(', '"', 'cell', 'Ġrow', 'Ġis', 'Ġalready', 'Ġempty', '"', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'short', 'AST#variable_declarator#Left', 'column', '=', 'AST#method_invocation#Left', 'cell', '.', 'get', 'Column', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'column', '>', '=', 'AST#field_access#Left', 'row', 'C', 'ells', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Runtime', 'Exception', 'AST#argument_list#Left', '(', '"', 'cell', 'Ġcolumn', 'Ġis', 'Ġout', 'Ġof', 'Ġrange', '"', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'row', 'C', 'ells', '[', 'column', ']', 'AST#array_access#Right', '=', 'null', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'String', 'canon', 'ical', 'ize', 'Path', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'path', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'bo', 'olean', 'disc', 'ard', 'Rel', 'ative', 'Pref', 'ix', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'se', 'gment', 'Start', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'de', 'let', 'able', 'Seg', 'ments', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', '=', 'AST#method_invocation#Left', 'path', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ';', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'next', 'Seg', 'ment', 'Start', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'i', '==', 'AST#method_invocation#Left', 'path', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'next', 'Seg', 'ment', 'Start', '=', 'i', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'path', '.', 'char', 'At', 'AST#argument_list#Left', '(', 'i', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', "'/", "'", 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'next', 'Seg', 'ment', 'Start', '=', 'AST#binary_expression#Left', 'i', '+', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#continue_statement#Left', 'continue', ';', 'AST#continue_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'i', '==', 'AST#binary_expression#Left', 'se', 'gment', 'Start', '+', '1', 'AST#binary_expression#Right', 'AST#binary_expression#Right', '&&', 'AST#method_invocation#Left', 'path', '.', 'region', 'Mat', 'ches', 'AST#argument_list#Left', '(', 'se', 'gment', 'Start', ',', '"', '."', ',', '0', ',', '1', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'path', '=', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'path', '.', 'sub', 'string', 'AST#argument_list#Left', '(', '0', ',', 'se', 'gment', 'Start', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '+', 'AST#method_invocation#Left', 'path', '.', 'sub', 'string', 'AST#argument_list#Left', '(', 'next', 'Seg', 'ment', 'Start', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'i', '=', 'se', 'gment', 'Start', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'i', '==', 'AST#binary_expression#Left', 'se', 'gment', 'Start', '+', '2', 'AST#binary_expression#Right', 'AST#binary_expression#Right', '&&', 'AST#method_invocation#Left', 'path', '.', 'region', 'Mat', 'ches', 'AST#argument_list#Left', '(', 'se', 'gment', 'Start', ',', '"', '..', '"', ',', '0', ',', '2', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'de', 'let', 'able', 'Seg', 'ments', '>', '0', 'AST#binary_expression#Right', '||', 'disc', 'ard', 'Rel', 'ative', 'Pref', 'ix', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'de', 'let', 'able', 'Seg', 'ments', '--', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'prev', 'Seg', 'ment', 'Start', '=', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'path', '.', 'last', 'Index', 'Of', 'AST#argument_list#Left', '(', "'/", "'", ',', 'AST#binary_expression#Left', 'se', 'gment', 'Start', '-', '2', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '+', '1', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'path', '=', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'path', '.', 'sub', 'string', 'AST#argument_list#Left', '(', '0', ',', 'prev', 'Seg', 'ment', 'Start', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '+', 'AST#method_invocation#Left', 'path', '.', 'sub', 'string', 'AST#argument_list#Left', '(', 'next', 'Seg', 'ment', 'Start', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'i', '=', 'AST#assignment_expression#Left', 'se', 'gment', 'Start', '=', 'prev', 'Seg', 'ment', 'Start', 'AST#assignment_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'se', 'gment', 'Start', '=', 'i', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'i', '>', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'de', 'let', 'able', 'Seg', 'ments', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'se', 'gment', 'Start', '=', 'i', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 'path', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'A', 'post', 'rophe', 'Filter', 'Factory', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'Map', 'AST#type_arguments#Left', '<', 'String', ',', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'args', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'args', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'args', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'Unknown', 'Ġparameter', '(', 's', '):', 'Ġ"', '+', 'args', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#generic_type#Left', 'Entry', 'AST#type_arguments#Left', '<', 'String', ',', 'Ref', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'pe', 'ek', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'packed', 'Id', 'x', '<', 'AST#method_invocation#Left', 'packed', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'lo', 'ose', 'Id', 'x', '<', 'AST#method_invocation#Left', 'lo', 'ose', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Ref', 'AST#variable_declarator#Left', 'p', '=', 'AST#method_invocation#Left', 'packed', '.', 'get', 'AST#argument_list#Left', '(', 'packed', 'Id', 'x', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Ref', 'AST#variable_declarator#Left', 'l', '=', 'AST#method_invocation#Left', 'lo', 'ose', '.', 'get', 'AST#argument_list#Left', '(', 'lo', 'ose', 'Id', 'x', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'cmp', '=', 'AST#method_invocation#Left', 'Ref', 'Compar', 'ator', '.', 'comp', 'are', 'To', 'AST#argument_list#Left', '(', 'p', ',', 'l', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'cmp', '<', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'packed', 'Id', 'x', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'to', 'Entry', 'AST#argument_list#Left', '(', 'p', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'cmp', '==', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'packed', 'Id', 'x', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'lo', 'ose', 'Id', 'x', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'to', 'Entry', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'res', 'olve', 'Lo', 'ose', 'AST#argument_list#Left', '(', 'l', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'lo', 'ose', 'Id', 'x', '<', 'AST#method_invocation#Left', 'lo', 'ose', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'to', 'Entry', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'res', 'olve', 'Lo', 'ose', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'lo', 'ose', '.', 'get', 'AST#argument_list#Left', '(', 'AST#update_expression#Left', 'lo', 'ose', 'Id', 'x', '++', 'AST#update_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'packed', 'Id', 'x', '<', 'AST#method_invocation#Left', 'packed', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'to', 'Entry', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'packed', '.', 'get', 'AST#argument_list#Left', '(', 'AST#update_expression#Left', 'packed', 'Id', 'x', '++', 'AST#update_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'null', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Environment', 'Result', 'delete', 'Environment', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Environment', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Environment', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'stem', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'char', 's', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'len', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'len', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#switch_expression#Left', 'switch', 'AST#parenthesized_expression#Left', '(', 'AST#array_access#Left', 's', '[', 'i', ']', 'AST#array_access#Right', ')', 'AST#parenthesized_expression#Right', 'AST#switch_block#Left', '{', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', "'", 'Ã¡', "':", 'AST#switch_label#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', '[', 'i', ']', 'AST#array_access#Right', 'a', "';", 'AST#assignment_expression#Right', 'AST#expression_statement#Right', 'AST#break_statement#Left', 're', 'ak', ';', 'c', 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'ase', 'Ġ', 'Ã«', "':", 'c', 'AST#switch_label#Right', 'a', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'se', "Ġ'", "':", 'Ġs', 'AST#switch_label#Right', '[', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', ']', '=', 'AST#array_access#Right', 'e', ';', 'Ġb', 'AST#assignment_expression#Right', 'r', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'ak', ';', 'ca', 's', 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'e', "Ġ'", 'ÃŃ', ':', 'Ġs', '[', 'AST#switch_label#Right', 'i', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', '=', "'", 'AST#array_access#Right', "'", 'Ġbr', 'AST#assignment_expression#Right', 'e', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'k', ';', 'cas', 'e', 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', "Ġ'", 'Ã³', "'", 'case', 'AST#switch_label#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', "'", 'Å', 'ĳ', "':", 'ase', 'Ġ', 'AST#switch_label#Right', "'", 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'Ã', 'µ', "':", 'c', 'se', "Ġ'", 'AST#switch_label#Right', 'Ã¶', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', "':", 'Ġs', 'i', ']', 'Ġ=', 'AST#switch_label#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'o', "'", ';', 'AST#array_access#Right', 'r', 'ak', ';', 'AST#assignment_expression#Right', 'c', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'se', "Ġ'", 'Ãº', "'", 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', ':', 'cas', "Ġ'", 'Å', '±', "'", 'AST#switch_label#Right', ':', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', "'", 'Å', '©', "':", 'AST#switch_label#Right', 'c', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'ase', 'Ġ', 'Ã»', "':", 'c', 'AST#switch_label#Right', 'a', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'se', "Ġ'", "':", 'Ġs', 'AST#switch_label#Right', '[', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'i', ']', 'Ġ=', "'", 'u', "';", 'AST#switch_label#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'r', 'e', 'a', 'k', 'AST#array_access#Right', '}', 'en', 'Ġ', 'AST#assignment_expression#Right', '=', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'rem', 'ov', 'e', 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', 'C', 'AST#switch_block#Right', 'AST#switch_expression#Right', 'AST#for_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ase', 's', 'AST#method_invocation#Left', 'Ġlen', ');', 'len', 'Ġ', 'AST#argument_list#Left', '=', 'r', 'm', 'ov', 'e', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', 'P', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'oss', 's', 'AST#method_invocation#Left', 'ive', '(', 's', ',', 'Ġlen', ');', 'len', 'Ġ', 'AST#argument_list#Left', '=', 'r', 'm', 'ov', 'e', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', 'P', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'l', 'ur', 'l', 'AST#method_invocation#Left', 's', ',', 'Ġlen', ');', 'ret', 'u', 'AST#argument_list#Left', 'r', 'n', 'orm', 'a', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', 'l', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'ize', '(', 's', ',', 'AST#method_invocation#Left', 'len', ');', '}', 'AST#argument_list#Left', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#return_statement#Right', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'add', 'Child', 'Before', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Esc', 'her', 'Record', 'record', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'insert', 'Before', 'Record', 'Id', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'id', 'x', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'Esc', 'her', 'Record', 'rec', ':', 'this', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'rec', '.', 'get', 'Record', 'Id', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', 'AST#cast_expression#Left', '(', 'short', ')', 'insert', 'Before', 'Record', 'Id', 'AST#cast_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'id', 'x', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', '_', 'child', 'Rec', 'ords', '.', 'add', 'AST#argument_list#Left', '(', 'id', 'x', ',', 'record', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Al', 'bum', 's', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'Cloud', 'Photo', '"', ',', '"', '2017', '-', '07', '-', '11', '"', ',', '"', 'List', 'Al', 'bum', 's', '"', ',', '"', 'cloud', 'photo', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Prot', 'ocol', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Prot', 'ocol', 'Type', '.', 'HT', 'TPS', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Save', 'Task', 'For', 'Up', 'dating', 'Reg', 'ist', 'rant', 'Info', 'ById', 'entity', 'C', 'red', 'ential', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'Domain', '-', 'int', 'l', '"', ',', '"', '2017', '-', '12', '-', '18', '"', ',', '"', 'Save', 'Task', 'For', 'Up', 'dating', 'Reg', 'ist', 'rant', 'Info', 'ById', 'entity', 'C', 'red', 'ential', '"', ',', '"', 'domain', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Method', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Method', 'Type', '.', 'POST', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Value', 'E', 'val', 'evaluate', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'src', 'Row', 'Index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'src', 'Column', 'Index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Value', 'E', 'val', 'arg', '0', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'result', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'arg', '0', 'instance', 'of', 'Two', 'DE', 'val', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'result', '=', 'AST#method_invocation#Left', 'AST#parenthesized_expression#Left', '(', 'AST#cast_expression#Left', '(', 'Two', 'DE', 'val', ')', 'arg', '0', 'AST#cast_expression#Right', ')', 'AST#parenthesized_expression#Right', '.', 'get', 'Height', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'arg', '0', 'instance', 'of', 'Ref', 'E', 'val', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'result', '=', '1', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Error', 'E', 'val', '.', 'VALUE', '_', 'IN', 'VAL', 'ID', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Number', 'E', 'val', 'AST#argument_list#Left', '(', 'result', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Res', 'erved', 'Inst', 'ances', 'Result', 'desc', 'ribe', 'Res', 'erved', 'Inst', 'ances', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'desc', 'ribe', 'Res', 'erved', 'Inst', 'ances', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Desc', 'ribe', 'Res', 'erved', 'Inst', 'ances', 'Request', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'P', 'acked', 'G', 'it', 'MM', 'AP', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'bo', 'olean', 'use', 'mm', 'ap', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'packed', 'G', 'it', 'MM', 'AP', '=', 'use', 'mm', 'ap', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'PO', 'IF', 'SD', 'ocument', 'Path', 'AST#ERROR#Left', '(', ')', '{', 'this', '.', 'AST#ERROR#Right', 'AST#variable_declarator#Left', 'comp', 'onents', '=', 'AST#array_creation_expression#Left', 'new', 'String', 'AST#dimensions_expr#Left', '[', '0', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'key', '+', '"', '/"', 'AST#binary_expression#Right', '+', 'value', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'dec', 'ode', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'blocks', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'blocks', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'int', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'values', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'values', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'iter', 'ations', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'iter', 'ations', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', '++', 'i', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'byte', '0', '=', 'AST#binary_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'AST#update_expression#Left', 'blocks', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '&', '0', 'x', 'FF', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'byte', '1', '=', 'AST#binary_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'AST#update_expression#Left', 'blocks', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '&', '0', 'x', 'FF', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'byte', '2', '=', 'AST#binary_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'AST#update_expression#Left', 'blocks', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '&', '0', 'x', 'FF', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'byte', '0', '<<', '12', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '|', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'byte', '1', '<<', '4', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', '|', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'byte', '2', '>>>', '4', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'byte', '3', '=', 'AST#binary_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'AST#update_expression#Left', 'blocks', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '&', '0', 'x', 'FF', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'byte', '4', '=', 'AST#binary_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'AST#update_expression#Left', 'blocks', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '&', '0', 'x', 'FF', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'byte', '2', '&', '15', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '<<', '16', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '|', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'byte', '3', '<<', '8', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', '|', 'byte', '4', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'serial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Output', 'out', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', '_', 'ext', 'Book', 'Index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', '_', 'first', 'She', 'et', 'Index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', '_', 'last', 'She', 'et', 'Index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Pattern', 'Parser', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Pattern', 'Consumer', 'consumer', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#ERROR#Left', 'this', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', ';', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'consumer', 'AST#field_access#Right', '=', 'consumer', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'AST#array_type#Left', 'String', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'get', 'Values', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'result', '=', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Array', 'List', 'AST#type_arguments#Left', '<', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'Index', 'able', 'Field', 'field', ':', 'fields', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'field', '.', 'name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '&&', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'field', '.', 'string', 'Value', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', 'null', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'result', '.', 'add', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'field', '.', 'string', 'Value', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'result', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'NO', '_', 'STR', 'INGS', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'result', '.', 'to', 'Array', 'AST#argument_list#Left', '(', 'AST#array_creation_expression#Left', 'new', 'String', 'AST#dimensions_expr#Left', '[', 'AST#method_invocation#Left', 'result', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Id', 'entity', 'Pool', 'Usage', 'Result', 'list', 'Id', 'entity', 'Pool', 'Usage', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Id', 'entity', 'Pool', 'Usage', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Id', 'entity', 'Pool', 'Usage', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Value', 'E', 'val', 'evaluate', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'Value', 'E', 'val', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'args', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'src', 'Cell', 'Row', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'src', 'Cell', 'Col', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#field_access#Left', 'args', '.', 'length', 'AST#field_access#Right', '<', '1', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'AST#field_access#Left', 'args', '.', 'length', 'AST#field_access#Right', '>', '5', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Error', 'E', 'val', '.', 'VALUE', '_', 'IN', 'VAL', 'ID', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Base', 'Ref', 'AST#variable_declarator#Left', 'base', 'Ref', '=', 'AST#method_invocation#Left', 'evaluate', 'Base', 'Ref', 'AST#argument_list#Left', '(', 'AST#array_access#Left', 'args', '[', '0', ']', 'AST#array_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'row', 'Offset', '=', 'AST#ternary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'AST#array_access#Left', 'args', '[', '1', ']', 'AST#array_access#Right', 'instance', 'of', 'Missing', 'Arg', 'E', 'val', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', '?', '0', ':', 'AST#method_invocation#Left', 'evaluate', 'Int', 'Arg', 'AST#argument_list#Left', '(', 'AST#array_access#Left', 'args', '[', '1', ']', 'AST#array_access#Right', ',', 'src', 'Cell', 'Row', ',', 'src', 'Cell', 'Col', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#ternary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'column', 'Offset', '=', 'AST#ternary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'AST#array_access#Left', 'args', '[', '2', ']', 'AST#array_access#Right', 'instance', 'of', 'Missing', 'Arg', 'E', 'val', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', '?', '0', ':', 'AST#method_invocation#Left', 'evaluate', 'Int', 'Arg', 'AST#argument_list#Left', '(', 'AST#array_access#Left', 'args', '[', '2', ']', 'AST#array_access#Right', ',', 'src', 'Cell', 'Row', ',', 'src', 'Cell', 'Col', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#ternary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'height', '=', 'AST#method_invocation#Left', 'base', 'Ref', '.', 'get', 'Height', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'width', '=', 'AST#method_invocation#Left', 'base', 'Ref', '.', 'get', 'Width', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#switch_expression#Left', 'switch', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'args', '.', 'length', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', 'AST#switch_block#Left', '{', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', '5', 'AST#switch_label#Right', ':', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'AST#array_access#Left', 'args', '[', '4', ']', 'AST#array_access#Right', 'instance', 'of', 'Missing', 'Arg', 'E', 'val', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'width', '=', 'AST#method_invocation#Left', 'evaluate', 'Int', 'Arg', 'AST#argument_list#Left', '(', 'AST#array_access#Left', 'args', '[', '4', ']', 'AST#array_access#Right', ',', 'src', 'Cell', 'Row', ',', 'src', 'Cell', 'Col', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', '4', 'AST#switch_label#Right', ':', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'AST#array_access#Left', 'args', '[', '3', ']', 'AST#array_access#Right', 'instance', 'of', 'Missing', 'Arg', 'E', 'val', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'height', '=', 'AST#method_invocation#Left', 'evaluate', 'Int', 'Arg', 'AST#argument_list#Left', '(', 'AST#array_access#Left', 'args', '[', '3', ']', 'AST#array_access#Right', ',', 'src', 'Cell', 'Row', ',', 'src', 'Cell', 'Col', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'default', ':', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', '}', 'AST#switch_block#Right', 'AST#switch_expression#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'height', '==', '0', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'width', '==', '0', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Error', 'E', 'val', '.', 'REF', '_', 'IN', 'VAL', 'ID', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'Lin', 'ear', 'Offset', 'Range', 'AST#variable_declarator#Left', 'row', 'Offset', 'Range', '=', 'AST#object_creation_expression#Left', 'new', 'Lin', 'ear', 'Offset', 'Range', 'AST#argument_list#Left', '(', 'row', 'Offset', ',', 'height', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Lin', 'ear', 'Offset', 'Range', 'AST#variable_declarator#Left', 'col', 'Offset', 'Range', '=', 'AST#object_creation_expression#Left', 'new', 'Lin', 'ear', 'Offset', 'Range', 'AST#argument_list#Left', '(', 'column', 'Offset', ',', 'width', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'create', 'Offset', 'AST#argument_list#Left', '(', 'base', 'Ref', ',', 'row', 'Offset', 'Range', ',', 'col', 'Offset', 'Range', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'E', 'val', 'uation', 'Exception', 'e', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'e', '.', 'get', 'Error', 'E', 'val', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#array_type#Left', 'int', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'get', 'Count', 's', 'By', 'Time', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'count', 's', 'By', 'Time', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Account', 'Result', 'update', 'Account', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Account', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Account', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Training', 'Job', 'Result', 'desc', 'ribe', 'Training', 'Job', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Training', 'Job', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Training', 'Job', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Group', 'Result', 'delete', 'Group', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Group', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Group', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'ad', 'vance', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'target', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'upt', 'o', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'upt', 'o', '==', 'AST#field_access#Left', 'doc', 'IDs', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#assignment_expression#Left', 'doc', 'ID', '=', 'NO', '_', 'MORE', '_', 'DOC', 'S', 'AST#assignment_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'inc', '=', '10', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'next', 'U', 'pt', 'o', '=', 'AST#binary_expression#Left', 'upt', 'o', '+', '10', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'low', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'high', ';', 'AST#local_variable_declaration#Right', 'AST#while_statement#Left', 'while', 'AST#parenthesized_expression#Left', '(', 'true', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'next', 'U', 'pt', 'o', '>', '=', 'AST#field_access#Left', 'doc', 'IDs', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'low', '=', 'AST#binary_expression#Left', 'next', 'U', 'pt', 'o', '-', 'inc', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'high', '=', 'AST#binary_expression#Left', 'AST#field_access#Left', 'doc', 'IDs', '.', 'length', 'AST#field_access#Right', '-', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'target', '<', '=', 'AST#array_access#Left', 'doc', 'IDs', '[', 'next', 'U', 'pt', 'o', ']', 'AST#array_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'low', '=', 'AST#binary_expression#Left', 'next', 'U', 'pt', 'o', '-', 'inc', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'high', '=', 'next', 'U', 'pt', 'o', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'inc', '*', '=', '2', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'next', 'U', 'pt', 'o', '+=', 'inc', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#while_statement#Right', 'AST#while_statement#Left', 'while', 'AST#parenthesized_expression#Left', '(', 'true', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'low', '>', 'high', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'upt', 'o', '=', 'low', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'mid', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'low', '+', 'high', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '>>>', '1', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'cmp', '=', 'AST#binary_expression#Left', 'AST#array_access#Left', 'doc', 'IDs', '[', 'mid', ']', 'AST#array_access#Right', '-', 'target', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'cmp', '<', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'low', '=', 'AST#binary_expression#Left', 'mid', '+', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'cmp', '>', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'high', '=', 'AST#binary_expression#Left', 'mid', '-', '1', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'upt', 'o', '=', 'mid', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#while_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'upt', 'o', '==', 'AST#field_access#Left', 'doc', 'IDs', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#assignment_expression#Left', 'doc', 'ID', '=', 'NO', '_', 'MORE', '_', 'DOC', 'S', 'AST#assignment_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#assignment_expression#Left', 'doc', 'ID', '=', 'AST#array_access#Left', 'doc', 'IDs', '[', 'upt', 'o', ']', 'AST#array_access#Right', 'AST#assignment_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'register', 'Listener', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'final', 'PO', 'IF', 'S', 'Reader', 'Listener', 'list', 'ener', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'list', 'ener', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Null', 'Po', 'inter', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'reg', 'istry', 'Cl', 'osed', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'State', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'reg', 'istry', '.', 'register', 'Listener', 'AST#argument_list#Left', '(', 'list', 'ener', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'AST#array_type#Left', 'int', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'grow', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'int', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'array', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'min', 'Size', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#assert_statement#Left', 'assert', 'AST#binary_expression#Left', 'min', 'Size', '>', '=', '0', 'AST#binary_expression#Right', ':', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'size', 'Ġmust', 'Ġbe', 'Ġpositive', 'Ġ(', 'got', 'Ġ"', '+', 'min', 'Size', 'AST#binary_expression#Right', '+', '"', '):', 'Ġlikely', 'Ġinteger', 'Ġoverflow', '?"', 'AST#binary_expression#Right', ';', 'AST#assert_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'array', '.', 'length', 'AST#field_access#Right', '<', 'min', 'Size', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'grow', 'Ex', 'act', 'AST#argument_list#Left', '(', 'array', ',', 'AST#method_invocation#Left', 'overs', 'ize', 'AST#argument_list#Left', '(', 'min', 'Size', ',', 'AST#field_access#Left', 'Integer', '.', 'BY', 'T', 'ES', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#return_statement#Left', 'return', 'array', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'vis', 'it', 'Termin', 'al', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Termin', 'al', 'Node', 'node', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#field_access#Left', 'System', '.', 'out', 'AST#field_access#Right', '.', 'println', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'cons', 'ume', 'Ġ"', '+', 'AST#method_invocation#Left', 'node', '.', 'get', 'Sy', 'mbol', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '"', 'Ġrule', 'Ġ"', 'AST#binary_expression#Right', '+', 'AST#array_access#Left', 'AST#method_invocation#Left', 'get', 'Rule', 'Names', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '[', 'AST#method_invocation#Left', '_', 'ctx', '.', 'get', 'Rule', 'Index', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ']', 'AST#array_access#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Token', 'Stream', 'create', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Token', 'Stream', 'input', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Lat', 'v', 'ian', 'St', 'em', 'Filter', 'AST#argument_list#Left', '(', 'input', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Repl', 'ication', 'Group', 'incre', 'ase', 'Repl', 'ica', 'Count', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Increase', 'Repl', 'ica', 'Count', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Increase', 'Repl', 'ica', 'Count', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'dec', 'ode', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'blocks', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'blocks', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'long', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'values', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'values', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'iter', 'ations', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'iter', 'ations', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', '++', 'i', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'long', 'AST#variable_declarator#Left', 'byte', '0', '=', 'AST#binary_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'AST#update_expression#Left', 'blocks', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '&', '0', 'x', 'FF', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'byte', '0', '>>>', '5', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'byte', '0', '>>>', '2', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '&', '7', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'final', 'long', 'AST#variable_declarator#Left', 'byte', '1', '=', 'AST#binary_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'AST#update_expression#Left', 'blocks', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '&', '0', 'x', 'FF', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'byte', '0', '&', '3', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '<<', '1', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '|', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'byte', '1', '>>>', '7', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'byte', '1', '>>>', '4', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '&', '7', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'byte', '1', '>>>', '1', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '&', '7', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'final', 'long', 'AST#variable_declarator#Left', 'byte', '2', '=', 'AST#binary_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'AST#update_expression#Left', 'blocks', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '&', '0', 'x', 'FF', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'byte', '1', '&', '1', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '<<', '2', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '|', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'byte', '2', '>>>', '6', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'byte', '2', '>>>', '3', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '&', '7', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'byte', '2', '&', '7', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Stop', 'Hyper', 'Parameter', 'T', 'uning', 'Job', 'Result', 'stop', 'Hyper', 'Parameter', 'T', 'uning', 'Job', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Stop', 'Hyper', 'Parameter', 'T', 'uning', 'Job', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Stop', 'Hyper', 'Parameter', 'T', 'uning', 'Job', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Res', 'et', 'Network', 'Interface', 'Attribute', 'Result', 'reset', 'Network', 'Interface', 'Attribute', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Res', 'et', 'Network', 'Interface', 'Attribute', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Res', 'et', 'Network', 'Interface', 'Attribute', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Rev', 'Bl', 'ob', 'look', 'up', 'Bl', 'ob', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Any', 'Object', 'Id', 'id', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Rev', 'Bl', 'ob', 'AST#variable_declarator#Left', 'c', '=', 'AST#cast_expression#Left', '(', 'Rev', 'Bl', 'ob', ')', 'AST#method_invocation#Left', 'objects', '.', 'get', 'AST#argument_list#Left', '(', 'id', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'c', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'c', '=', 'AST#object_creation_expression#Left', 'new', 'Rev', 'Bl', 'ob', 'AST#argument_list#Left', '(', 'id', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'objects', '.', 'add', 'AST#argument_list#Left', '(', 'c', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'c', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Group', 'Members', 'hips', 'Result', 'list', 'Group', 'Members', 'hips', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Group', 'Members', 'hips', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Group', 'Members', 'hips', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'void', 'mk', 'dir', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'File', 'd', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'bo', 'olean', 'skip', 'Ex', 'isting', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'd', '.', 'mk', 'dir', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'skip', 'Ex', 'isting', '&&', 'AST#method_invocation#Left', 'd', '.', 'is', 'Directory', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'IO', 'Exception', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Message', 'Format', '.', 'format', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'AST#method_invocation#Left', 'J', 'G', 'it', 'Text', '.', 'get', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'mk', 'Dir', 'F', 'ailed', 'AST#field_access#Right', ',', 'AST#method_invocation#Left', 'd', '.', 'get', 'Abs', 'olute', 'Path', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Det', 'ector', 'Version', 'Met', 'adata', 'Result', 'update', 'Det', 'ector', 'Version', 'Met', 'adata', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Det', 'ector', 'Version', 'Met', 'adata', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Det', 'ector', 'Version', 'Met', 'adata', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'write', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'str', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'count', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'offset', '|', 'count', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '<', '0', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'offset', '>', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'str', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '-', 'count', 'AST#binary_expression#Right', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'String', 'Index', 'Out', 'Of', 'B', 'ounds', 'Exception', 'AST#argument_list#Left', '(', 'str', ',', 'offset', ',', 'count', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'buf', '=', 'AST#array_creation_expression#Left', 'new', 'char', 'AST#dimensions_expr#Left', '[', 'count', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'str', '.', 'get', 'Ch', 'ars', 'AST#argument_list#Left', '(', 'offset', ',', 'AST#binary_expression#Left', 'offset', '+', 'count', 'AST#binary_expression#Right', ',', 'buf', ',', '0', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#synchronized_statement#Left', 'syn', 'chron', 'ized', 'AST#parenthesized_expression#Left', '(', 'lock', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'write', 'AST#argument_list#Left', '(', 'buf', ',', '0', ',', 'AST#field_access#Left', 'buf', '.', 'length', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#synchronized_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'syn', 'chron', 'ized', 'AST#modifiers#Right', 'void', 'ens', 'ure', 'Cap', 'acity', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'min', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'super', '.', 'ens', 'ure', 'Cap', 'acity', 'AST#argument_list#Left', '(', 'min', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Recipe', 'Result', 'desc', 'ribe', 'Recipe', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Recipe', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Recipe', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Dis', 'ass', 'ociate', 'Route', 'Table', 'Result', 'dis', 'ass', 'ociate', 'Route', 'Table', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Dis', 'ass', 'ociate', 'Route', 'Table', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Dis', 'ass', 'ociate', 'Route', 'Table', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Set', 'Topic', 'Attributes', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'topic', 'Ar', 'n', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'attribute', 'Name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'attribute', 'Value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Topic', 'Ar', 'n', 'AST#argument_list#Left', '(', 'topic', 'Ar', 'n', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Attribute', 'Name', 'AST#argument_list#Left', '(', 'attribute', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Attribute', 'Value', 'AST#argument_list#Left', '(', 'attribute', 'Value', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'AST#array_type#Left', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'grow', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'array', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'min', 'Size', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#assert_statement#Left', 'assert', 'AST#binary_expression#Left', 'min', 'Size', '>', '=', '0', 'AST#binary_expression#Right', ':', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'size', 'Ġmust', 'Ġbe', 'Ġpositive', 'Ġ(', 'got', 'Ġ"', '+', 'min', 'Size', 'AST#binary_expression#Right', '+', '"', '):', 'Ġlikely', 'Ġinteger', 'Ġoverflow', '?"', 'AST#binary_expression#Right', ';', 'AST#assert_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'array', '.', 'length', 'AST#field_access#Right', '<', 'min', 'Size', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'grow', 'Ex', 'act', 'AST#argument_list#Left', '(', 'array', ',', 'AST#method_invocation#Left', 'overs', 'ize', 'AST#argument_list#Left', '(', 'min', 'Size', ',', 'AST#field_access#Left', 'Character', '.', 'BY', 'T', 'ES', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#return_statement#Left', 'return', 'array', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'St', 'ash', 'Create', 'Command', 'set', 'Ref', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'ref', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'ref', 'AST#field_access#Right', '=', 'ref', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Form', 'ula', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Input', 'Stream', 'ris', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'ris', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'long', 'AST#variable_declarator#Left', 'value', 'Long', 'B', 'its', '=', 'AST#method_invocation#Left', 'ris', '.', 'read', 'Long', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '5', '_', 'options', '=', 'AST#method_invocation#Left', 'ris', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'special', 'C', 'ached', 'Value', '=', 'AST#method_invocation#Left', 'Form', 'ula', 'Special', 'C', 'ached', 'Value', '.', 'create', 'AST#argument_list#Left', '(', 'value', 'Long', 'B', 'its', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'special', 'C', 'ached', 'Value', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '4', '_', 'value', '=', 'AST#method_invocation#Left', 'Double', '.', 'long', 'B', 'its', 'To', 'Double', 'AST#argument_list#Left', '(', 'value', 'Long', 'B', 'its', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '6', '_', 'zero', '=', 'AST#method_invocation#Left', 'ris', '.', 'read', 'Int', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'field', '_', '7', '_', 'expression', '_', 'len', '=', 'AST#method_invocation#Left', 'ris', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'n', 'Bytes', 'Available', '=', 'AST#method_invocation#Left', 'ris', '.', 'available', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '8', '_', 'p', 'ars', 'ed', '_', 'expr', '=', 'AST#method_invocation#Left', 'Form', 'ula', '.', 'read', 'AST#argument_list#Left', '(', 'field', '_', '7', '_', 'expression', '_', 'len', ',', 'ris', ',', 'n', 'Bytes', 'Available', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Syn', 'onym', 'Query', 'build', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Col', 'lections', '.', 'sort', 'AST#argument_list#Left', '(', 'terms', ',', 'AST#method_invocation#Left', 'Compar', 'ator', '.', 'comp', 'aring', 'AST#argument_list#Left', '(', 'AST#lambda_expression#Left', 'a', '->', 'AST#field_access#Left', 'a', '.', 'term', 'AST#field_access#Right', 'AST#lambda_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Syn', 'onym', 'Query', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'terms', '.', 'to', 'Array', 'AST#argument_list#Left', '(', 'AST#array_creation_expression#Left', 'new', 'Term', 'And', 'Boost', 'AST#dimensions_expr#Left', '[', '0', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'field', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Password', 'Rev', '4', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Input', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '1', '_', 'password', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'is', 'Read', 'Only', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'pre', 'ced', 'ing', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'pos', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'pos', '<', 'start', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'pos', '>', 'end', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', '"', 'offset', 'Ġout', 'Ġof', 'Ġbounds', '"', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'else', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'pos', '==', 'start', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'current', '=', 'start', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'D', 'ONE', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'first', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Cod', 'ep', 'age', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Input', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '1', '_', 'cod', 'ep', 'age', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'App', 'ro', 've', 'Ass', 'ignment', 'Result', 'appro', 've', 'Ass', 'ignment', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'App', 'ro', 've', 'Ass', 'ignment', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'App', 'ro', 've', 'Ass', 'ignment', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'V', 'pn', 'Connect', 'ions', 'Result', 'desc', 'ribe', 'V', 'pn', 'Connect', 'ions', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'desc', 'ribe', 'V', 'pn', 'Connect', 'ions', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Desc', 'ribe', 'V', 'pn', 'Connect', 'ions', 'Request', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'V', 'next', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'AST#method_invocation#Left', 'next', 'Entry', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'value', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Instance', 'Health', 'Result', 'desc', 'ribe', 'Instance', 'Health', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Instance', 'Health', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Instance', 'Health', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'void', 'register', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Trans', 'port', 'Prot', 'ocol', 'pro', 'to', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'prot', 'ocol', 's', '.', 'add', 'AST#argument_list#Left', '(', '0', ',', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Weak', 'Reference', 'AST#type_arguments#Left', '<', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', 'pro', 'to', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'AST#array_type#Left', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'copy', 'Of', 'Range', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'original', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'start', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'end', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'start', '>', 'end', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'original', 'Length', '=', 'AST#field_access#Left', 'original', '.', 'length', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'start', '<', '0', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'start', '>', 'original', 'Length', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Array', 'Index', 'Out', 'Of', 'B', 'ounds', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'result', 'Length', '=', 'AST#binary_expression#Left', 'end', '-', 'start', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'copy', 'Length', '=', 'AST#method_invocation#Left', 'Math', '.', 'min', 'AST#argument_list#Left', '(', 'result', 'Length', ',', 'AST#binary_expression#Left', 'original', 'Length', '-', 'start', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'result', '=', 'AST#array_creation_expression#Left', 'new', 'char', 'AST#dimensions_expr#Left', '[', 'result', 'Length', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'System', '.', 'array', 'copy', 'AST#argument_list#Left', '(', 'original', ',', 'start', ',', 'result', ',', '0', ',', 'copy', 'Length', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'result', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'void', 'fill', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'int', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'array', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#field_access#Left', 'array', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'array', '[', 'i', ']', 'AST#array_access#Right', '=', 'value', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#generic_type#Left', 'Class', 'AST#type_arguments#Left', '<', 'AST#wildcard#Left', '?', 'ext', 'ends', 'Record', 'AST#wildcard#Right', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'pe', 'ek', 'Next', 'Class', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'has', 'Next', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'null', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#method_invocation#Left', '_', 'list', '.', 'get', 'AST#argument_list#Left', '(', '_', 'next', 'Index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'AST#array_type#Left', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'copy', 'Of', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'original', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'new', 'Length', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'new', 'Length', '<', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Neg', 'ative', 'Array', 'Size', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'copy', 'Of', 'Range', 'AST#argument_list#Left', '(', 'original', ',', '0', ',', 'new', 'Length', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Rel', 'ational', 'Database', 'Result', 'delete', 'Rel', 'ational', 'Database', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Rel', 'ational', 'Database', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Rel', 'ational', 'Database', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'equ', 'als', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'obj', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'this', '==', 'obj', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'obj', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', 'AST#method_invocation#Left', 'obj', '.', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'Weight', 'ed', 'Ph', 'rase', 'Info', 'AST#variable_declarator#Left', 'other', '=', 'AST#cast_expression#Left', '(', 'Weight', 'ed', 'Ph', 'rase', 'Info', ')', 'obj', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'get', 'Start', 'Offset', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', 'AST#method_invocation#Left', 'other', '.', 'get', 'Start', 'Offset', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'get', 'End', 'Offset', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', 'AST#method_invocation#Left', 'other', '.', 'get', 'End', 'Offset', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'get', 'Boost', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', 'AST#method_invocation#Left', 'other', '.', 'get', 'Boost', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'has', 'Next', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'next', 'Block', '!', '=', 'AST#field_access#Left', 'PO', 'IF', 'S', 'Const', 'ants', '.', 'END', '_', 'OF', '_', 'CH', 'AIN', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'write', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'char', 'b', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'len', '>', '=', 'AST#field_access#Left', 'buf', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'res', 'ize', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'len', '+', '1', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'uns', 'afe', 'Write', 'AST#argument_list#Left', '(', 'b', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'serial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Output', 'out', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'future', 'Header', '.', 'serial', 'ize', 'AST#argument_list#Left', '(', 'out', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'isf', '_', 'shared', 'Feature', 'Type', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Byte', 'AST#argument_list#Left', '(', 'res', 'erved', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Int', 'AST#argument_list#Left', '(', 'AST#cast_expression#Left', '(', 'int', ')', 'cb', 'H', 'dr', 'Data', 'AST#cast_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'AST#argument_list#Left', '(', 'r', 'gb', 'H', 'dr', 'Data', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'User', 'H', 'ier', 'archy', 'G', 'roups', 'Result', 'list', 'User', 'H', 'ier', 'archy', 'G', 'roups', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'User', 'H', 'ier', 'archy', 'G', 'roups', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'User', 'H', 'ier', 'archy', 'G', 'roups', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Get', 'Topic', 'Attributes', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'topic', 'Ar', 'n', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Topic', 'Ar', 'n', 'AST#argument_list#Left', '(', 'topic', 'Ar', 'n', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Tra', 'ffic', 'Policy', 'Version', 'Result', 'create', 'Tra', 'ffic', 'Policy', 'Version', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Tra', 'ffic', 'Policy', 'Version', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Tra', 'ffic', 'Policy', 'Version', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'AST#marker_annotation#Left', '@', 'Override', 'AST#marker_annotation#Right', 'public', 'AST#modifiers#Right', 'bo', 'olean', 'equ', 'als', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'object', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'this', '==', 'object', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'object', 'instance', 'of', 'AST#scoped_type_identifier#Left', 'Map', '.', 'Entry', 'AST#scoped_type_identifier#Right', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'AST#scoped_type_identifier#Left', 'Map', '.', 'Entry', 'AST#scoped_type_identifier#Right', 'AST#type_arguments#Left', '<', '?', ',', '?', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'entry', '=', 'AST#cast_expression#Left', '(', 'AST#generic_type#Left', 'AST#scoped_type_identifier#Left', 'Map', '.', 'Entry', 'AST#scoped_type_identifier#Right', 'AST#type_arguments#Left', '<', '?', ',', '?', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', ')', 'object', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#ternary_expression#Left', 'AST#binary_expression#Left', 'key', '==', 'null', 'AST#binary_expression#Right', '?', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'entry', '.', 'get', 'Key', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', 'null', 'AST#binary_expression#Right', ':', 'AST#method_invocation#Left', 'key', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'entry', '.', 'get', 'Key', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#ternary_expression#Right', ')', 'AST#parenthesized_expression#Right', '&&', 'AST#parenthesized_expression#Left', '(', 'AST#ternary_expression#Left', 'AST#binary_expression#Left', 'value', '==', 'null', 'AST#binary_expression#Right', '?', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'entry', '.', 'get', 'Value', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', 'null', 'AST#binary_expression#Right', ':', 'AST#method_invocation#Left', 'value', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'entry', '.', 'get', 'Value', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#ternary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Resources', 'Result', 'list', 'Resources', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Resources', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Resources', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'V', 'get', 'And', 'Set', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'V', 'new', 'Value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#while_statement#Left', 'while', 'AST#parenthesized_expression#Left', '(', 'true', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'V', 'AST#variable_declarator#Left', 'x', '=', 'AST#method_invocation#Left', 'get', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'comp', 'are', 'And', 'Set', 'AST#argument_list#Left', '(', 'x', ',', 'new', 'Value', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'x', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#while_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'F', 'eat', 'H', 'dr', 'Record', 'AST#ERROR#Left', '(', ')', '{', 'AST#ERROR#Right', 'AST#variable_declarator#Left', 'future', 'Header', '=', 'AST#object_creation_expression#Left', 'new', 'F', 'tr', 'Header', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'future', 'Header', '.', 'set', 'Record', 'Type', 'AST#argument_list#Left', '(', 'sid', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Dis', 'ass', 'ociate', 'Phone', 'Numbers', 'From', 'Voice', 'Connector', 'Result', 'dis', 'ass', 'ociate', 'Phone', 'Numbers', 'From', 'Voice', 'Connector', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Dis', 'ass', 'ociate', 'Phone', 'Numbers', 'From', 'Voice', 'Connector', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Dis', 'ass', 'ociate', 'Phone', 'Numbers', 'From', 'Voice', 'Connector', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Object', 'Id', 'id', 'For', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'type', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'data', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'id', 'For', 'AST#argument_list#Left', '(', 'type', ',', 'data', ',', '0', ',', 'AST#field_access#Left', 'data', '.', 'length', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'remove', 'Par', 'se', 'Listener', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Par', 'se', 'Tree', 'Listener', 'list', 'ener', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', '_', 'parse', 'Listen', 'ers', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', '_', 'parse', 'Listen', 'ers', '.', 'remove', 'AST#argument_list#Left', '(', 'list', 'ener', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', '_', 'parse', 'Listen', 'ers', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'parse', 'Listen', 'ers', '=', 'null', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Ax', 'is', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Input', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '1', '_', 'axis', 'Type', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '2', '_', 'res', 'erved', '1', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Int', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '3', '_', 'res', 'erved', '2', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Int', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '4', '_', 'res', 'erved', '3', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Int', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '5', '_', 'res', 'erved', '4', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Int', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'double', 'evaluate', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'double', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'v', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'E', 'val', 'uation', 'Exception', '{', 'AST#ERROR#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'v', '.', 'length', 'AST#field_access#Right', '<', '2', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'E', 'val', 'uation', 'Exception', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Error', 'E', 'val', '.', 'NA', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'int', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'count', 's', '=', 'AST#array_creation_expression#Left', 'new', 'int', 'AST#dimensions_expr#Left', '[', 'AST#field_access#Left', 'v', '.', 'length', 'AST#field_access#Right', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Ar', 'rays', '.', 'fill', 'AST#argument_list#Left', '(', 'count', 's', ',', '1', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ',', 'AST#variable_declarator#Left', 'i', 'Size', '=', 'AST#field_access#Left', 'v', '.', 'length', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'i', 'Size', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'j', '=', 'AST#binary_expression#Left', 'i', '+', '1', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ',', 'AST#variable_declarator#Left', 'j', 'Size', '=', 'AST#field_access#Left', 'v', '.', 'length', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'j', '<', 'j', 'Size', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'j', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#array_access#Left', 'v', '[', 'i', ']', 'AST#array_access#Right', '==', 'AST#array_access#Left', 'v', '[', 'j', ']', 'AST#array_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'AST#array_access#Left', 'count', 's', '[', 'i', ']', 'AST#array_access#Right', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#local_variable_declaration#Left', 'double', 'AST#variable_declarator#Left', 'max', 'v', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'max', 'c', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ',', 'AST#variable_declarator#Left', 'i', 'Size', '=', 'AST#field_access#Left', 'count', 's', '.', 'length', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'i', 'Size', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#array_access#Left', 'count', 's', '[', 'i', ']', 'AST#array_access#Right', '>', 'max', 'c', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'max', 'v', '=', 'AST#array_access#Left', 'v', '[', 'i', ']', 'AST#array_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'max', 'c', '=', 'AST#array_access#Left', 'count', 's', '[', 'i', ']', 'AST#array_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'max', 'c', '>', '1', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'max', 'v', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'E', 'val', 'uation', 'Exception', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Error', 'E', 'val', '.', 'NA', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'add', 'F', 'acet', 'Count', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Bytes', 'Ref', 'f', 'acet', 'Value', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'count', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'count', '<', 'current', 'Min', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'F', 'acet', 'Entry', 'AST#variable_declarator#Left', 'f', 'acet', 'Entry', '=', 'AST#object_creation_expression#Left', 'new', 'F', 'acet', 'Entry', 'AST#argument_list#Left', '(', 'f', 'acet', 'Value', ',', 'count', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'f', 'acet', 'Ent', 'ries', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', 'max', 'Size', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'f', 'acet', 'Ent', 'ries', '.', 'higher', 'AST#argument_list#Left', '(', 'f', 'acet', 'Entry', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'f', 'acet', 'Ent', 'ries', '.', 'poll', 'Last', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'f', 'acet', 'Ent', 'ries', '.', 'add', 'AST#argument_list#Left', '(', 'f', 'acet', 'Entry', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'f', 'acet', 'Ent', 'ries', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', 'max', 'Size', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'current', 'Min', '=', 'AST#field_access#Left', 'AST#method_invocation#Left', 'f', 'acet', 'Ent', 'ries', '.', 'last', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'count', 'AST#field_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'buffer', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 'nl', '=', 'AST#method_invocation#Left', 'System', '.', 'get', 'Property', 'AST#argument_list#Left', '(', '"', 'line', '.', 'separ', 'ator', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"[', 'ft', 'G', 'mo', ']"', '+', 'nl', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġreserved', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'to', 'H', 'ex', 'AST#argument_list#Left', '(', 'res', 'erved', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'nl', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', '[/', 'ft', 'G', 'mo', ']"', '+', 'nl', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'buffer', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Mode', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '+', '"', 'Ġ"', 'AST#binary_expression#Right', '+', 'AST#method_invocation#Left', 'get', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Char', 'Vector', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'capacity', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'capacity', '>', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'block', 'Size', '=', 'capacity', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'block', 'Size', '=', 'DE', 'FAULT', '_', 'BL', 'OCK', '_', 'SIZE', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'array', '=', 'AST#array_creation_expression#Left', 'new', 'char', 'AST#dimensions_expr#Left', '[', 'block', 'Size', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'n', '=', '0', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Account', 'Lim', 'its', 'Result', 'desc', 'ribe', 'Account', 'Lim', 'its', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Account', 'Lim', 'its', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Account', 'Lim', 'its', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'remove', 'Built', 'in', 'Record', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'byte', 'name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'sheet', 'Index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'link', 'Table', '.', 'remove', 'Built', 'in', 'Record', 'AST#argument_list#Left', '(', 'name', ',', 'sheet', 'Index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Security', 'Group', 'Result', 'create', 'Security', 'Group', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Security', 'Group', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Security', 'Group', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'equ', 'als', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'other', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'same', 'Class', 'As', 'AST#argument_list#Left', '(', 'other', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '&&', 'AST#method_invocation#Left', 'equ', 'als', 'To', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'cast', 'AST#argument_list#Left', '(', 'other', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Object', 'Information', 'Result', 'get', 'Object', 'Information', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Object', 'Information', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Object', 'Information', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'Buffer', 'append', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'long', 'l', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Integ', 'ral', 'To', 'String', '.', 'append', 'Long', 'AST#argument_list#Left', '(', 'this', ',', 'l', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Integ', 'ration', 'Resp', 'ons', 'es', 'Result', 'get', 'Integ', 'ration', 'Resp', 'ons', 'es', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Integ', 'ration', 'Resp', 'ons', 'es', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Integ', 'ration', 'Resp', 'ons', 'es', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Deploy', 'ment', 'Config', 's', 'Result', 'list', 'Deploy', 'ment', 'Config', 's', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'list', 'Deploy', 'ment', 'Config', 's', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'List', 'Deploy', 'ment', 'Config', 's', 'Request', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Cell', 'Range', 'Address', 'remove', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'range', 'Index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', '_', 'list', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Runtime', 'Exception', 'AST#argument_list#Left', '(', '"', 'List', 'Ġis', 'Ġempty', '"', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'range', 'Index', '<', '0', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'range', 'Index', '>', '=', 'AST#method_invocation#Left', '_', 'list', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Runtime', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'Range', 'Ġindex', 'Ġ("', '+', 'range', 'Index', 'AST#binary_expression#Right', '+', '")', 'Ġis', 'Ġoutside', 'Ġallowable', 'Ġrange', 'Ġ(', '0', '..', '"', 'AST#binary_expression#Right', '+', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', '_', 'list', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '-', '1', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', '+', '")', '"', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', '_', 'list', '.', 'remove', 'AST#argument_list#Left', '(', 'range', 'Index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Dim', 'Config', 'get', 'Dim', 'Config', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'dim', 'Name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Dim', 'Config', 'AST#variable_declarator#Left', 'ft', '=', 'AST#method_invocation#Left', 'field', 'Types', '.', 'get', 'AST#argument_list#Left', '(', 'dim', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'ft', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ft', '=', 'AST#method_invocation#Left', 'get', 'Default', 'Dim', 'Config', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'ft', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Stack', 'Resource', 'Dr', 'ifts', 'Result', 'desc', 'ribe', 'Stack', 'Resource', 'Dr', 'ifts', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Stack', 'Resource', 'Dr', 'ifts', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Stack', 'Resource', 'Dr', 'ifts', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Par', 'ams', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'params', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'supp', 'orts', 'Par', 'ams', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Un', 'supported', 'Operation', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'get', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '+', '"', 'Ġdoes', 'Ġnot', 'Ġsupport', 'Ġcommand', 'Ġline', 'Ġparameters', '."', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'params', 'AST#field_access#Right', '=', 'params', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Rep', 'ository', 'Ass', 'ociation', 'Result', 'desc', 'ribe', 'Rep', 'ository', 'Ass', 'ociation', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Rep', 'ository', 'Ass', 'ociation', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Rep', 'ository', 'Ass', 'ociation', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'syn', 'chron', 'ized', 'AST#modifiers#Right', 'AST#generic_type#Left', 'En', 'umer', 'ation', 'AST#type_arguments#Left', '<', 'V', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'e', 'lements', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Value', 'En', 'umer', 'ation', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'long', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'o', '=', 'AST#binary_expression#Left', 'index', '>>>', '4', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'b', '=', 'AST#binary_expression#Left', 'index', '&', '15', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'shift', '=', 'AST#binary_expression#Left', 'b', '<<', '2', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'o', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'o', ']', 'AST#array_access#Right', '&', 'AST#unary_expression#Left', '~', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', '15', 'L', '<<', 'shift', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#unary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '|', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'value', '<<', 'shift', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'HTML', 'St', 'rip', 'Char', 'Filter', 'Factory', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'Map', 'AST#type_arguments#Left', '<', 'String', ',', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'args', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'args', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'esc', 'aped', 'Tags', '=', 'AST#method_invocation#Left', 'get', 'Set', 'AST#argument_list#Left', '(', 'args', ',', '"', 'esc', 'aped', 'Tags', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'args', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'Unknown', 'Ġparameters', ':', 'Ġ"', '+', 'args', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'get', 'Entry', 'Path', 'Length', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'path', 'Len', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'serial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Output', 'out', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'field', '_', '1', '_', 'option', '_', 'flag', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'field', '_', '2', '_', 'ix', 'als', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'field', '_', '3', '_', 'not', '_', 'used', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Byte', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'field', '_', '4', '_', 'name', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'String', 'Ut', 'il', '.', 'write', 'Un', 'ic', 'ode', 'String', 'Flag', 'And', 'Data', 'AST#argument_list#Left', '(', 'out', ',', 'field', '_', '4', '_', 'name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'is', 'O', 'LE', 'Link', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', '&&', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'is', 'St', 'd', 'Document', 'Name', 'Ident', 'ifier', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'is', 'Aut', 'omatic', 'Link', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', '_', 'dd', 'e', 'Values', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Byte', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '_', 'n', 'Column', 's', '-', '1', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '_', 'n', 'R', 'ows', '-', '1', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Con', 'stant', 'Value', 'Parser', '.', 'en', 'code', 'AST#argument_list#Left', '(', 'out', ',', '_', 'dd', 'e', 'Values', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'field', '_', '5', '_', 'name', '_', 'definition', '.', 'serial', 'ize', 'AST#argument_list#Left', '(', 'out', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'buffer', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"[', 'RE', 'FR', 'ESH', 'ALL', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'options', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'short', 'To', 'H', 'ex', 'AST#argument_list#Left', '(', '_', 'options', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', '[/', 'RE', 'FR', 'ESH', 'ALL', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'buffer', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Continue', 'Deploy', 'ment', 'Result', 'continue', 'Deploy', 'ment', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Continue', 'Deploy', 'ment', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Continue', 'Deploy', 'ment', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'long', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'o', '=', 'AST#binary_expression#Left', 'index', '/', '3', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'b', '=', 'AST#binary_expression#Left', 'index', '%', '3', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'shift', '=', 'AST#binary_expression#Left', 'b', '*', '21', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'o', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'o', ']', 'AST#array_access#Right', '&', 'AST#unary_expression#Left', '~', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', '20', '97', '151', 'L', '<<', 'shift', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#unary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '|', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'value', '<<', 'shift', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'long', 'next', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', '{', 'AST#ERROR#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'ord', '==', 'value', 'Count', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'EO', 'F', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'off', '==', 'block', 'Size', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'ref', 'ill', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'final', 'long', 'AST#variable_declarator#Left', 'value', '=', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'off', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', '++', 'ord', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'value', ';', 'AST#return_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'final', 'AST#modifiers#Right', 'Rev', 'Filter', 'between', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Date', 'since', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Date', 'until', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'between', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'since', '.', 'get', 'Time', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#method_invocation#Left', 'until', '.', 'get', 'Time', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'V', 'ault', 'Result', 'delete', 'V', 'ault', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'V', 'ault', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'V', 'ault', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'void', 'reset', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'it', '=', 'AST#method_invocation#Left', 'c', 'ached', 'States', '.', 'get', 'States', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Det', 'aching', 'Sy', 'mb', 'olic', 'Ref', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'det', 'aching', 'Sy', 'mb', 'olic', 'Ref', '=', 'true', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Mod', 'ify', 'Id', 'entity', 'Id', 'Format', 'Result', 'mod', 'ify', 'Id', 'entity', 'Id', 'Format', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Mod', 'ify', 'Id', 'entity', 'Id', 'Format', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Mod', 'ify', 'Id', 'entity', 'Id', 'Format', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'add', 'Exception', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'word', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'Array', 'List', 'AST#type_arguments#Left', '<', 'Object', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'hyp', 'hen', 'ated', 'word', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'stop', 'list', '.', 'put', 'AST#argument_list#Left', '(', 'word', ',', 'hyp', 'hen', 'ated', 'word', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Greek', 'St', 'em', 'Filter', 'Factory', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'Map', 'AST#type_arguments#Left', '<', 'String', ',', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'args', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'args', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'args', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'Unknown', 'Ġparameters', ':', 'Ġ"', '+', 'args', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Register', 'Type', 'Result', 'register', 'Type', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Register', 'Type', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Register', 'Type', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Access', 'Control', 'Effect', 'Result', 'get', 'Access', 'Control', 'Effect', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Access', 'Control', 'Effect', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Access', 'Control', 'Effect', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'H', 'SS', 'F', 'Shape', 'Group', 'create', 'Group', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'H', 'SS', 'F', 'Child', 'An', 'ch', 'or', 'anch', 'or', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'H', 'SS', 'F', 'Shape', 'Group', 'AST#variable_declarator#Left', 'group', '=', 'AST#object_creation_expression#Left', 'new', 'H', 'SS', 'F', 'Shape', 'Group', 'AST#argument_list#Left', '(', 'this', ',', 'anch', 'or', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'group', '.', 'set', 'Parent', 'AST#argument_list#Left', '(', 'this', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'group', '.', 'set', 'An', 'ch', 'or', 'AST#argument_list#Left', '(', 'anch', 'or', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sh', 'apes', '.', 'add', 'AST#argument_list#Left', '(', 'group', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'on', 'Create', 'AST#argument_list#Left', '(', 'group', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'group', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'External', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'String', 'Builder', 'AST#variable_declarator#Left', 'r', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'append', 'San', 'itized', 'AST#argument_list#Left', '(', 'r', ',', 'AST#method_invocation#Left', 'get', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ<', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'append', 'San', 'itized', 'AST#argument_list#Left', '(', 'r', ',', 'AST#method_invocation#Left', 'get', 'Email', 'Address', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', '">', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'when', '/', '1000', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', "'", "Ġ'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'append', 'Time', 'zone', 'AST#argument_list#Left', '(', 'r', ',', 'tz', 'Offset', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'r', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'Font', 'Ch', 'ars', 'et', 'value', 'Of', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'value', '>', '=', 'AST#field_access#Left', '_', 'table', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'null', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#array_access#Left', '_', 'table', '[', 'value', ']', 'AST#array_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'NL', 'PS', 'ent', 'ence', 'Det', 'ector', 'Op', 'AST#ERROR#Left', '(', ')', '{', 'AST#ERROR#Right', 'AST#variable_declarator#Left', 'sent', 'ence', 'Spl', 'itter', '=', 'null', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'resource', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'this', '.', 'resource', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Query', 'Sc', 'orer', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Query', 'query', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'field', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'init', 'AST#argument_list#Left', '(', 'query', ',', 'field', ',', 'null', ',', 'true', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Active', 'Tr', 'usted', 'Sign', 'ers', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#field_access#Left', 'AST#field_access#Left', 'java', '.', 'util', 'AST#field_access#Right', '.', 'List', 'AST#field_access#Right', '<', 'Sign', 'er', 'AST#binary_expression#Right', '>', 'items', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Items', 'AST#argument_list#Left', '(', 'items', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'sb', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ["', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'format', 'Reference', 'As', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"]', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'sb', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Node', 'group', 'Config', 'Result', 'update', 'Node', 'group', 'Config', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Node', 'group', 'Config', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Node', 'group', 'Config', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'fill', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'from', 'Index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'to', 'Index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'long', 'val', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#assert_statement#Left', 'assert', 'AST#binary_expression#Left', 'val', '<', '=', 'AST#method_invocation#Left', 'max', 'Value', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'B', 'its', 'Per', 'Value', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ';', 'AST#assert_statement#Right', 'AST#assert_statement#Left', 'assert', 'AST#binary_expression#Left', 'from', 'Index', '<', '=', 'to', 'Index', 'AST#binary_expression#Right', ';', 'AST#assert_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', 'from', 'Index', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'to', 'Index', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', '++', 'i', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'AST#argument_list#Left', '(', 'i', ',', 'val', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Training', 'J', 'obs', 'Result', 'list', 'Training', 'J', 'obs', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Training', 'J', 'obs', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Training', 'J', 'obs', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Prof', 'iling', 'Group', 'Result', 'desc', 'ribe', 'Prof', 'iling', 'Group', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Prof', 'iling', 'Group', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Prof', 'iling', 'Group', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Ign', 'ore', 'Node', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'Fast', 'Ign', 'ore', 'Rule', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'rules', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'rules', 'AST#field_access#Right', '=', 'rules', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'void', 'fill', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'array', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'char', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#field_access#Left', 'array', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'array', '[', 'i', ']', 'AST#array_access#Right', '=', 'value', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Trans', 'it', 'Gate', 'way', 'Mult', 'ic', 'ast', 'Domain', 'Ass', 'oci', 'ations', 'Result', 'get', 'Trans', 'it', 'Gate', 'way', 'Mult', 'ic', 'ast', 'Domain', 'Ass', 'oci', 'ations', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Trans', 'it', 'Gate', 'way', 'Mult', 'ic', 'ast', 'Domain', 'Ass', 'oci', 'ations', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Trans', 'it', 'Gate', 'way', 'Mult', 'ic', 'ast', 'Domain', 'Ass', 'oci', 'ations', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Long', 'Buffer', 'comp', 'act', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'System', '.', 'array', 'copy', 'AST#argument_list#Left', '(', 'back', 'ing', 'Array', ',', 'AST#binary_expression#Left', 'position', '+', 'offset', 'AST#binary_expression#Right', ',', 'back', 'ing', 'Array', ',', 'offset', ',', 'AST#method_invocation#Left', 'rem', 'aining', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'position', '=', 'AST#binary_expression#Left', 'limit', '-', 'position', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'limit', '=', 'capacity', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'mark', '=', 'UN', 'SET', '_', 'M', 'ARK', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Cele', 'br', 'ity', 'Info', 'Result', 'get', 'Cele', 'br', 'ity', 'Info', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Cele', 'br', 'ity', 'Info', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Cele', 'br', 'ity', 'Info', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Trans', 'cript', 'Result', 'get', 'Trans', 'cript', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Trans', 'cript', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Trans', 'cript', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Cache', 'Parameter', 'Group', 'Result', 'delete', 'Cache', 'Parameter', 'Group', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Cache', 'Parameter', 'Group', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Cache', 'Parameter', 'Group', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Desc', 'ribe', 'Tags', 'Request', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#field_access#Left', 'AST#field_access#Left', 'java', '.', 'util', 'AST#field_access#Right', '.', 'List', 'AST#field_access#Right', '<', 'Filter', 'AST#binary_expression#Right', '>', 'fil', 'ters', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Fil', 'ters', 'AST#argument_list#Left', '(', 'fil', 'ters', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Custom', 'Met', 'adata', 'Result', 'create', 'Custom', 'Met', 'adata', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Custom', 'Met', 'adata', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Custom', 'Met', 'adata', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Cl', 'uster', 'res', 'ume', 'Cl', 'uster', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Res', 'ume', 'Cl', 'uster', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Res', 'ume', 'Cl', 'uster', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Moving', 'Add', 'resses', 'Result', 'desc', 'ribe', 'Moving', 'Add', 'resses', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Moving', 'Add', 'resses', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Moving', 'Add', 'resses', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Search', 'Address', 'Books', 'Result', 'search', 'Address', 'Books', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Search', 'Address', 'Books', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Search', 'Address', 'Books', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Domain', 'To', 'Domain', 'Group', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'Domain', '"', ',', '"', '2018', '-', '01', '-', '29', '"', ',', '"', 'Update', 'Domain', 'To', 'Domain', 'Group', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Method', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Method', 'Type', '.', 'POST', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'add', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Rev', 'Comm', 'it', 'c', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Block', 'AST#variable_declarator#Left', 'b', '=', 'tail', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'b', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'b', '=', 'AST#method_invocation#Left', 'free', '.', 'new', 'Block', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'b', '.', 'add', 'AST#argument_list#Left', '(', 'c', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'head', '=', 'b', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'tail', '=', 'b', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'else', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'b', '.', 'is', 'Full', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'b', '=', 'AST#method_invocation#Left', 'free', '.', 'new', 'Block', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'tail', '.', 'next', 'AST#field_access#Right', '=', 'b', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'tail', '=', 'b', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'b', '.', 'add', 'AST#argument_list#Left', '(', 'c', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Float', 'Buffer', 'put', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'float', 'c', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'check', 'Index', 'AST#argument_list#Left', '(', 'index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'byte', 'Buffer', '.', 'put', 'Float', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'index', '*', 'AST#field_access#Left', 'Size', 'Of', '.', 'FL', 'O', 'AT', 'AST#field_access#Right', 'AST#binary_expression#Right', ',', 'c', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'flush', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', '{', 'AST#ERROR#Right', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'begin', 'Write', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'd', 'st', '.', 'flush', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'Inter', 'rupted', 'IO', 'Exception', 'e', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#method_invocation#Left', 'write', 'Tim', 'ed', 'Out', 'AST#argument_list#Left', '(', 'e', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#finally_clause#Left', 'f', 'inally', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'end', 'Write', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#finally_clause#Right', 'AST#try_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#generic_type#Left', 'Set', 'AST#type_arguments#Left', '<', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'get', 'Mod', 'ified', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Col', 'lections', '.', 'un', 'mod', 'ifiable', 'Set', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'diff', '.', 'get', 'Mod', 'ified', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Long', 's', 'Ref', 'next', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'count', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#assert_statement#Left', 'assert', 'AST#binary_expression#Left', 'count', '>', '0', 'AST#binary_expression#Right', ';', 'AST#assert_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'ord', '==', 'value', 'Count', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'EO', 'F', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'off', '==', 'block', 'Size', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'ref', 'ill', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'count', '=', 'AST#method_invocation#Left', 'Math', '.', 'min', 'AST#argument_list#Left', '(', 'count', ',', 'AST#binary_expression#Left', 'block', 'Size', '-', 'off', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'count', '=', 'AST#cast_expression#Left', '(', 'int', ')', 'AST#method_invocation#Left', 'Math', '.', 'min', 'AST#argument_list#Left', '(', 'count', ',', 'AST#binary_expression#Left', 'value', 'Count', '-', 'ord', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'values', 'Ref', '.', 'offset', 'AST#field_access#Right', '=', 'off', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'values', 'Ref', '.', 'length', 'AST#field_access#Right', '=', 'count', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'off', '+=', 'count', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ord', '+=', 'count', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'values', 'Ref', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Byte', 'Buffer', 'slice', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Read', 'Only', 'He', 'ap', 'Byte', 'Buffer', 'AST#argument_list#Left', '(', 'back', 'ing', 'Array', ',', 'AST#method_invocation#Left', 'rem', 'aining', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#binary_expression#Left', 'offset', '+', 'position', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'bo', 'olean', 'is', 'Empty', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'begin', 'A', '==', 'end', 'A', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'begin', 'B', '==', 'end', 'B', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'final', 'AST#modifiers#Right', 'int', 'commit', 'Message', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'b', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'ptr', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 's', 'z', '=', 'AST#field_access#Left', 'b', '.', 'length', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'ptr', '==', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ptr', '+=', '46', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#while_statement#Left', 'while', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'ptr', '<', 's', 'z', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'AST#array_access#Left', 'b', '[', 'ptr', ']', 'AST#array_access#Right', '==', "'", 'p', "'", 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ptr', '+=', '48', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#while_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'tag', 'Message', 'AST#argument_list#Left', '(', 'b', ',', 'ptr', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Value', 'E', 'val', 'evaluate', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'Value', 'E', 'val', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'args', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Operation', 'E', 'val', 'uation', 'Context', 'ec', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'args', '.', 'length', 'AST#field_access#Right', '!', '=', '2', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Error', 'E', 'val', '.', 'VALUE', '_', 'IN', 'VAL', 'ID', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'double', 'AST#variable_declarator#Left', 'start', 'Date', 'As', 'Number', '=', 'AST#method_invocation#Left', 'get', 'Value', 'AST#argument_list#Left', '(', 'AST#array_access#Left', 'args', '[', '0', ']', 'AST#array_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'offset', 'In', 'Month', 'As', 'Number', '=', 'AST#cast_expression#Left', '(', 'int', ')', 'AST#method_invocation#Left', 'get', 'Value', 'AST#argument_list#Left', '(', 'AST#array_access#Left', 'args', '[', '1', ']', 'AST#array_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Date', 'AST#variable_declarator#Left', 'start', 'Date', '=', 'AST#method_invocation#Left', 'Date', 'Ut', 'il', '.', 'get', 'Java', 'Date', 'AST#argument_list#Left', '(', 'start', 'Date', 'As', 'Number', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'start', 'Date', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Error', 'E', 'val', '.', 'VALUE', '_', 'IN', 'VAL', 'ID', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'Cal', 'endar', 'AST#variable_declarator#Left', 'cal', 'endar', '=', 'AST#method_invocation#Left', 'Loc', 'ale', 'Ut', 'il', '.', 'get', 'Loc', 'ale', 'Cal', 'endar', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'cal', 'endar', '.', 'set', 'Time', 'AST#argument_list#Left', '(', 'start', 'Date', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'cal', 'endar', '.', 'add', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Cal', 'endar', '.', 'MON', 'TH', 'AST#field_access#Right', ',', 'offset', 'In', 'Month', 'As', 'Number', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Number', 'E', 'val', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Date', 'Ut', 'il', '.', 'get', 'Ex', 'cel', 'Date', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'cal', 'endar', '.', 'get', 'Time', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'E', 'val', 'uation', 'Exception', 'e', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'e', '.', 'get', 'Error', 'E', 'val', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'S', 'ug', 'ges', 'ter', 'Result', 'delete', 'S', 'ug', 'ges', 'ter', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'S', 'ug', 'ges', 'ter', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'S', 'ug', 'ges', 'ter', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'P', 'ip', 'eline', 'Result', 'create', 'P', 'ip', 'eline', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'P', 'ip', 'eline', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'P', 'ip', 'eline', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Stop', 'Delivery', 'Stream', 'Enc', 'ryption', 'Result', 'stop', 'Delivery', 'Stream', 'Enc', 'ryption', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Stop', 'Delivery', 'Stream', 'Enc', 'ryption', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Stop', 'Delivery', 'Stream', 'Enc', 'ryption', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Application', 'Snap', 'shot', 'Result', 'delete', 'Application', 'Snap', 'shot', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Application', 'Snap', 'shot', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Application', 'Snap', 'shot', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Apply', 'Command', 'apply', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Apply', 'Command', 'AST#argument_list#Left', '(', 're', 'po', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Reb', 'oot', 'Cache', 'Cl', 'uster', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'cache', 'Cl', 'uster', 'Id', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#generic_type#Left', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'java', '.', 'util', 'AST#scoped_type_identifier#Right', '.', 'List', 'AST#scoped_type_identifier#Right', 'AST#type_arguments#Left', '<', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'cache', 'Node', 'Id', 's', 'To', 'Reb', 'oot', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Cache', 'Cl', 'uster', 'Id', 'AST#argument_list#Left', '(', 'cache', 'Cl', 'uster', 'Id', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Cache', 'Node', 'Id', 's', 'To', 'Reb', 'oot', 'AST#argument_list#Left', '(', 'cache', 'Node', 'Id', 's', 'To', 'Reb', 'oot', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Mod', 'ify', 'Cache', 'Cl', 'uster', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'cache', 'Cl', 'uster', 'Id', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Cache', 'Cl', 'uster', 'Id', 'AST#argument_list#Left', '(', 'cache', 'Cl', 'uster', 'Id', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'equ', 'als', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'obj', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'this', '==', 'obj', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'obj', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', 'AST#method_invocation#Left', 'obj', '.', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'Score', 'Term', 'AST#variable_declarator#Left', 'other', '=', 'AST#cast_expression#Left', '(', 'Score', 'Term', ')', 'obj', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'term', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'other', '.', 'term', 'AST#field_access#Right', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'else', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'term', '.', 'bytes', 'Equ', 'als', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'other', '.', 'term', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Ass', 'ociate', 'Trans', 'it', 'Gate', 'way', 'Mult', 'ic', 'ast', 'Domain', 'Result', 'ass', 'ociate', 'Trans', 'it', 'Gate', 'way', 'Mult', 'ic', 'ast', 'Domain', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Ass', 'ociate', 'Trans', 'it', 'Gate', 'way', 'Mult', 'ic', 'ast', 'Domain', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Ass', 'ociate', 'Trans', 'it', 'Gate', 'way', 'Mult', 'ic', 'ast', 'Domain', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Contact', 'Result', 'update', 'Contact', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Contact', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Contact', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Table', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Cell', 'Range', 'Address', '8', 'Bit', 'range', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'range', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '6', '_', 'res', '=', '0', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Process', 'ing', 'Job', 'Result', 'create', 'Process', 'ing', 'Job', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Process', 'ing', 'Job', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Process', 'ing', 'Job', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Char', 'Sequ', 'ence', 'sub', 'Sequ', 'ence', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'start', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'end', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'check', 'Start', 'End', 'Rem', 'aining', 'AST#argument_list#Left', '(', 'start', ',', 'end', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'Char', 'Sequ', 'ence', 'Adapter', 'AST#variable_declarator#Left', 'result', '=', 'AST#method_invocation#Left', 'copy', 'AST#argument_list#Left', '(', 'this', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'result', '.', 'position', 'AST#field_access#Right', '=', 'AST#binary_expression#Left', 'position', '+', 'start', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'result', '.', 'limit', 'AST#field_access#Right', '=', 'AST#binary_expression#Left', 'position', '+', 'end', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'result', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Co', 'ip', 'Pool', 'Usage', 'Result', 'get', 'Co', 'ip', 'Pool', 'Usage', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Co', 'ip', 'Pool', 'Usage', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Co', 'ip', 'Pool', 'Usage', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Res', 'olver', 'End', 'point', 'Result', 'update', 'Res', 'olver', 'End', 'point', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Res', 'olver', 'End', 'point', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Res', 'olver', 'End', 'point', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Value', 'E', 'val', 'evaluate', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'src', 'Row', 'Index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'src', 'Column', 'Index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Value', 'E', 'val', 'arg', '0', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Value', 'E', 'val', 've', 'Text', ';', 'AST#local_variable_declaration#Right', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 've', 'Text', '=', 'AST#method_invocation#Left', 'Oper', 'and', 'Res', 'olver', '.', 'get', 'Single', 'Value', 'AST#argument_list#Left', '(', 'arg', '0', ',', 'src', 'Row', 'Index', ',', 'src', 'Column', 'Index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'E', 'val', 'uation', 'Exception', 'e', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'e', '.', 'get', 'Error', 'E', 'val', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 'str', 'Text', '=', 'AST#method_invocation#Left', 'Oper', 'and', 'Res', 'olver', '.', 'co', 'er', 'ce', 'Value', 'To', 'String', 'AST#argument_list#Left', '(', 've', 'Text', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Double', 'AST#variable_declarator#Left', 'result', '=', 'AST#method_invocation#Left', 'con', 'vert', 'Text', 'To', 'Number', 'AST#argument_list#Left', '(', 'str', 'Text', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'result', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'result', '=', 'AST#method_invocation#Left', 'parse', 'Date', 'Time', 'AST#argument_list#Left', '(', 'str', 'Text', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'result', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Error', 'E', 'val', '.', 'VALUE', '_', 'IN', 'VAL', 'ID', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Number', 'E', 'val', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'result', '.', 'double', 'Value', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'add', 'External', 'Name', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'External', 'Name', 'Record', 'rec', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'External', 'Name', 'Record', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'tmp', '=', 'AST#array_creation_expression#Left', 'new', 'External', 'Name', 'Record', 'AST#dimensions_expr#Left', '[', 'AST#binary_expression#Left', 'AST#field_access#Left', '_', 'external', 'Name', 'Rec', 'ords', '.', 'length', 'AST#field_access#Right', '+', '1', 'AST#binary_expression#Right', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'System', '.', 'array', 'copy', 'AST#argument_list#Left', '(', '_', 'external', 'Name', 'Rec', 'ords', ',', '0', ',', 'tmp', ',', '0', ',', 'AST#field_access#Left', '_', 'external', 'Name', 'Rec', 'ords', '.', 'length', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'tmp', '[', 'AST#binary_expression#Left', 'AST#field_access#Left', 'tmp', '.', 'length', 'AST#field_access#Right', '-', '1', 'AST#binary_expression#Right', ']', 'AST#array_access#Right', '=', 'rec', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'external', 'Name', 'Rec', 'ords', '=', 'tmp', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#field_access#Left', '_', 'external', 'Name', 'Rec', 'ords', '.', 'length', 'AST#field_access#Right', '-', '1', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Princ', 'ipal', 'Id', 'Format', 'Result', 'desc', 'ribe', 'Princ', 'ipal', 'Id', 'Format', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Princ', 'ipal', 'Id', 'Format', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Princ', 'ipal', 'Id', 'Format', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Part', 'ner', 'Event', 'Source', 'Account', 's', 'Result', 'list', 'Part', 'ner', 'Event', 'Source', 'Account', 's', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Part', 'ner', 'Event', 'Source', 'Account', 's', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Part', 'ner', 'Event', 'Source', 'Account', 's', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'File', 'get', 'File', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'file', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'on', 'Changed', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'm', 'Se', 'lected', 'Id', 's', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '>', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'cho', 'ose', 'List', 'To', 'Show', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'ens', 'ure', 'Some', 'Group', 'Is', 'Exp', 'anded', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'get', 'Text', 'As', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'this', '.', 'text', 'AST#field_access#Right', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'null', ';', 'AST#return_statement#Right', 'else', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#field_access#Left', 'this', '.', 'text', 'AST#field_access#Right', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Long', 'Buffer', 'put', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'long', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'src', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'src', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'long', 'Count', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Ar', 'rays', '.', 'check', 'Offset', 'And', 'Count', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'src', '.', 'length', 'AST#field_access#Right', ',', 'src', 'Offset', ',', 'long', 'Count', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'long', 'Count', '>', 'AST#method_invocation#Left', 'rem', 'aining', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Buffer', 'Over', 'flow', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', 'src', 'Offset', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#binary_expression#Left', 'src', 'Offset', '+', 'long', 'Count', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', '++', 'i', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'put', 'AST#argument_list#Left', '(', 'AST#array_access#Left', 'src', '[', 'i', ']', 'AST#array_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'AST#marker_annotation#Left', '@', 'Override', 'AST#marker_annotation#Right', 'public', 'AST#modifiers#Right', 'bo', 'olean', 'remove', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'object', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#synchronized_statement#Left', 'syn', 'chron', 'ized', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Copy', 'On', 'Write', 'Array', 'List', '.', 'this', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'index', '=', 'AST#method_invocation#Left', 'index', 'Of', 'AST#argument_list#Left', '(', 'object', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'index', '==', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'remove', 'AST#argument_list#Left', '(', 'index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#synchronized_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'long', 'length', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'on', 'Disk', 'File', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'super', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'on', 'Disk', 'File', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Field', 'Boost', 'Map', 'FC', 'Listener', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Query', 'Config', 'Handler', 'config', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'config', 'AST#field_access#Right', '=', 'config', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Start', 'Activity', 'Stream', 'Result', 'start', 'Activity', 'Stream', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Start', 'Activity', 'Stream', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Start', 'Activity', 'Stream', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Hyp', 'hen', 'ation', 'hyp', 'hen', 'ate', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'word', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'rem', 'ain', 'Char', 'Count', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'push', 'Char', 'Count', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'w', '=', 'AST#method_invocation#Left', 'word', '.', 'to', 'Char', 'Array', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'hyp', 'hen', 'ate', 'AST#argument_list#Left', '(', 'w', ',', '0', ',', 'AST#field_access#Left', 'w', '.', 'length', 'AST#field_access#Right', ',', 'rem', 'ain', 'Char', 'Count', ',', 'push', 'Char', 'Count', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'S', 'ms', 'Template', 'Result', 'create', 'S', 'ms', 'Template', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'S', 'ms', 'Template', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'S', 'ms', 'Template', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'clear', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'n', '=', 'm', 'Size', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'Object', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'values', '=', 'm', 'Values', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'n', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'i', ']', 'AST#array_access#Right', '=', 'null', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'm', 'Size', '=', '0', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'm', 'Gar', 'bage', '=', 'false', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'Tree', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Parser', 'parser', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'long', 'get', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'o', '=', 'AST#binary_expression#Left', 'index', '>>>', '2', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'b', '=', 'AST#binary_expression#Left', 'index', '&', '3', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'shift', '=', 'AST#binary_expression#Left', 'b', '<<', '4', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'o', ']', 'AST#array_access#Right', '>>>', 'shift', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '&', '655', '35', 'L', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Type', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '+', '":', 'Ġ"', 'AST#binary_expression#Right', '+', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Old', 'Id', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '"', 'Ġ"', 'AST#binary_expression#Right', '+', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'New', 'Id', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '"', 'Ġ"', 'AST#binary_expression#Right', '+', 'AST#method_invocation#Left', 'get', 'Ref', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Value', 'E', 'val', 'evaluate', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'src', 'Row', 'Index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'src', 'Column', 'Index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Value', 'E', 'val', 'text', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Value', 'E', 'val', 'number', '_', 'times', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Value', 'E', 'val', 've', 'Text', '1', ';', 'AST#local_variable_declaration#Right', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 've', 'Text', '1', '=', 'AST#method_invocation#Left', 'Oper', 'and', 'Res', 'olver', '.', 'get', 'Single', 'Value', 'AST#argument_list#Left', '(', 'text', ',', 'src', 'Row', 'Index', ',', 'src', 'Column', 'Index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'E', 'val', 'uation', 'Exception', 'e', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'e', '.', 'get', 'Error', 'E', 'val', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 'str', 'Text', '1', '=', 'AST#method_invocation#Left', 'Oper', 'and', 'Res', 'olver', '.', 'co', 'er', 'ce', 'Value', 'To', 'String', 'AST#argument_list#Left', '(', 've', 'Text', '1', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'double', 'AST#variable_declarator#Left', 'number', 'Of', 'Time', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'number', 'Of', 'Time', '=', 'AST#method_invocation#Left', 'Oper', 'and', 'Res', 'olver', '.', 'co', 'er', 'ce', 'Value', 'To', 'Double', 'AST#argument_list#Left', '(', 'number', '_', 'times', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'E', 'val', 'uation', 'Exception', 'e', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Error', 'E', 'val', '.', 'VALUE', '_', 'IN', 'VAL', 'ID', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'number', 'Of', 'Time', 'Int', '=', 'AST#cast_expression#Left', '(', 'int', ')', 'number', 'Of', 'Time', 'AST#cast_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'str', 'b', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'str', 'Text', '1', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '*', 'number', 'Of', 'Time', 'Int', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'number', 'Of', 'Time', 'Int', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'str', 'b', '.', 'append', 'AST#argument_list#Left', '(', 'str', 'Text', '1', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'str', 'b', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '>', '327', '67', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Error', 'E', 'val', '.', 'VALUE', '_', 'IN', 'VAL', 'ID', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'String', 'E', 'val', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'str', 'b', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#generic_type#Left', 'Entry', 'AST#type_arguments#Left', '<', 'K', ',', 'V', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'last', 'Entry', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'imm', 'utable', 'Copy', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'end', 'point', 'AST#argument_list#Left', '(', 'false', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'E', 'val', 'uation', 'Result', 'delete', 'E', 'val', 'uation', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'E', 'val', 'uation', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'E', 'val', 'uation', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Continue', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Input', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'data', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Rem', 'ain', 'der', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Filter', 'Result', 'create', 'Filter', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Filter', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Filter', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Char', 'Sequ', 'ence', 'sub', 'Sequ', 'ence', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'start', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'end', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'check', 'Start', 'End', 'Rem', 'aining', 'AST#argument_list#Left', '(', 'start', ',', 'end', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'Char', 'Buffer', 'AST#variable_declarator#Left', 'result', '=', 'AST#method_invocation#Left', 'du', 'pl', 'icate', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'result', '.', 'limit', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'position', '+', 'end', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'result', '.', 'position', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'position', '+', 'start', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'result', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Tra', 'ffic', 'Mir', 'ror', 'Session', 'Result', 'create', 'Tra', 'ffic', 'Mir', 'ror', 'Session', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Tra', 'ffic', 'Mir', 'ror', 'Session', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Tra', 'ffic', 'Mir', 'ror', 'Session', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Node', 'group', 'Result', 'create', 'Node', 'group', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Node', 'group', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Node', 'group', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'S', 'or', 'ani', 'St', 'em', 'Filter', 'create', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Token', 'Stream', 'input', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'S', 'or', 'ani', 'St', 'em', 'Filter', 'AST#argument_list#Left', '(', 'input', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Custom', 'Ver', 'ification', 'Email', 'Template', 'Result', 'update', 'Custom', 'Ver', 'ification', 'Email', 'Template', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Custom', 'Ver', 'ification', 'Email', 'Template', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Custom', 'Ver', 'ification', 'Email', 'Template', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'Form', 'ula', 'Error', 'for', 'Int', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'type', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'AST#ERROR#Right', 'AST#expression_statement#Left', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#expression_statement#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Form', 'ula', 'Error', 'AST#variable_declarator#Left', 'err', '=', 'AST#method_invocation#Left', 'im', 'ap', '.', 'get', 'AST#argument_list#Left', '(', 'type', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'err', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'err', '=', 'AST#method_invocation#Left', 'b', 'map', '.', 'get', 'AST#argument_list#Left', '(', 'AST#cast_expression#Left', '(', 'byte', ')', 'type', 'AST#cast_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'err', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'Unknown', 'Ġerror', 'Ġtype', ':', 'Ġ"', '+', 'type', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'err', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Sub', 'net', 'Group', 'Result', 'delete', 'Sub', 'net', 'Group', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Sub', 'net', 'Group', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Sub', 'net', 'Group', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Class', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '+', '"', 'Ġ["', 'AST#binary_expression#Right', '+', 'AST#method_invocation#Left', '_', 'error', '.', 'get', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '"]', '"', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Object', 'to', 'Object', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#assert_statement#Left', 'assert', 'AST#binary_expression#Left', 'ex', 'ists', '||', 'AST#binary_expression#Left', '0', '.', '0', 'D', '==', 'value', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ';', 'AST#assert_statement#Right', 'AST#return_statement#Left', 'return', 'AST#ternary_expression#Left', 'ex', 'ists', '?', 'value', ':', 'null', 'AST#ternary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'destroy', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'super', '.', 'destroy', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'on', 'Disk', 'File', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'on', 'Disk', 'File', '.', 'delete', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'on', 'Disk', 'File', '.', 'delete', 'On', 'Exit', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#finally_clause#Left', 'f', 'inally', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'on', 'Disk', 'File', '=', 'null', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#finally_clause#Right', 'AST#try_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Decre', 'ase', 'Repl', 'ication', 'Factor', 'Result', 'dec', 're', 'ase', 'Repl', 'ication', 'Factor', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Decre', 'ase', 'Repl', 'ication', 'Factor', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Decre', 'ase', 'Repl', 'ication', 'Factor', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Count', 'a', 'AST#ERROR#Left', '(', ')', '{', 'AST#ERROR#Right', 'AST#variable_declarator#Left', '_', 'pred', 'icate', '=', 'default', 'Pred', 'icate', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'E', 'val', 'uation', 'Work', 'book', 'get', 'Work', 'book', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', '_', 'work', 'book', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Route', 'T', 'ables', 'Result', 'desc', 'ribe', 'Route', 'T', 'ables', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'desc', 'ribe', 'Route', 'T', 'ables', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Desc', 'ribe', 'Route', 'T', 'ables', 'Request', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Ass', 'essment', 'Template', 'Result', 'create', 'Ass', 'essment', 'Template', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Ass', 'essment', 'Template', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Ass', 'essment', 'Template', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Project', 'Result', 'delete', 'Project', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Project', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Project', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Delete', 'User', 'Policy', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'user', 'Name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'policy', 'Name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'User', 'Name', 'AST#argument_list#Left', '(', 'user', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Policy', 'Name', 'AST#argument_list#Left', '(', 'policy', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Term', 'V', 'ect', 'ors', 'Reader', 'clone', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Comp', 'ressing', 'Term', 'V', 'ect', 'ors', 'Reader', 'AST#argument_list#Left', '(', 'this', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'close', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 's', 'ock', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sch', '.', 'release', 'Session', 'AST#argument_list#Left', '(', 's', 'ock', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#finally_clause#Left', 'f', 'inally', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 's', 'ock', '=', 'null', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#finally_clause#Right', 'AST#try_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Long', 'Buffer', 'put', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'long', 'c', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Read', 'Only', 'Buffer', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'serial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'data', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'LOG', '.', 'log', 'AST#argument_list#Left', '(', 'DEBUG', ',', '"', 'Serial', 'izing', 'ĠWork', 'book', 'Ġwith', 'Ġoffsets', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'pos', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'S', 'ST', 'Record', 'AST#variable_declarator#Left', 'l', 'S', 'ST', '=', 'null', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 's', 'st', 'Pos', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'bo', 'olean', 'AST#variable_declarator#Left', 'wrote', 'Bound', 'She', 'ets', '=', 'false', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'org', '.', 'apache', 'AST#scoped_type_identifier#Right', '.', 'po', 'i', 'AST#scoped_type_identifier#Right', '.', 'h', 'ss', 'f', 'AST#scoped_type_identifier#Right', '.', 'record', 'AST#scoped_type_identifier#Right', '.', 'Record', 'AST#scoped_type_identifier#Right', 'record', ':', 'AST#method_invocation#Left', 'rec', 'ords', '.', 'get', 'Rec', 'ords', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'len', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'record', 'instance', 'of', 'S', 'ST', 'Record', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'l', 'S', 'ST', '=', 'AST#cast_expression#Left', '(', 'S', 'ST', 'Record', ')', 'record', 'AST#cast_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 's', 'st', 'Pos', '=', 'pos', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'record', '.', 'get', 'S', 'id', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', 'AST#field_access#Left', 'Ext', 'S', 'ST', 'Record', '.', 'sid', 'AST#field_access#Right', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'l', 'S', 'ST', '!', '=', 'null', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'record', '=', 'AST#method_invocation#Left', 'l', 'S', 'ST', '.', 'create', 'Ext', 'S', 'ST', 'Record', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 's', 'st', 'Pos', '+', 'offset', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'record', 'instance', 'of', 'Bound', 'She', 'et', 'Record', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'wrote', 'Bound', 'She', 'ets', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#enhanced_for_statement#Left', 'for', '(', 'Bound', 'She', 'et', 'Record', 'bs', 'r', ':', 'b', 'ounds', 'he', 'ets', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'len', '+=', 'AST#method_invocation#Left', 'bs', 'r', '.', 'serial', 'ize', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'pos', '+', 'offset', 'AST#binary_expression#Right', '+', 'len', 'AST#binary_expression#Right', ',', 'data', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'wrote', 'Bound', 'She', 'ets', '=', 'true', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'len', '=', 'AST#method_invocation#Left', 'record', '.', 'serial', 'ize', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'pos', '+', 'offset', 'AST#binary_expression#Right', ',', 'data', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'pos', '+=', 'len', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'LOG', '.', 'log', 'AST#argument_list#Left', '(', 'DEBUG', ',', '"', 'Ex', 'iting', 'Ġserial', 'ize', 'Ġwork', 'book', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'pos', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Cl', 'uster', 'Security', 'G', 'roups', 'Result', 'desc', 'ribe', 'Cl', 'uster', 'Security', 'G', 'roups', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'desc', 'ribe', 'Cl', 'uster', 'Security', 'G', 'roups', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Desc', 'ribe', 'Cl', 'uster', 'Security', 'G', 'roups', 'Request', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Ex', 'plan', 'ation', 'expl', 'ain', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Ex', 'plan', 'ation', 'fre', 'q', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'long', 'norm', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Ex', 'plan', 'ation', '.', 'match', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'score', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'fre', 'q', '.', 'get', 'Value', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'float', 'Value', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'norm', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'score', '(', 'fre', 'q', '="', '+', 'AST#method_invocation#Left', 'fre', 'q', '.', 'get', 'Value', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '"),', 'Ġwith', 'Ġfre', 'q', 'Ġof', ':"', 'AST#binary_expression#Right', ',', 'AST#method_invocation#Left', 'Col', 'lections', '.', 'sing', 'leton', 'AST#argument_list#Left', '(', 'fre', 'q', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Dis', 'ass', 'ociate', 'Phone', 'Number', 'From', 'User', 'Result', 'dis', 'ass', 'ociate', 'Phone', 'Number', 'From', 'User', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Dis', 'ass', 'ociate', 'Phone', 'Number', 'From', 'User', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Dis', 'ass', 'ociate', 'Phone', 'Number', 'From', 'User', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'has', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Any', 'Object', 'Id', 'object', 'Id', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'type', 'H', 'int', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'open', 'AST#argument_list#Left', '(', 'object', 'Id', ',', 'type', 'H', 'int', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'true', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'Missing', 'Object', 'Exception', 'not', 'Found', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'buffer', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"[', 'ATT', 'ACH', 'ED', 'LAB', 'EL', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'format', 'Flags', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '0', 'x', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'to', 'H', 'ex', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Format', 'Flags', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ("', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Format', 'Flags', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ)', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'System', '.', 'get', 'Property', 'AST#argument_list#Left', '(', '"', 'line', '.', 'separ', 'ator', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'show', 'Act', 'ual', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'is', 'Show', 'Act', 'ual', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', "'", '\\', 'n', "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'show', 'Percent', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'is', 'Show', 'Percent', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', "'", '\\', 'n', "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'label', 'As', 'Percent', 'age', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'is', 'Label', 'As', 'Percent', 'age', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', "'", '\\', 'n', "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'sm', 'oot', 'hed', 'Line', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'is', 'Sm', 'oot', 'hed', 'Line', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', "'", '\\', 'n', "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'show', 'Label', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'is', 'Show', 'Label', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', "'", '\\', 'n', "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'show', 'B', 'ub', 'ble', 'S', 'izes', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'is', 'Show', 'B', 'ub', 'ble', 'S', 'izes', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', "'", '\\', 'n', "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', '[/', 'ATT', 'ACH', 'ED', 'LAB', 'EL', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'buffer', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'field', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'buffer', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'span', 'Or', '(', '["', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'Iterator', 'AST#type_arguments#Left', '<', 'Sp', 'an', 'Query', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'i', '=', 'AST#method_invocation#Left', 'cl', 'a', 'uses', '.', 'iterator', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#while_statement#Left', 'while', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'i', '.', 'has', 'Next', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Sp', 'an', 'Query', 'AST#variable_declarator#Left', 'cl', 'ause', '=', 'AST#method_invocation#Left', 'i', '.', 'next', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'cl', 'ause', '.', 'to', 'String', 'AST#argument_list#Left', '(', 'field', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'i', '.', 'has', 'Next', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '",', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#while_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"]', ')"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'buffer', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Disable', 'In', 'sight', 'Rules', 'Result', 'disable', 'In', 'sight', 'Rules', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Disable', 'In', 'sight', 'Rules', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Disable', 'In', 'sight', 'Rules', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Boot', 'strap', 'Action', 'Config', 'new', 'Run', 'If', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'condition', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Boot', 'strap', 'Action', 'Config', 'config', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'args', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'config', '.', 'get', 'Script', 'Boot', 'strap', 'Action', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Args', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'args', '.', 'add', 'AST#argument_list#Left', '(', '0', ',', 'condition', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'args', '.', 'add', 'AST#argument_list#Left', '(', '1', ',', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'config', '.', 'get', 'Script', 'Boot', 'strap', 'Action', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Path', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#object_creation_expression#Left', 'new', 'Boot', 'strap', 'Action', 'Config', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', '.', 'with', 'Name', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'Run', 'ĠIf', ',', 'Ġ"', '+', 'AST#method_invocation#Left', 'config', '.', 'get', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'with', 'Script', 'Boot', 'strap', 'Action', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#object_creation_expression#Left', 'new', 'Script', 'Boot', 'strap', 'Action', 'Config', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', '.', 'with', 'Path', 'AST#argument_list#Left', '(', '"', 's', '3', ':"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'with', 'Args', 'AST#argument_list#Left', '(', 'args', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'Char', 'Buffer', 'get', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'char', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'd', 'st', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'd', 'st', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'char', 'Count', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'Ar', 'rays', '.', 'check', 'Offset', 'And', 'Count', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'd', 'st', '.', 'length', 'AST#field_access#Right', ',', 'd', 'st', 'Offset', ',', 'char', 'Count', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'char', 'Count', '>', 'AST#method_invocation#Left', 'rem', 'aining', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Buffer', 'Under', 'flow', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'new', 'Position', '=', 'AST#binary_expression#Left', 'position', '+', 'char', 'Count', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sequence', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Ch', 'ars', 'AST#argument_list#Left', '(', 'position', ',', 'new', 'Position', ',', 'd', 'st', ',', 'd', 'st', 'Offset', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'position', '=', 'new', 'Position', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#generic_type#Left', 'Set', 'AST#type_arguments#Left', '<', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'get', 'Names', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'section', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'sub', 'section', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'State', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Names', 'AST#argument_list#Left', '(', 'section', ',', 'sub', 'section', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Bro', 'ker', 'Result', 'create', 'Bro', 'ker', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Bro', 'ker', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Bro', 'ker', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'on', 'Abs', 'orb', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'vel', 'ocity', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'm', 'State', '=', 'STATE', '_', 'A', 'BS', 'OR', 'B', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'vel', 'ocity', '=', 'AST#method_invocation#Left', 'Math', '.', 'max', 'AST#argument_list#Left', '(', 'MIN', '_', 'VEL', 'OC', 'ITY', ',', 'AST#method_invocation#Left', 'Math', '.', 'abs', 'AST#argument_list#Left', '(', 'vel', 'ocity', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'm', 'Start', 'Time', '=', 'AST#method_invocation#Left', 'Animation', 'Ut', 'ils', '.', 'current', 'Animation', 'Time', 'Mill', 'is', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'm', 'Duration', '=', 'AST#binary_expression#Left', '0', '.', '1', 'f', '+', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'vel', 'ocity', '*', '0', '.', '03', 'f', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'm', 'Edge', 'Alpha', 'Start', '=', '0', '.', 'f', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'm', 'Edge', 'Scale', 'Y', '=', 'AST#assignment_expression#Left', 'm', 'Edge', 'Scale', 'Y', 'Start', '=', '0', '.', 'f', 'AST#assignment_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'm', 'G', 'low', 'Alpha', 'Start', '=', '0', '.', '5', 'f', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'm', 'G', 'low', 'Scale', 'Y', 'Start', '=', '0', '.', 'f', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'm', 'Edge', 'Alpha', 'Finish', '=', 'AST#method_invocation#Left', 'Math', '.', 'max', 'AST#argument_list#Left', '(', '0', ',', 'AST#method_invocation#Left', 'Math', '.', 'min', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'vel', 'ocity', '*', 'VEL', 'OC', 'ITY', '_', 'ED', 'GE', '_', 'F', 'ACT', 'OR', 'AST#binary_expression#Right', ',', '1', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'm', 'Edge', 'Scale', 'Y', 'Finish', '=', 'AST#method_invocation#Left', 'Math', '.', 'max', 'AST#argument_list#Left', '(', 'H', 'ELD', '_', 'ED', 'GE', '_', 'SC', 'ALE', '_', 'Y', ',', 'AST#method_invocation#Left', 'Math', '.', 'min', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'vel', 'ocity', '*', 'VEL', 'OC', 'ITY', '_', 'ED', 'GE', '_', 'F', 'ACT', 'OR', 'AST#binary_expression#Right', ',', '1', '.', 'f', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'm', 'G', 'low', 'Scale', 'Y', 'Finish', '=', 'AST#method_invocation#Left', 'Math', '.', 'min', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '0', '.', '025', 'f', '+', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'vel', 'ocity', '*', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'vel', 'ocity', '/', '100', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', '*', '0', '.', '0001', '5', 'f', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', ',', '1', '.', '75', 'f', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'm', 'G', 'low', 'Alpha', 'Finish', '=', 'AST#method_invocation#Left', 'Math', '.', 'max', 'AST#argument_list#Left', '(', 'm', 'G', 'low', 'Alpha', 'Start', ',', 'AST#method_invocation#Left', 'Math', '.', 'min', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'vel', 'ocity', '*', 'VEL', 'OC', 'ITY', '_', 'GL', 'OW', '_', 'F', 'ACT', 'OR', 'AST#binary_expression#Right', '*', '.', '0000', '1', 'f', 'AST#binary_expression#Right', ',', 'MAX', '_', 'AL', 'P', 'HA', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Supp', 'ressed', 'Dest', 'inations', 'Result', 'list', 'Supp', 'ressed', 'Dest', 'inations', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Supp', 'ressed', 'Dest', 'inations', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Supp', 'ressed', 'Dest', 'inations', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'AST#generic_type#Left', 'P', 'air', 'AST#type_arguments#Left', '<', 'K', ',', 'V', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'get', 'P', 'airs', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'AST#generic_type#Left', 'P', 'air', 'AST#type_arguments#Left', '<', 'K', ',', 'V', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'p', 'airs', '=', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Array', 'List', 'AST#type_arguments#Left', '<', 'AST#generic_type#Left', 'P', 'air', 'AST#type_arguments#Left', '<', 'K', ',', 'V', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'K', 'key', ':', 'AST#method_invocation#Left', 'key', 'Set', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#block#Left', '{', 'AST#enhanced_for_statement#Left', 'for', '(', 'V', 'value', ':', 'AST#method_invocation#Left', 'get', 'AST#argument_list#Left', '(', 'key', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'p', 'airs', '.', 'add', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'P', 'air', 'AST#type_arguments#Left', '<', 'K', ',', 'V', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', 'key', ',', 'value', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#return_statement#Left', 'return', 'p', 'airs', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Par', 'ams', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'params', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'super', '.', 'set', 'Par', 'ams', 'AST#argument_list#Left', '(', 'params', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'k', '=', 'AST#method_invocation#Left', 'params', '.', 'index', 'Of', 'AST#argument_list#Left', '(', '","', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'name', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'params', '.', 'sub', 'string', 'AST#argument_list#Left', '(', '0', ',', 'k', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'tr', 'im', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'value', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'params', '.', 'sub', 'string', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'k', '+', '1', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'tr', 'im', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'AST#marker_annotation#Left', '@', 'Override', 'AST#marker_annotation#Right', 'public', 'AST#modifiers#Right', 'V', 'put', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'K', 'key', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'V', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'is', 'In', 'B', 'ounds', 'AST#argument_list#Left', '(', 'key', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#method_invocation#Left', 'out', 'Of', 'B', 'ounds', 'AST#argument_list#Left', '(', 'key', ',', 'from', 'Bound', ',', 'to', 'Bound', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'put', 'Internal', 'AST#argument_list#Left', '(', 'key', ',', 'value', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'D', 'ere', 'g', 'ister', 'Image', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'image', 'Id', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Image', 'Id', 'AST#argument_list#Left', '(', 'image', 'Id', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Application', 'Result', 'get', 'Application', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Application', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Application', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Problem', 'Obs', 'erv', 'ations', 'Result', 'desc', 'ribe', 'Problem', 'Obs', 'erv', 'ations', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Problem', 'Obs', 'erv', 'ations', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Problem', 'Obs', 'erv', 'ations', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'fill', 'Field', 's', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'data', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Esc', 'her', 'Record', 'Factory', 'record', 'Factory', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'bytes', 'After', 'Header', '=', 'AST#method_invocation#Left', 'read', 'Header', 'AST#argument_list#Left', '(', 'data', ',', 'offset', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'pos', '=', 'AST#binary_expression#Left', 'offset', '+', 'HEAD', 'ER', '_', 'SIZE', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'System', '.', 'array', 'copy', 'AST#argument_list#Left', '(', 'data', ',', 'pos', ',', 'field', '_', '1', '_', 'UID', ',', '0', ',', '16', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'pos', '+=', '16', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '2', '_', 'mark', 'er', '=', 'AST#array_access#Left', 'data', '[', 'pos', ']', 'AST#array_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'pos', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Picture', 'Data', 'AST#argument_list#Left', '(', 'data', ',', 'pos', ',', 'AST#binary_expression#Left', 'bytes', 'After', 'Header', '-', '17', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'bytes', 'After', 'Header', '+', 'HEAD', 'ER', '_', 'SIZE', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'bo', 'olean', 'ends', 'With', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Bytes', 'Ref', 'ref', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Bytes', 'Ref', 'suff', 'ix', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'start', 'At', '=', 'AST#binary_expression#Left', 'AST#field_access#Left', 'ref', '.', 'length', 'AST#field_access#Right', '-', 'AST#field_access#Left', 'suff', 'ix', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'start', 'At', '<', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'false', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Ar', 'rays', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'ref', '.', 'bytes', 'AST#field_access#Right', ',', 'AST#binary_expression#Left', 'AST#field_access#Left', 'ref', '.', 'offset', 'AST#field_access#Right', '+', 'start', 'At', 'AST#binary_expression#Right', ',', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#field_access#Left', 'ref', '.', 'offset', 'AST#field_access#Right', '+', 'start', 'At', 'AST#binary_expression#Right', '+', 'AST#field_access#Left', 'suff', 'ix', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ',', 'AST#field_access#Left', 'suff', 'ix', '.', 'bytes', 'AST#field_access#Right', ',', 'AST#field_access#Left', 'suff', 'ix', '.', 'offset', 'AST#field_access#Right', ',', 'AST#binary_expression#Left', 'AST#field_access#Left', 'suff', 'ix', '.', 'offset', 'AST#field_access#Right', '+', 'AST#field_access#Left', 'suff', 'ix', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Option', 'Group', 'Result', 'delete', 'Option', 'Group', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Option', 'Group', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Option', 'Group', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'String', 'get', 'From', 'Un', 'ic', 'ode', 'LE', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'string', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'string', '.', 'length', 'AST#field_access#Right', '==', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', '""', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'get', 'From', 'Un', 'ic', 'ode', 'LE', 'AST#argument_list#Left', '(', 'string', ',', '0', ',', 'AST#binary_expression#Left', 'AST#field_access#Left', 'string', '.', 'length', 'AST#field_access#Right', '/', '2', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Cell', 'Range', 'Address', 'List', 'AST#ERROR#Left', '(', ')', '{', 'AST#ERROR#Right', 'AST#variable_declarator#Left', '_', 'list', '=', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Array', 'List', 'AST#type_arguments#Left', '<', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Value', 'E', 'val', 'evaluate', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'Value', 'E', 'val', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'args', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Operation', 'E', 'val', 'uation', 'Context', 'ec', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Not', 'Im', 'ple', 'mented', 'Function', 'Exception', 'AST#argument_list#Left', '(', '_', 'function', 'Name', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Option', 'G', 'roups', 'Result', 'desc', 'ribe', 'Option', 'G', 'roups', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'desc', 'ribe', 'Option', 'G', 'roups', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Desc', 'ribe', 'Option', 'G', 'roups', 'Request', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Disable', 'V', 'pc', 'Classic', 'Link', 'Result', 'disable', 'V', 'pc', 'Classic', 'Link', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Disable', 'V', 'pc', 'Classic', 'Link', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Disable', 'V', 'pc', 'Classic', 'Link', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'buffer', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"[', 'S', 'X', 'ID', 'ST', 'M', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'id', 'st', 'm', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'short', 'To', 'H', 'ex', 'AST#argument_list#Left', '(', 'id', 'st', 'm', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', "'", '\\', 'n', "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', '[/', 'S', 'X', 'ID', 'ST', 'M', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'buffer', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Stack', 'Inst', 'ances', 'Result', 'list', 'Stack', 'Inst', 'ances', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Stack', 'Inst', 'ances', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Stack', 'Inst', 'ances', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Company', 'Network', 'Configuration', 'Result', 'desc', 'ribe', 'Company', 'Network', 'Configuration', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Company', 'Network', 'Configuration', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Company', 'Network', 'Configuration', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'C', 'oder', 'Result', 'flush', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Char', 'Buffer', 'out', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'status', '!', '=', 'END', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'status', '!', '=', 'IN', 'IT', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'State', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'C', 'oder', 'Result', 'AST#variable_declarator#Left', 'result', '=', 'AST#method_invocation#Left', 'impl', 'Fl', 'ush', 'AST#argument_list#Left', '(', 'out', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'result', '==', 'AST#field_access#Left', 'C', 'oder', 'Result', '.', 'UN', 'DER', 'FL', 'OW', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'status', '=', 'FL', 'USH', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'result', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'DB', 'Cl', 'usters', 'Result', 'desc', 'ribe', 'DB', 'Cl', 'usters', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'DB', 'Cl', 'usters', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'DB', 'Cl', 'usters', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Document', 'Version', 'Result', 'get', 'Document', 'Version', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Document', 'Version', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Document', 'Version', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Term', 'Data', 'sub', 't', 'ract', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Term', 'Data', 't', '1', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Term', 'Data', 't', '2', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 't', '2', '==', 'NO', '_', 'OU', 'TP', 'UT', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 't', '1', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'Term', 'Data', 'ret', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'stats', 'E', 'qual', 'AST#argument_list#Left', '(', 't', '1', ',', 't', '2', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '&&', 'AST#method_invocation#Left', 'bytes', 'E', 'qual', 'AST#argument_list#Left', '(', 't', '1', ',', 't', '2', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ret', '=', 'NO', '_', 'OU', 'TP', 'UT', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'ret', '=', 'AST#object_creation_expression#Left', 'new', 'Term', 'Data', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 't', '1', '.', 'bytes', 'AST#field_access#Right', ',', 'AST#field_access#Left', 't', '1', '.', 'doc', 'Fre', 'q', 'AST#field_access#Right', ',', 'AST#field_access#Left', 't', '1', '.', 'total', 'Term', 'Fre', 'q', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'ret', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Mod', 'ify', 'Cap', 'acity', 'Res', 'ervation', 'Result', 'mod', 'ify', 'Cap', 'acity', 'Res', 'ervation', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Mod', 'ify', 'Cap', 'acity', 'Res', 'ervation', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Mod', 'ify', 'Cap', 'acity', 'Res', 'ervation', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'AST#marker_annotation#Left', '@', 'Override', 'AST#marker_annotation#Right', 'public', 'AST#modifiers#Right', 'int', 'size', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#synchronized_statement#Left', 'syn', 'chron', 'ized', 'AST#parenthesized_expression#Left', '(', 'mut', 'ex', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'c', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#synchronized_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'dec', 'ode', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'blocks', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'blocks', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'long', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'values', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'values', 'Offset', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'iter', 'ations', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'j', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'j', '<', 'iter', 'ations', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', '++', 'j', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'values', '[', 'AST#update_expression#Left', 'values', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '=', 'AST#binary_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'AST#update_expression#Left', 'blocks', 'Offset', '++', 'AST#update_expression#Right', ']', 'AST#array_access#Right', '&', '0', 'x', 'FF', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'length', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'Un', 'supported', 'Operation', 'Exception', '{', 'AST#ERROR#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#field_access#Left', 'this', '.', 'type', 'AST#field_access#Right', '==', 'TYPE', '_', 'MAL', 'FORM', 'ED', '_', 'IN', 'PUT', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'AST#field_access#Left', 'this', '.', 'type', 'AST#field_access#Right', '==', 'TYPE', '_', 'UN', 'MAP', 'PA', 'BLE', '_', 'CHAR', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'this', '.', 'length', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Un', 'supported', 'Operation', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'length', 'Ġmeaningless', 'Ġfor', 'Ġ"', '+', 'AST#method_invocation#Left', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'Form', 'ula', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#method_invocation#Left', 'in', 'valid', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'E', 'next', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'iterator', '.', 'next', 'Index', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '<', 'end', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'iterator', '.', 'next', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'No', 'Such', 'Element', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'String', 'to', 'H', 'ex', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'long', 'value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'sb', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', '16', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'write', 'H', 'ex', 'AST#argument_list#Left', '(', 'sb', ',', 'value', ',', '16', ',', '""', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'sb', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'long', 'get', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'o', '=', 'AST#binary_expression#Left', 'index', '>>>', '6', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'b', '=', 'AST#binary_expression#Left', 'index', '&', '63', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'final', 'int', 'AST#variable_declarator#Left', 'shift', '=', 'AST#binary_expression#Left', 'b', '<<', '0', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#array_access#Left', 'blocks', '[', 'o', ']', 'AST#array_access#Right', '>>>', 'shift', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '&', '1', 'L', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#array_type#Left', 'int', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'clear', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'start', '=', 'AST#assignment_expression#Left', 'end', '=', 'null', 'AST#assignment_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'super', '.', 'clear', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Token', 'Stream', 'init', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Token', 'Stream', 'token', 'Stream', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'term', 'Att', '=', 'AST#method_invocation#Left', 'token', 'Stream', '.', 'add', 'Attribute', 'AST#argument_list#Left', '(', 'AST#class_literal#Left', 'Char', 'Term', 'Attribute', '.', 'class', 'AST#class_literal#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'null', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Game', 'Server', 'Group', 'Result', 'update', 'Game', 'Server', 'Group', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Game', 'Server', 'Group', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Game', 'Server', 'Group', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Un', 'm', 'app', 'able', 'Character', 'Exception', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'length', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'input', 'Length', 'AST#field_access#Right', '=', 'length', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Id', 'entity', 'Provider', 'Configuration', 'Result', 'update', 'Id', 'entity', 'Provider', 'Configuration', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Id', 'entity', 'Provider', 'Configuration', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Id', 'entity', 'Provider', 'Configuration', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'AST#marker_annotation#Left', '@', 'Override', 'AST#marker_annotation#Right', 'public', 'AST#modifiers#Right', 'int', 'last', 'Index', 'Of', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'object', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'Object', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'a', '=', 'array', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'object', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', 'AST#binary_expression#Left', 'size', '-', '1', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '>', '=', '0', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '--', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'object', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'AST#array_access#Left', 'a', '[', 'i', ']', 'AST#array_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'i', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', 'AST#binary_expression#Left', 'size', '-', '1', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '>', '=', '0', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '--', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#array_access#Left', 'a', '[', 'i', ']', 'AST#array_access#Right', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'i', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Con', 'stant', 'Score', 'Query', 'Builder', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Query', 'Builder', 'Factory', 'query', 'Factory', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'query', 'Factory', 'AST#field_access#Right', '=', 'query', 'Factory', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'get', 'Number', 'Of', 'On', 'Channel', 'Tokens', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'n', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'fill', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#method_invocation#Left', 't', 'ok', 'ens', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Token', 'AST#variable_declarator#Left', 't', '=', 'AST#method_invocation#Left', 't', 'ok', 'ens', '.', 'get', 'AST#argument_list#Left', '(', 'i', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 't', '.', 'get', 'Channel', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', 'channel', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'n', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 't', '.', 'get', 'Type', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', 'AST#field_access#Left', 'Token', '.', 'EO', 'F', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 'n', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'PO', 'IF', 'SD', 'ocument', 'Path', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'final', 'AST#array_type#Left', 'String', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'comp', 'onents', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'comp', 'onents', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'comp', 'onents', 'AST#field_access#Right', '=', 'AST#array_creation_expression#Left', 'new', 'String', 'AST#dimensions_expr#Left', '[', '0', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'comp', 'onents', 'AST#field_access#Right', '=', 'AST#array_creation_expression#Left', 'new', 'String', 'AST#dimensions_expr#Left', '[', 'AST#field_access#Left', 'comp', 'onents', '.', 'length', 'AST#field_access#Right', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'j', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'j', '<', 'AST#field_access#Left', 'comp', 'onents', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'j', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#array_access#Left', 'comp', 'onents', '[', 'j', ']', 'AST#array_access#Right', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '||', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'AST#array_access#Left', 'comp', 'onents', '[', 'j', ']', 'AST#array_access#Right', '.', 'length', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', '"', 'comp', 'onents', 'Ġcannot', 'Ġcontain', 'Ġnull', 'Ġor', 'Ġempty', 'Ġstrings', '"', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'AST#field_access#Left', 'this', '.', 'comp', 'onents', 'AST#field_access#Right', '[', 'j', ']', 'AST#array_access#Right', '=', 'AST#array_access#Left', 'comp', 'onents', '[', 'j', ']', 'AST#array_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'S', 'Q', 'LE', 'x', 'ception', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'the', 'Reason', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'this', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#ERROR#Left', 'the', 'Reason', ',', 'null', ',', 'AST#ERROR#Right', '0', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Frag', 'ments', 'Result', 'list', 'Frag', 'ments', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'List', 'Frag', 'ments', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'List', 'Frag', 'ments', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Query', 'Builder', 'get', 'Query', 'Builder', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'node', 'Name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'builders', '.', 'get', 'AST#argument_list#Left', '(', 'node', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Directory', 'Result', 'create', 'Directory', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Directory', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Directory', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'get', 'External', 'She', 'et', 'Index', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'work', 'book', 'Name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'sheet', 'Name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Or', 'Create', 'Link', 'Table', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'External', 'She', 'et', 'Index', 'AST#argument_list#Left', '(', 'work', 'book', 'Name', ',', 'sheet', 'Name', ',', 'sheet', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'V', 'get', 'Value', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'value', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'K', 'get', 'Key', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'key', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'has', 'Trans', 'parent', 'B', 'ounds', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'trans', 'parent', 'B', 'ounds', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Keep', 'Empty', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'bo', 'olean', 'empty', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'keep', 'Empty', '=', 'empty', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'X', 'Path', 'Rule', 'Any', 'where', 'Element', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'rule', 'Name', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'rule', 'Index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'rule', 'Name', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'rule', 'Index', 'AST#field_access#Right', '=', 'rule', 'Index', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'get', 'Height', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', '_', 'height', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'void', 'write', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Open', 'String', 'Builder', 'arr', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'write', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'arr', '.', 'buf', 'AST#field_access#Right', ',', '0', ',', 'len', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'jump', 'Draw', 'ables', 'To', 'Current', 'State', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'super', '.', 'jump', 'Draw', 'ables', 'To', 'Current', 'State', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'm', 'Th', 'umb', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'm', 'Th', 'umb', '.', 'jump', 'To', 'Current', 'State', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Par', 'ams', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'params', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'super', '.', 'set', 'Par', 'ams', 'AST#argument_list#Left', '(', 'params', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'final', 'Stream', 'Token', 'izer', 'AST#variable_declarator#Left', 'st', 'ok', '=', 'AST#object_creation_expression#Left', 'new', 'Stream', 'Token', 'izer', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'String', 'Reader', 'AST#argument_list#Left', '(', 'params', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'st', 'ok', '.', 'quote', 'Char', 'AST#argument_list#Left', '(', '\'"', "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'st', 'ok', '.', 'quote', 'Char', 'AST#argument_list#Left', '(', "'", '\\', "''", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'st', 'ok', '.', 'e', 'ol', 'Is', 'Sign', 'ificant', 'AST#argument_list#Left', '(', 'false', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'st', 'ok', '.', 'ordinary', 'Char', 'AST#argument_list#Left', '(', "','", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#try_statement#Left', 'try', 'AST#block#Left', '{', 'AST#while_statement#Left', 'while', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'st', 'ok', '.', 'next', 'Token', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '!', '=', 'AST#field_access#Left', 'Stream', 'Token', 'izer', '.', 'TT', '_', 'EO', 'F', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#switch_expression#Left', 'switch', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'st', 'ok', '.', 't', 'type', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', 'AST#switch_block#Left', '{', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', "','", 'AST#switch_label#Right', ':', 'AST#block#Left', '{', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', '}', 'AST#block#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', "'", '\\', "''", 'AST#switch_label#Right', ':', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', "'", '\\"', "'", 'AST#switch_label#Right', ':', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'AST#field_access#Left', 'Stream', 'Token', 'izer', '.', 'TT', '_', 'W', 'ORD', 'AST#field_access#Right', 'AST#switch_label#Right', ':', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'analy', 'zer', 'Names', '.', 'add', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'st', 'ok', '.', 's', 'val', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', '}', 'AST#block#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'default', ':', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Runtime', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', '"', 'U', 'nexpected', 'Ġtoken', ':', 'Ġ"', '+', 'AST#method_invocation#Left', 'st', 'ok', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#switch_block_statement_group#Right', '}', 'AST#switch_block#Right', 'AST#switch_expression#Right', '}', 'AST#block#Right', 'AST#while_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'Runtime', 'Exception', 'e', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'e', '.', 'get', 'Message', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'st', 'arts', 'With', 'AST#argument_list#Left', '(', '"', 'Line', 'Ġ#', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'e', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Runtime', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'Line', 'Ġ#', '"', '+', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'st', 'ok', '.', 'lin', 'eno', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '+', 'AST#method_invocation#Left', 'get', 'Al', 'g', 'Line', 'Num', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', '+', '":', 'Ġ"', 'AST#binary_expression#Right', ',', 'e', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#catch_clause#Left', 'catch', '(', 'AST#catch_formal_parameter#Left', 'Throw', 'able', 't', 'AST#catch_formal_parameter#Right', ')', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Runtime', 'Exception', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'Line', 'Ġ#', '"', '+', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'st', 'ok', '.', 'lin', 'eno', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '+', 'AST#method_invocation#Left', 'get', 'Al', 'g', 'Line', 'Num', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', '+', '":', 'Ġ"', 'AST#binary_expression#Right', ',', 't', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#catch_clause#Right', 'AST#try_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Vol', 'umes', 'Result', 'desc', 'ribe', 'Vol', 'umes', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Vol', 'umes', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Vol', 'umes', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Flow', 'Log', 's', 'Result', 'desc', 'ribe', 'Flow', 'Log', 's', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Flow', 'Log', 's', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Flow', 'Log', 's', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Method', 'Result', 'update', 'Method', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Method', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Method', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Author', 'ization', 'Token', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'cr', '"', ',', '"', '2016', '-', '06', '-', '07', '"', ',', '"', 'Get', 'Author', 'ization', 'Token', '"', ',', '"', 'cr', '"', ')', ';', 'AST#ERROR#Right', 'set', 'U', 'ri', 'Pattern', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', '"', '/', 't', 'ok', 'ens', '"', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Method', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Method', 'Type', '.', 'GET', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Stop', 'Contact', 'Result', 'stop', 'Contact', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Stop', 'Contact', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Stop', 'Contact', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Data', 'Set', 'Result', 'create', 'Data', 'Set', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Data', 'Set', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Data', 'Set', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Object', 'Database', 'new', 'C', 'ached', 'Database', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'J', 'ourney', 'Result', 'create', 'J', 'ourney', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'J', 'ourney', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'J', 'ourney', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'Dash', 'boards', 'Result', 'delete', 'Dash', 'boards', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'Dash', 'boards', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'Dash', 'boards', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Upgrade', 'Index', 'Mer', 'ge', 'Policy', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Mer', 'ge', 'Policy', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'in', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Health', 'Check', 'Count', 'Result', 'get', 'Health', 'Check', 'Count', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Health', 'Check', 'Count', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Health', 'Check', 'Count', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Chart', 'Start', 'Block', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Input', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'rt', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'gr', 'bit', 'Fr', 't', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'i', 'Object', 'Kind', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'i', 'Object', 'Context', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'i', 'Object', 'Instance', '1', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'i', 'Object', 'Instance', '2', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Series', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Input', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '1', '_', 'category', 'Data', 'Type', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '2', '_', 'values', 'Data', 'Type', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '3', '_', 'num', 'C', 'ategories', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '4', '_', 'num', 'Values', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '5', '_', 'bub', 'ble', 'Series', 'Type', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'field', '_', '6', '_', 'num', 'B', 'ub', 'ble', 'Values', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'AST#generic_type#Left', 'Class', 'AST#type_arguments#Left', '<', 'AST#wildcard#Left', '?', 'ext', 'ends', 'Char', 'Filter', 'Factory', 'AST#wildcard#Right', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'look', 'up', 'Class', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'loader', '.', 'look', 'up', 'Class', 'AST#argument_list#Left', '(', 'name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Public', 'Key', 'Result', 'get', 'Public', 'Key', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Public', 'Key', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Public', 'Key', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Local', 'Gate', 'way', 'Route', 'Table', 'V', 'pc', 'Ass', 'ociation', 'Result', 'create', 'Local', 'Gate', 'way', 'Route', 'Table', 'V', 'pc', 'Ass', 'ociation', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Local', 'Gate', 'way', 'Route', 'Table', 'V', 'pc', 'Ass', 'ociation', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Local', 'Gate', 'way', 'Route', 'Table', 'V', 'pc', 'Ass', 'ociation', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'bo', 'olean', 'to', 'Boo', 'lean', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'string', 'Value', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'string', 'Value', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Null', 'Po', 'inter', 'Exception', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'AST#method_invocation#Left', 'J', 'G', 'it', 'Text', '.', 'get', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'expected', 'Boo', 'lean', 'String', 'Value', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'final', 'Boo', 'lean', 'AST#variable_declarator#Left', 'bool', '=', 'AST#method_invocation#Left', 'to', 'Boo', 'lean', 'Or', 'Null', 'AST#argument_list#Left', '(', 'string', 'Value', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'bool', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'Arg', 'ument', 'Exception', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Message', 'Format', '.', 'format', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'AST#method_invocation#Left', 'J', 'G', 'it', 'Text', '.', 'get', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'not', 'AB', 'oo', 'lean', 'AST#field_access#Right', ',', 'string', 'Value', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'bool', '.', 'bo', 'olean', 'Value', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#generic_type#Left', 'Set', 'AST#type_arguments#Left', '<', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'get', 'Added', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Col', 'lections', '.', 'un', 'mod', 'ifiable', 'Set', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'diff', '.', 'get', 'Added', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#generic_type#Left', 'Set', 'AST#type_arguments#Left', '<', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'get', 'Names', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'section', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'get', 'Names', 'AST#argument_list#Left', '(', 'section', ',', 'null', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Cache', 'Cl', 'usters', 'Result', 'desc', 'ribe', 'Cache', 'Cl', 'usters', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Cache', 'Cl', 'usters', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Cache', 'Cl', 'usters', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'String', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'get', 'Un', 'mer', 'ged', 'Path', 's', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'un', 'mer', 'ged', 'Path', 's', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Value', 'E', 'val', 'evaluate', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'Value', 'E', 'val', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'args', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Operation', 'E', 'val', 'uation', 'Context', 'ec', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'args', '.', 'length', 'AST#field_access#Right', '!', '=', '2', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'Error', 'E', 'val', '.', 'VALUE', '_', 'IN', 'VAL', 'ID', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'evaluate', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'ec', '.', 'get', 'Row', 'Index', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#method_invocation#Left', 'ec', '.', 'get', 'Column', 'Index', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'AST#array_access#Left', 'args', '[', '0', ']', 'AST#array_access#Right', ',', 'AST#array_access#Left', 'args', '[', '1', ']', 'AST#array_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'add', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Un', 'ic', 'ode', 'String', 'string', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'field', '_', '1', '_', 'num', '_', 'strings', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#local_variable_declaration#Left', 'Un', 'ic', 'ode', 'String', 'AST#variable_declarator#Left', 'uc', 's', '=', 'AST#ternary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'string', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '?', 'EMP', 'TY', '_', 'STR', 'ING', ':', 'string', 'AST#ternary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'r', 'val', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'index', '=', 'AST#method_invocation#Left', 'field', '_', '3', '_', 'strings', '.', 'get', 'Index', 'AST#argument_list#Left', '(', 'uc', 's', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'index', '!', '=', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'r', 'val', '=', 'index', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'r', 'val', '=', 'AST#method_invocation#Left', 'field', '_', '3', '_', 'strings', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'field', '_', '2', '_', 'num', '_', 'unique', '_', 'strings', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'S', 'ST', 'Des', 'erial', 'izer', '.', 'add', 'To', 'String', 'Table', 'AST#argument_list#Left', '(', 'field', '_', '3', '_', 'strings', ',', 'uc', 's', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'r', 'val', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'long', 'get', 'Delta', 'Search', 'Memory', 'Limit', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'd', 'elta', 'Search', 'Memory', 'Limit', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#binary_expression#Left', '"', 'Token', '(', '\\"', '"', '+', 'AST#object_creation_expression#Left', 'new', 'String', 'AST#argument_list#Left', '(', 'surface', 'Form', ',', 'offset', ',', 'length', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#binary_expression#Right', '+', '"', '\\"', 'Ġpos', '="', 'AST#binary_expression#Right', '+', 'position', 'AST#binary_expression#Right', '+', '"', 'Ġlength', '="', 'AST#binary_expression#Right', '+', 'length', 'AST#binary_expression#Right', '+', '"', 'Ġpos', 'Len', '="', 'AST#binary_expression#Right', '+', 'position', 'Length', 'AST#binary_expression#Right', '+', '"', 'Ġtype', '="', 'AST#binary_expression#Right', '+', 'type', 'AST#binary_expression#Right', '+', '"', 'Ġword', 'Id', '="', 'AST#binary_expression#Right', '+', 'word', 'Id', 'AST#binary_expression#Right', '+', '"', 'Ġleft', 'ID', '="', 'AST#binary_expression#Right', '+', 'AST#method_invocation#Left', 'd', 'ictionary', '.', 'get', 'Left', 'Id', 'AST#argument_list#Left', '(', 'word', 'Id', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', '+', '")', '"', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'Form', 'ula', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Form', 'ula', 'R', 'end', 'ering', 'Work', 'book', 'book', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Ex', 'tern', 'She', 'et', 'Name', 'Res', 'olver', '.', 'pre', 'pend', 'She', 'et', 'Name', 'AST#argument_list#Left', '(', 'book', ',', 'field', '_', '1', '_', 'index', '_', 'ex', 'tern', '_', 'sheet', ',', 'AST#method_invocation#Left', 'format', 'Reference', 'As', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'E', 'get', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#cast_expression#Left', '(', 'E', ')', 'AST#array_access#Left', 'e', 'lements', '[', 'index', ']', 'AST#array_access#Right', 'AST#cast_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'get', 'C', 'ached', 'Bytes', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'data', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Connect', 'ions', 'Result', 'desc', 'ribe', 'Connect', 'ions', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'desc', 'ribe', 'Connect', 'ions', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Desc', 'ribe', 'Connect', 'ions', 'Request', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'ens', 'ure', 'Cap', 'acity', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'minimum', 'Cap', 'acity', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'Object', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'a', '=', 'array', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'a', '.', 'length', 'AST#field_access#Right', '<', 'minimum', 'Cap', 'acity', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'Object', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'new', 'Array', '=', 'AST#array_creation_expression#Left', 'new', 'Object', 'AST#dimensions_expr#Left', '[', 'minimum', 'Cap', 'acity', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'System', '.', 'array', 'copy', 'AST#argument_list#Left', '(', 'a', ',', '0', ',', 'new', 'Array', ',', '0', ',', 'size', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'array', '=', 'new', 'Array', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'mod', 'Count', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'L', 'if', 'ecycle', 'H', 'ook', 'Result', 'delete', 'L', 'if', 'ecycle', 'H', 'ook', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'L', 'if', 'ecycle', 'H', 'ook', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'L', 'if', 'ecycle', 'H', 'ook', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'float', 'max', 'Bytes', 'Per', 'Char', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'max', 'Bytes', 'Per', 'Char', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Bl', 'ank', 'Cell', 'Rect', 'angle', 'Group', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'first', 'Row', 'Index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'first', 'Column', 'Index', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'int', 'last', 'Column', 'Index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'first', 'Row', 'Index', '=', 'first', 'Row', 'Index', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'first', 'Column', 'Index', '=', 'first', 'Column', 'Index', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'last', 'Column', 'Index', '=', 'last', 'Column', 'Index', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', '_', 'last', 'Row', 'Index', '=', 'first', 'Row', 'Index', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'find', 'End', 'Of', 'Row', 'Out', 'line', 'Group', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'row', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'level', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Row', 'AST#argument_list#Left', '(', 'row', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Out', 'line', 'Level', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'current', 'Row', ';', 'AST#local_variable_declaration#Right', 'AST#for_statement#Left', 'for', '(', 'AST#assignment_expression#Left', 'current', 'Row', '=', 'row', 'AST#assignment_expression#Right', ';', 'AST#binary_expression#Left', 'current', 'Row', '<', 'AST#method_invocation#Left', 'get', 'Last', 'Row', 'Num', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'current', 'Row', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'get', 'Row', 'AST#argument_list#Left', '(', 'current', 'Row', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', 'null', 'AST#binary_expression#Right', '||', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Row', 'AST#argument_list#Left', '(', 'current', 'Row', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Out', 'line', 'Level', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '<', 'level', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#return_statement#Left', 'return', 'AST#binary_expression#Left', 'current', 'Row', '-', '1', 'AST#binary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'get', 'Enc', 'oding', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'enc', 'oder', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'null', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Hist', 'orical', 'Ch', 'ars', 'et', 'Names', '.', 'get', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'enc', 'oder', '.', 'ch', 'ars', 'et', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'clear', 'All', 'C', 'ached', 'Result', 'Values', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', '_', 'cache', '.', 'clear', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', '_', 'sheet', 'Index', 'es', 'By', 'She', 'et', '.', 'clear', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', '_', 'work', 'book', '.', 'clear', 'All', 'C', 'ached', 'Result', 'Values', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'final', 'AST#modifiers#Right', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'sb', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'String', 'AST#variable_declarator#Left', 'record', 'Name', '=', 'AST#method_invocation#Left', 'get', 'Record', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', '["', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'record', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"]', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'row', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'short', 'To', 'H', 'ex', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Row', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'col', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'short', 'To', 'H', 'ex', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Column', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'is', 'B', 'iff', '2', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'cell', 'att', 'rs', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'short', 'To', 'H', 'ex', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Cell', 'Att', 'rs', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'xf', 'index', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'short', 'To', 'H', 'ex', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'X', 'F', 'Index', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'append', 'Value', 'Text', 'AST#argument_list#Left', '(', 'sb', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', '[/', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'record', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"]', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'sb', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'DB', 'Cl', 'uster', 'End', 'points', 'Result', 'desc', 'ribe', 'DB', 'Cl', 'uster', 'End', 'points', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'DB', 'Cl', 'uster', 'End', 'points', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'DB', 'Cl', 'uster', 'End', 'points', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'bo', 'olean', 'ren', 'ame', 'To', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'final', 'String', 'new', 'Name', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'bo', 'olean', 'AST#variable_declarator#Left', 'r', 'val', '=', 'false', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'is', 'Root', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'r', 'val', '=', 'AST#method_invocation#Left', '_', 'parent', '.', 'change', 'Name', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'new', 'Name', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'r', 'val', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Ex', 'plan', 'ation', 'expl', 'ain', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Ex', 'plan', 'ation', 'fre', 'q', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'long', 'norm', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'Ex', 'plan', 'ation', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'sub', 's', '=', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Array', 'List', 'AST#type_arguments#Left', '<', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'Sim', 'Sc', 'orer', 'sub', 'Sc', 'orer', ':', 'sub', 'Score', 'rs', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'sub', 's', '.', 'add', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'sub', 'Sc', 'orer', '.', 'expl', 'ain', 'AST#argument_list#Left', '(', 'fre', 'q', ',', 'norm', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Ex', 'plan', 'ation', '.', 'match', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'score', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'fre', 'q', '.', 'get', 'Value', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'float', 'Value', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', 'norm', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ',', '"', 'sum', 'Ġof', ':"', ',', 'sub', 's', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Doc', 'Ter', 'ms', 'Index', 'Doc', 'Values', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Value', 'Source', 'vs', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Le', 'af', 'Reader', 'Context', 'context', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'field', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', 'AST#ERROR#Right', 'AST#block#Left', '{', 'this', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'vs', 'AST#ERROR#Left', ',', 'open', 'AST#ERROR#Right', 'AST#argument_list#Left', '(', 'context', ',', 'field', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'int', 'comp', 'are', 'To', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Ref', 'o', '1', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Ref', 'o', '2', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'o', '1', '.', 'get', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'comp', 'are', 'To', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'o', '2', '.', 'get', 'Name', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Dim', 'ension', 'get', 'Image', 'Dim', 'ension', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Internal', 'Work', 'book', 'AST#variable_declarator#Left', 'iw', 'b', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'get', 'Pat', 'ri', 'arch', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'She', 'et', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Work', 'book', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Work', 'book', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Esc', 'her', 'BS', 'ER', 'ec', 'ord', 'AST#variable_declarator#Left', 'b', 'se', '=', 'AST#method_invocation#Left', 'iw', 'b', '.', 'get', 'BS', 'ER', 'ec', 'ord', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'get', 'Picture', 'Index', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'AST#array_type#Left', 'byte', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'AST#variable_declarator#Left', 'data', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'b', 'se', '.', 'get', 'Bl', 'ip', 'Record', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'get', 'Pict', 'ured', 'ata', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'type', '=', 'AST#method_invocation#Left', 'b', 'se', '.', 'get', 'Bl', 'ip', 'Type', 'Win', '32', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'Image', 'Ut', 'ils', '.', 'get', 'Image', 'Dim', 'ension', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'Byte', 'Array', 'Input', 'Stream', 'AST#argument_list#Left', '(', 'data', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ',', 'type', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'double', 'var', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'double', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'v', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'double', 'AST#variable_declarator#Left', 'r', '=', 'AST#field_access#Left', 'Double', '.', 'Na', 'N', 'AST#field_access#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#binary_expression#Left', 'v', '!', '=', 'null', 'AST#binary_expression#Right', '&&', 'AST#binary_expression#Left', 'AST#field_access#Left', 'v', '.', 'length', 'AST#field_access#Right', '>', '1', 'AST#binary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'r', '=', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'dev', 'sq', 'AST#argument_list#Left', '(', 'v', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '/', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#field_access#Left', 'v', '.', 'length', 'AST#field_access#Right', '-', '1', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#binary_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'r', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Update', 'Cloud', 'Front', 'Origin', 'Access', 'Id', 'entity', 'Request', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Cloud', 'Front', 'Origin', 'Access', 'Id', 'entity', 'Config', 'cloud', 'Front', 'Origin', 'Access', 'Id', 'entity', 'Config', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'id', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'String', 'if', 'Match', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Cloud', 'Front', 'Origin', 'Access', 'Id', 'entity', 'Config', 'AST#argument_list#Left', '(', 'cloud', 'Front', 'Origin', 'Access', 'Id', 'entity', 'Config', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Id', 'AST#argument_list#Left', '(', 'id', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'If', 'Match', 'AST#argument_list#Left', '(', 'if', 'Match', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Diff', 'Command', 'set', 'Dest', 'ination', 'Pref', 'ix', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'dest', 'ination', 'Pref', 'ix', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'dest', 'ination', 'Pref', 'ix', 'AST#field_access#Right', '=', 'dest', 'ination', 'Pref', 'ix', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'available', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', '{', 'AST#ERROR#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'I', 'o', 'Bridge', '.', 'available', 'AST#argument_list#Left', '(', 'fd', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'final', 'public', 'AST#modifiers#Right', 'S', 'r', 'nd', 'Query', 'Not', 'Query', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'AST#ERROR#Right', 'AST#expression_statement#Left', 'Par', 'se', 'Exception', 'AST#expression_statement#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'S', 'r', 'nd', 'Query', 'q', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'Array', 'List', 'AST#type_arguments#Left', '<', 'S', 'r', 'nd', 'Query', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'qu', 'eries', '=', 'null', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Token', 'AST#variable_declarator#Left', 'op', 'rt', '=', 'null', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'q', '=', 'AST#method_invocation#Left', 'N', 'Query', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#labeled_statement#Left', 'label', '_', '4', ':', 'AST#while_statement#Left', 'while', 'AST#parenthesized_expression#Left', '(', 'true', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#switch_expression#Left', 'switch', 'AST#parenthesized_expression#Left', '(', 'AST#ternary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'jj', '_', 'nt', 'k', '==', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '?', 'AST#method_invocation#Left', 'jj', '_', 'nt', 'k', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ':', 'jj', '_', 'nt', 'k', 'AST#ternary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#switch_block#Left', '{', 'AST#switch_block_statement_group#Left', 'AST#switch_label#Left', 'case', 'NOT', 'AST#switch_label#Right', ':', ';', 'AST#break_statement#Left', 'break', ';', 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', 'AST#switch_block_statement_group#Left', 'default', ':', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#array_access#Left', 'jj', '_', 'la', '1', '[', '2', ']', 'AST#array_access#Right', '=', 'jj', '_', 'gen', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#break_statement#Left', 'break', 'label', '_', '4', ';', 'AST#break_statement#Right', 'AST#switch_block_statement_group#Right', '}', 'AST#switch_block#Right', 'AST#switch_expression#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'op', 'rt', '=', 'AST#method_invocation#Left', 'jj', '_', 'cons', 'ume', '_', 'token', 'AST#argument_list#Left', '(', 'NOT', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'qu', 'eries', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'qu', 'eries', '=', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Array', 'List', 'AST#type_arguments#Left', '<', 'S', 'r', 'nd', 'Query', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'qu', 'eries', '.', 'add', 'AST#argument_list#Left', '(', 'q', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'q', '=', 'AST#method_invocation#Left', 'N', 'Query', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'qu', 'eries', '.', 'add', 'AST#argument_list#Left', '(', 'q', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#while_statement#Right', 'AST#labeled_statement#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'true', ')', 'AST#parenthesized_expression#Right', 'AST#return_statement#Left', 'return', 'AST#ternary_expression#Left', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'qu', 'eries', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', '?', 'q', ':', 'AST#method_invocation#Left', 'get', 'Not', 'Query', 'AST#argument_list#Left', '(', 'qu', 'eries', ',', 'op', 'rt', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#ternary_expression#Right', ';', 'AST#return_statement#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Error', 'AST#argument_list#Left', '(', '"', 'Missing', 'Ġreturn', 'Ġstatement', 'Ġin', 'Ġfunction', '"', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'sb', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', "'", "['", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', 'US', 'ERS', 'VIEW', 'END', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"]', 'Ġ(', '0', 'x', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'Integer', '.', 'to', 'H', 'ex', 'String', 'AST#argument_list#Left', '(', 'sid', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'to', 'U', 'pper', 'Case', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Loc', 'ale', '.', 'RO', 'OT', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '")', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġraw', 'Data', '="', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'to', 'H', 'ex', 'AST#argument_list#Left', '(', '_', 'raw', 'Data', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'sb', '.', 'append', 'AST#argument_list#Left', '(', '"', '[/', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', 'US', 'ERS', 'VIEW', 'END', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"]', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'sb', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Float', 'Buffer', 'as', 'Read', 'Only', 'Buffer', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Float', 'To', 'Byte', 'Buffer', 'Adapter', 'AST#variable_declarator#Left', 'buf', '=', 'AST#object_creation_expression#Left', 'new', 'Float', 'To', 'Byte', 'Buffer', 'Adapter', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'byte', 'Buffer', '.', 'as', 'Read', 'Only', 'Buffer', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'buf', '.', 'limit', 'AST#field_access#Right', '=', 'limit', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'buf', '.', 'position', 'AST#field_access#Right', '=', 'position', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'buf', '.', 'mark', 'AST#field_access#Right', '=', 'mark', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'AST#field_access#Left', 'buf', '.', 'byte', 'Buffer', 'AST#field_access#Right', '.', 'order', 'AST#field_access#Right', '=', 'AST#field_access#Left', 'byte', 'Buffer', '.', 'order', 'AST#field_access#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'buf', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Log', 'Command', 'log', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Log', 'Command', 'AST#argument_list#Left', '(', 're', 'po', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Domain', 'Result', 'create', 'Domain', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Create', 'Domain', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Create', 'Domain', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'get', 'Weight', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'WE', 'IGHT', '_', 'UN', 'KNOWN', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Chart', 'Start', 'Object', 'Record', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Record', 'Input', 'Stream', 'in', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'rt', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'gr', 'bit', 'Fr', 't', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'i', 'Object', 'Kind', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'i', 'Object', 'Context', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'i', 'Object', 'Instance', '1', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'i', 'Object', 'Instance', '2', '=', 'AST#method_invocation#Left', 'in', '.', 'read', 'Short', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'remove', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'last', 'Return', 'ed', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Il', 'legal', 'State', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#field_access#Left', 'Con', 'current', 'Hash', 'Map', '.', 'this', 'AST#field_access#Right', '.', 'remove', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'last', 'Return', 'ed', '.', 'key', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'last', 'Return', 'ed', '=', 'null', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Met', 'ric', 'Collection', 'Types', 'Result', 'desc', 'ribe', 'Met', 'ric', 'Collection', 'Types', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Met', 'ric', 'Collection', 'Types', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Met', 'ric', 'Collection', 'Types', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Field', 'Level', 'Enc', 'ryption', 'Profile', 'Result', 'update', 'Field', 'Level', 'Enc', 'ryption', 'Profile', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Field', 'Level', 'Enc', 'ryption', 'Profile', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Field', 'Level', 'Enc', 'ryption', 'Profile', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Ref', 'get', 'Le', 'af', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'this', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'last', 'Index', 'Of', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Object', 'object', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'object', '!', '=', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', 'AST#binary_expression#Left', 'AST#field_access#Left', 'a', '.', 'length', 'AST#field_access#Right', '-', '1', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '>', '=', '0', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '--', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#method_invocation#Left', 'object', '.', 'equ', 'als', 'AST#argument_list#Left', '(', 'AST#array_access#Left', 'a', '[', 'i', ']', 'AST#array_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'i', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'else', 'AST#block#Left', '{', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', 'AST#binary_expression#Left', 'AST#field_access#Left', 'a', '.', 'length', 'AST#field_access#Right', '-', '1', 'AST#binary_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '>', '=', '0', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '--', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#array_access#Left', 'a', '[', 'i', ']', 'AST#array_access#Right', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'i', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'Default', 'B', 'ulk', 'Sc', 'orer', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Sc', 'orer', 'sc', 'orer', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'sc', 'orer', '==', 'null', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'Null', 'Po', 'inter', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'sc', 'orer', 'AST#field_access#Right', '=', 'sc', 'orer', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'iterator', 'AST#field_access#Right', '=', 'AST#method_invocation#Left', 'sc', 'orer', '.', 'iterator', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'two', 'Phase', 'AST#field_access#Right', '=', 'AST#method_invocation#Left', 'sc', 'orer', '.', 'two', 'Phase', 'Iterator', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Rep', 'o', 'Author', 'ization', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'cr', '"', ',', '"', '2016', '-', '06', '-', '07', '"', ',', '"', 'Create', 'Rep', 'o', 'Author', 'ization', '"', ',', '"', 'cr', '"', ')', ';', 'AST#ERROR#Right', 'set', 'U', 'ri', 'Pattern', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', '"', '/', 're', 'pos', '/', '[', 'Rep', 'o', 'Names', 'pace', ']', '/', '[', 'Rep', 'o', 'Name', ']', '/', 'author', 'izations', '"', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'set', 'Method', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'Method', 'Type', '.', 'PUT', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Token', 'Stream', 'create', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Token', 'Stream', 'input', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Port', 'ug', 'uese', 'Light', 'St', 'em', 'Filter', 'AST#argument_list#Left', '(', 'input', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'buffer', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"[', 'TA', 'BL', 'EST', 'Y', 'LES', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'rt', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'short', 'To', 'H', 'ex', 'AST#argument_list#Left', '(', 'rt', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', "'", '\\', 'n', "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'gr', 'bit', 'Fr', 't', '="', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'short', 'To', 'H', 'ex', 'AST#argument_list#Left', '(', 'gr', 'bit', 'Fr', 't', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', "'", '\\', 'n', "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'un', 'used', 'Ġ', 'Ġ=', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'to', 'H', 'ex', 'AST#argument_list#Left', '(', 'un', 'used', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', "'", '\\', 'n', "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'ct', 's', '="', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'H', 'ex', 'D', 'ump', '.', 'int', 'To', 'H', 'ex', 'AST#argument_list#Left', '(', 'ct', 's', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', "'", '\\', 'n', "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'rg', 'ch', 'Def', 'List', 'Style', '="', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'rg', 'ch', 'Def', 'List', 'Style', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', "'", '\\', 'n', "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'rg', 'ch', 'Def', 'P', 'ivot', 'Style', '="', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'rg', 'ch', 'Def', 'P', 'ivot', 'Style', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', "'", '\\', 'n', "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', '[/', 'TA', 'BL', 'EST', 'Y', 'LES', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'buffer', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'syn', 'chron', 'ized', 'AST#modifiers#Right', 'AST#generic_type#Left', 'En', 'umer', 'ation', 'AST#type_arguments#Left', '<', 'K', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'keys', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#object_creation_expression#Left', 'new', 'Key', 'En', 'umer', 'ation', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Instance', 'Types', 'Result', 'desc', 'ribe', 'Instance', 'Types', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Instance', 'Types', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Instance', 'Types', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'AST#scoped_type_identifier#Left', 'Ref', 'Update', '.', 'Result', 'AST#scoped_type_identifier#Right', 'get', 'Result', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'rc', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Base', 'Path', 'M', 'apping', 'Result', 'update', 'Base', 'Path', 'M', 'apping', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Base', 'Path', 'M', 'apping', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Base', 'Path', 'M', 'apping', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Update', 'Document', 'Result', 'update', 'Document', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Update', 'Document', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Update', 'Document', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'Stream', 'File', 'Th', 'reshold', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'new', 'Limit', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'stream', 'File', 'Th', 'reshold', '=', 'new', 'Limit', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'String', 'Builder', 'AST#variable_declarator#Left', 'buffer', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"[', 'EX', 'TS', 'ST', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'ds', 'st', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Integer', '.', 'to', 'H', 'ex', 'String', 'AST#argument_list#Left', '(', '_', 'strings', 'Per', 'B', 'ucket', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'num', 'Info', 'Rec', 'ords', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#field_access#Left', '_', 's', 'st', 'Inf', 'os', '.', 'length', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'k', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'k', '<', 'AST#field_access#Left', '_', 's', 'st', 'Inf', 'os', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'k', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'in', 'fore', 'c', 'ord', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'k', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 'stre', 'amp', 'os', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Integer', '.', 'to', 'H', 'ex', 'String', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'AST#array_access#Left', '_', 's', 'st', 'Inf', 'os', '[', 'k', ']', 'AST#array_access#Right', '.', 'get', 'Stream', 'Pos', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', 'Ġ', 'Ġ', 'Ġ', 'Ġ.', 's', 'st', 'offset', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ', 'Ġ=', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Integer', '.', 'to', 'H', 'ex', 'String', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'AST#array_access#Left', '_', 's', 'st', 'Inf', 'os', '[', 'k', ']', 'AST#array_access#Right', '.', 'get', 'B', 'ucket', 'S', 'ST', 'Offset', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'append', 'AST#argument_list#Left', '(', '"', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'buffer', '.', 'append', 'AST#argument_list#Left', '(', '"', '[/', 'EX', 'TS', 'ST', ']', '\\', 'n', '"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'buffer', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'set', 'C', 'RC', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'c', 'rc', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'c', 'rc', 'AST#field_access#Right', '=', 'c', 'rc', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Rev', 'Filter', 'get', 'Rev', 'Filter', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'filter', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'S', 'r', 'nd', 'Pref', 'ix', 'Query', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'String', 'prefix', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'bo', 'olean', 'qu', 'oted', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'char', 'tr', 'unc', 'ator', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'super', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'qu', 'oted', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'prefix', 'AST#field_access#Right', '=', 'prefix', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'prefix', 'Ref', '=', 'AST#object_creation_expression#Left', 'new', 'Bytes', 'Ref', 'AST#argument_list#Left', '(', 'prefix', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'tr', 'unc', 'ator', 'AST#field_access#Right', '=', 'tr', 'unc', 'ator', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'byte', 'read', 'Byte', 'AST#local_variable_declaration#Right', 'AST#ERROR#Left', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'th', 'rows', 'IO', 'Exception', '{', 'AST#ERROR#Right', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'v', '=', 'AST#method_invocation#Left', 'is', '.', 'read', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'v', '==', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#throw_statement#Left', 'throw', 'AST#object_creation_expression#Left', 'new', 'EO', 'F', 'Exception', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ';', 'AST#throw_statement#Right', 'AST#if_statement#Right', 'AST#return_statement#Left', 'return', 'AST#cast_expression#Left', '(', 'byte', ')', 'v', 'AST#cast_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Get', 'Work', 'Group', 'Result', 'get', 'Work', 'Group', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Get', 'Work', 'Group', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Get', 'Work', 'Group', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Put', 'Block', 'Public', 'Access', 'Configuration', 'Result', 'put', 'Block', 'Public', 'Access', 'Configuration', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Put', 'Block', 'Public', 'Access', 'Configuration', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Put', 'Block', 'Public', 'Access', 'Configuration', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'String', 'to', 'String', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'final', 'String', 'Builder', 'AST#variable_declarator#Left', 'r', '=', 'AST#object_creation_expression#Left', 'new', 'String', 'Builder', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', "'", "['", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'count', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'i', '>', '0', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', '",', 'Ġ"', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', 'AST#array_access#Left', 'ent', 'ries', '[', 'i', ']', 'AST#array_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'r', '.', 'append', 'AST#argument_list#Left', '(', "']", "'", ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'r', '.', 'to', 'String', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'get', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'index', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'check', 'Index', 'AST#argument_list#Left', '(', 'index', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'byte', 'Buffer', '.', 'get', 'Int', 'AST#argument_list#Left', '(', 'AST#binary_expression#Left', 'index', '*', 'AST#field_access#Left', 'Size', 'Of', '.', 'INT', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Create', 'Al', 'bum', 'Request', 'AST#ERROR#Left', '(', ')', '{', 'super', '(', '"', 'Cloud', 'Photo', '"', ',', '"', '2017', '-', '07', '-', '11', '"', ',', '"', 'Create', 'Al', 'bum', '"', ',', '"', 'cloud', 'photo', '"', ')', ';', 'AST#ERROR#Right', 'set', 'Prot', 'ocol', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#parenthesized_expression#Left', '(', 'AST#field_access#Left', 'Prot', 'ocol', 'Type', '.', 'HT', 'TPS', 'AST#field_access#Right', ')', 'AST#parenthesized_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'File', 'Tree', 'Iterator', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'File', 'root', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'FS', 'fs', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Working', 'Tree', 'Options', 'options', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#ERROR#Left', 'this', 'AST#inferred_parameters#Left', '(', 'root', ',', 'fs', ',', 'options', ',', 'Default', 'File', 'Mode', 'Str', 'ategy', 'AST#ERROR#Left', '.', 'INST', 'ANCE', 'AST#ERROR#Right', ')', 'AST#inferred_parameters#Right', 'AST#ERROR#Right', ';', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'byte', 'At', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'int', 'id', 'x', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#field_access#Left', 'AST#array_access#Left', 'bytes', '[', 'id', 'x', ']', 'AST#array_access#Right', '.', 'value', 'AST#field_access#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Type', 'Registration', 'Result', 'desc', 'ribe', 'Type', 'Registration', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Type', 'Registration', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Type', 'Registration', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Termin', 'ate', 'Inst', 'ances', 'Result', 'termin', 'ate', 'Inst', 'ances', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Termin', 'ate', 'Inst', 'ances', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Termin', 'ate', 'Inst', 'ances', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Double', 'Buffer', 'du', 'pl', 'icate', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Byte', 'Buffer', 'AST#variable_declarator#Left', 'bb', '=', 'AST#method_invocation#Left', 'AST#method_invocation#Left', 'byte', 'Buffer', '.', 'du', 'pl', 'icate', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '.', 'order', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'byte', 'Buffer', '.', 'order', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#local_variable_declaration#Left', 'Double', 'To', 'Byte', 'Buffer', 'Adapter', 'AST#variable_declarator#Left', 'buf', '=', 'AST#object_creation_expression#Left', 'new', 'Double', 'To', 'Byte', 'Buffer', 'Adapter', 'AST#argument_list#Left', '(', 'bb', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'buf', '.', 'limit', 'AST#field_access#Right', '=', 'limit', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'buf', '.', 'position', 'AST#field_access#Right', '=', 'position', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'buf', '.', 'mark', 'AST#field_access#Right', '=', 'mark', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'buf', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#ERROR#Left', 'public', 'OR', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Sem', 'antic', 'Context', 'a', 'AST#formal_parameter#Right', ',', 'AST#formal_parameter#Left', 'Sem', 'antic', 'Context', 'b', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#ERROR#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'Set', 'AST#type_arguments#Left', '<', 'Sem', 'antic', 'Context', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'oper', 'ands', '=', 'AST#object_creation_expression#Left', 'new', 'AST#generic_type#Left', 'Hash', 'Set', 'AST#type_arguments#Left', '<', 'Sem', 'antic', 'Context', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'a', 'instance', 'of', 'OR', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'oper', 'ands', '.', 'add', 'All', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Ar', 'rays', '.', 'as', 'List', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'AST#parenthesized_expression#Left', '(', 'AST#cast_expression#Left', '(', 'OR', ')', 'a', 'AST#cast_expression#Right', ')', 'AST#parenthesized_expression#Right', '.', 'op', 'nd', 's', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'else', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'oper', 'ands', '.', 'add', 'AST#argument_list#Left', '(', 'a', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#instanceof_expression#Left', 'b', 'instance', 'of', 'OR', 'AST#instanceof_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'oper', 'ands', '.', 'add', 'All', 'AST#argument_list#Left', '(', 'AST#method_invocation#Left', 'Ar', 'rays', '.', 'as', 'List', 'AST#argument_list#Left', '(', 'AST#field_access#Left', 'AST#parenthesized_expression#Left', '(', 'AST#cast_expression#Left', '(', 'OR', ')', 'b', 'AST#cast_expression#Right', ')', 'AST#parenthesized_expression#Right', '.', 'op', 'nd', 's', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'else', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'oper', 'ands', '.', 'add', 'AST#argument_list#Left', '(', 'b', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#if_statement#Right', 'AST#local_variable_declaration#Left', 'AST#generic_type#Left', 'List', 'AST#type_arguments#Left', '<', 'Pre', 'ced', 'ence', 'Pred', 'icate', '>', 'AST#type_arguments#Right', 'AST#generic_type#Right', 'AST#variable_declarator#Left', 'pre', 'ced', 'ence', 'Pred', 'icates', '=', 'AST#method_invocation#Left', 'filter', 'Pre', 'ced', 'ence', 'Pred', 'icates', 'AST#argument_list#Left', '(', 'oper', 'ands', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#unary_expression#Left', '!', 'AST#method_invocation#Left', 'pre', 'ced', 'ence', 'Pred', 'icates', '.', 'is', 'Empty', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#unary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'Pre', 'ced', 'ence', 'Pred', 'icate', 'AST#variable_declarator#Left', 'red', 'uced', '=', 'AST#method_invocation#Left', 'Col', 'lections', '.', 'max', 'AST#argument_list#Left', '(', 'pre', 'ced', 'ence', 'Pred', 'icates', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'oper', 'ands', '.', 'add', 'AST#argument_list#Left', '(', 'red', 'uced', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'AST#field_access#Left', 'this', '.', 'op', 'nd', 's', 'AST#field_access#Right', '=', 'AST#method_invocation#Left', 'oper', 'ands', '.', 'to', 'Array', 'AST#argument_list#Left', '(', 'AST#array_creation_expression#Left', 'new', 'Sem', 'antic', 'Context', 'AST#dimensions_expr#Left', '[', 'AST#method_invocation#Left', 'oper', 'ands', '.', 'size', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ']', 'AST#dimensions_expr#Right', 'AST#array_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'void', 'serial', 'ize', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Little', 'End', 'ian', 'Output', 'out', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'out', '.', 'write', 'Short', 'AST#argument_list#Left', '(', 'AST#field_access#Left', '_', 'form', 'ats', '.', 'length', 'AST#field_access#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', 'AST#for_statement#Left', 'for', '(', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'i', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#binary_expression#Left', 'i', '<', 'AST#field_access#Left', '_', 'form', 'ats', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ';', 'AST#update_expression#Left', 'i', '++', 'AST#update_expression#Right', ')', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#method_invocation#Left', 'AST#array_access#Left', '_', 'form', 'ats', '[', 'i', ']', 'AST#array_access#Right', '.', 'serial', 'ize', 'AST#argument_list#Left', '(', 'out', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#for_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Desc', 'ribe', 'Availability', 'Options', 'Result', 'desc', 'ribe', 'Availability', 'Options', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Desc', 'ribe', 'Availability', 'Options', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Desc', 'ribe', 'Availability', 'Options', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'get', 'Offset', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'offset', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'AST#modifiers#Left', 'public', 'static', 'AST#modifiers#Right', 'AST#array_type#Left', 'float', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'grow', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'AST#array_type#Left', 'float', 'AST#dimensions#Left', '[', ']', 'AST#dimensions#Right', 'AST#array_type#Right', 'array', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'grow', 'AST#argument_list#Left', '(', 'array', ',', 'AST#binary_expression#Left', '1', '+', 'AST#field_access#Left', 'array', '.', 'length', 'AST#field_access#Right', 'AST#binary_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'List', 'Met', 'rics', 'Result', 'list', 'Met', 'rics', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'list', 'Met', 'rics', 'AST#argument_list#Left', '(', 'AST#object_creation_expression#Left', 'new', 'List', 'Met', 'rics', 'Request', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#object_creation_expression#Right', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'int', 'find', 'First', 'Record', 'Loc', 'By', 'S', 'id', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'short', 'sid', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#local_variable_declaration#Left', 'int', 'AST#variable_declarator#Left', 'index', '=', '0', 'AST#variable_declarator#Right', ';', 'AST#local_variable_declaration#Right', 'AST#enhanced_for_statement#Left', 'for', '(', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'AST#scoped_type_identifier#Left', 'org', '.', 'apache', 'AST#scoped_type_identifier#Right', '.', 'po', 'i', 'AST#scoped_type_identifier#Right', '.', 'h', 'ss', 'f', 'AST#scoped_type_identifier#Right', '.', 'record', 'AST#scoped_type_identifier#Right', '.', 'Record', 'AST#scoped_type_identifier#Right', 'record', ':', 'AST#method_invocation#Left', 'rec', 'ords', '.', 'get', 'Rec', 'ords', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ')', 'AST#block#Left', '{', 'AST#if_statement#Left', 'if', 'AST#parenthesized_expression#Left', '(', 'AST#binary_expression#Left', 'AST#method_invocation#Left', 'record', '.', 'get', 'S', 'id', 'AST#argument_list#Left', '(', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', '==', 'sid', 'AST#binary_expression#Right', ')', 'AST#parenthesized_expression#Right', 'AST#block#Left', '{', 'AST#return_statement#Left', 'return', 'index', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#if_statement#Right', 'AST#expression_statement#Left', 'AST#update_expression#Left', 'index', '++', 'AST#update_expression#Right', ';', 'AST#expression_statement#Right', '}', 'AST#block#Right', 'AST#enhanced_for_statement#Right', 'AST#return_statement#Left', 'return', 'AST#unary_expression#Left', '-', '1', 'AST#unary_expression#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
['AST#program#Left', 'AST#local_variable_declaration#Left', 'public', 'Delete', 'V', 'pn', 'Connection', 'Route', 'Result', 'delete', 'V', 'pn', 'Connection', 'Route', 'AST#local_variable_declaration#Right', 'AST#formal_parameters#Left', '(', 'AST#formal_parameter#Left', 'Delete', 'V', 'pn', 'Connection', 'Route', 'Request', 'request', 'AST#formal_parameter#Right', ')', 'AST#formal_parameters#Right', 'AST#block#Left', '{', 'AST#expression_statement#Left', 'AST#assignment_expression#Left', 'request', '=', 'AST#method_invocation#Left', 'before', 'Client', 'Exec', 'ution', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', 'AST#assignment_expression#Right', ';', 'AST#expression_statement#Right', 'AST#return_statement#Left', 'return', 'AST#method_invocation#Left', 'execute', 'Delete', 'V', 'pn', 'Connection', 'Route', 'AST#argument_list#Left', '(', 'request', ')', 'AST#argument_list#Right', 'AST#method_invocation#Right', ';', 'AST#return_statement#Right', '}', 'AST#block#Right', 'AST#program#Right']
